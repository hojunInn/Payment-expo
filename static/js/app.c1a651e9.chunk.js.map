{"version":3,"sources":["src/graphql/generated.ts","src/graphql/client.ts","src/utils/money.ts","src/merchant.ts","src/screens/payment/point/functions.ts","src/screens/payment/point/index.tsx","src/navigation/PaymentStack.tsx","src/utils/datetime.ts","src/screens/payment/subscribe/PaySubscribe.tsx","src/screens/payment/subscribe/index.tsx","src/navigation/SubscribeStack.tsx","src/navigation/Routes.tsx","App.tsx"],"names":["Enum_Activity_Type","Enum_Activity_Rewardoption","Enum_Activity_Status","Enum_Customer_Subscriptionplan","Enum_Customer_Paymentfrequency","Enum_Customer_Status","Enum_Feeds_Type","Enum_Group_Grouptype","Enum_Group_Status","Enum_Interaction_Type","Enum_Invitation_Scope","Enum_Memberinteraction_Type","Enum_Memberrole_Type","Enum_Memberrole_Scope","Enum_Memberrole_Status","Enum_Member_Userclass","Enum_Pointpurchase_Currencyunit","Enum_Post_Type","Enum_Post_Status","Enum_Question_Type","Enum_Question_Status","Enum_Transaction_Transactiontype","Enum_Transaction_Transactionstatus","Enum_Workspace_Subscriptionplan","Enum_Workspace_Status","Enum_Componentactivitychoiceoption_Status","Enum_Componentactivityscaleoption_Type","Enum_Componentactivitytemplateoption_Scope","Enum_Componentcommonrsvp_Status","Enum_Componentcommonrsvp_Type","Enum_Componenthomepagecompanyevent_Category","Enum_Componentinteractionlike_Type","Enum_Componentinteractionreport_Reason","Enum_Componentrewardsettlementinstruction_Paymentmethod","PublicationState","CacheControlScope","httpLink","HttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","CheckValidationDocument","gql","useCheckValidationMutation","baseOptions","Apollo","InitPaymentDocument","RoutinePaymentDocument","merchant","numberWithCommas","number","toString","replace","returnMerchantUid","price","foundMerchant","other","point_100000","point_200000","point_300000","point_500000","point_1000000","point_3000000","PayPointHomeScreen","useState","setPrice","showOtherPrice","setShowOtherPrice","checkValidation","windowDimensions","useWindowDimensions","paymentInput","useContext","ThemeContext","pg","pay_method","merchant_uid","Date","getTime","name","amount","String","buyer_email","buyer_name","buyer_tel","buyer_addr","callPaymentModule","IMP","request_pay","rsp","imp_uid","console","log","variables","input","then","result","containerStyle","backgroundColor","borderBottomWidth","rightComponent","onPress","Linking","openURL","icon","type","size","color","centerComponent","Text","style","fontSize","fontWeight","View","justifyContent","alignItems","height","showsVerticalScrollIndicator","paddingHorizontal","Surface","styles","container","title","titleStyle","buttonStyle","width","alignSelf","marginBottom","FlatList","data","renderItem","item","index","priceTag","horizontal","marginVertical","flexDirection","textDecorationLine","otherPriceContainer","TextInput","selectionColor","placeholder","placeholderTextColor","inputFont","textAlign","onFocus","clearTextOnFocus","value","maxLength","onChangeText","text","Number","replaceAll","disabled","StyleSheet","create","padding","elevation","borderRadius","rowContainer","marginHorizontal","borderColor","borderWidth","borderBottomColor","lineHeight","letterSpacing","paymentStack","createStackNavigator","PaymentStackScreens","Navigator","headerMode","Screen","component","returnDate","date","getFullYear","getMonth","getDate","window","$","jQuery","PaySubscribe","navigation","route","numOfMember","setNumOfMember","toggle","setToggle","pricePerMember","setPricePerMember","totalPrice","setTotalPrice","startDate","setStartDate","dueDate","setDueDate","showDateInput","setShowDateInput","useInitPaymentMutation","initPayment","customer_uid","user_name","Platform","OS","params","userCode","paramsToString","JSON","stringify","ReactNativeWebView","postMessage","useEffect","newDueDate","setFullYear","setMonth","calcTotalPrice","goBack","flex","ScrollView","bigSurface","keyboardType","marginTop","subtitle","Switch","onValueChange","trackColor","thumbColor","surface","marginRight","buttonTitleFont","buttonFont","SubscribePlanHome","titleFont","smallContainer","description","buttonTitle","ButtonTag","buttonPressed","navigate","Tag","dummy","contentContainerStyle","ListHeaderComponent","row2","paddingVertical","TagFont","SubscribeStack","SubscribeStackScreens","Routes","query","location","search","split","NavigationContainer","App","hostname","origin","apolloClient"],"mappings":"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","file":"static/js/app.c1a651e9.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** Input type for dynamic zone option of IdeaBox */\n  IdeaBoxOptionDynamicZoneInput: any;\n  /** Input type for dynamic zone action of Interaction */\n  InteractionActionDynamicZoneInput: any;\n  /** Input type for dynamic zone option of Poll */\n  PollOptionDynamicZoneInput: any;\n  /** Input type for dynamic zone content of Post */\n  PostContentDynamicZoneInput: any;\n  /** Input type for dynamic zone option of Qna */\n  QnaOptionDynamicZoneInput: any;\n  /** Input type for dynamic zone content of Question */\n  QuestionContentDynamicZoneInput: any;\n  /** Input type for dynamic zone option of Quiz */\n  QuizOptionDynamicZoneInput: any;\n  /** Input type for dynamic zone answers of Quiz */\n  QuizAnswersDynamicZoneInput: any;\n  /** Input type for dynamic zone option of Survey */\n  SurveyOptionDynamicZoneInput: any;\n  /** Input type for dynamic zone answer of ComponentPostAnswerList */\n  ComponentPostAnswerListAnswerDynamicZoneInput: any;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** A time string with format: HH:mm:ss.SSS */\n  Time: any;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** The `Long` scalar type represents 52-bit integers */\n  Long: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n};\n\nexport type SurveyQuestionInput = {\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['SurveyOptionDynamicZoneInput']>;\n  questions?: Maybe<Array<Maybe<QuestionInput>>>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n};\n\nexport type QuizQuestionInput = {\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  tier?: Maybe<Array<Maybe<ComponentActivityTierInput>>>;\n  answers?: Maybe<Array<Maybe<Scalars['QuizAnswersDynamicZoneInput']>>>;\n  option: Array<Maybe<Scalars['QuizOptionDynamicZoneInput']>>;\n  questions?: Maybe<Array<Maybe<QuestionInput>>>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n};\n\nexport type PollQuestionInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['PollOptionDynamicZoneInput']>;\n  question?: Maybe<QuestionInput>;\n};\n\nexport type QnaOptionInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['QnaOptionDynamicZoneInput']>;\n  responders?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type IdeaBoxOptionInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['IdeaBoxOptionDynamicZoneInput']>;\n};\n\nexport type CreateDeforaActInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  isAnonymous?: Maybe<Scalars['Boolean']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  deadline?: Maybe<Scalars['DateTime']>;\n  rewardOption?: Maybe<Enum_Activity_Rewardoption>;\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n  type?: Maybe<Enum_Activity_Type>;\n  status?: Maybe<Enum_Activity_Status>;\n  isShowResultAfterDeadline?: Maybe<Scalars['Boolean']>;\n  idea_box?: Maybe<IdeaBoxOptionInput>;\n  qna?: Maybe<QnaOptionInput>;\n  poll?: Maybe<PollQuestionInput>;\n  survey?: Maybe<SurveyQuestionInput>;\n  quiz?: Maybe<QuizQuestionInput>;\n  group?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  creator?: Maybe<Scalars['ID']>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type CreateDeforaActivityInput = {\n  data?: Maybe<CreateDeforaActInput>;\n  activityId?: Maybe<Scalars['ID']>;\n};\n\nexport type JoinActivityInput = {\n  activityId: Scalars['ID'];\n  workspaceMemberId?: Maybe<Scalars['ID']>;\n  groupMemberId?: Maybe<Scalars['ID']>;\n  username?: Maybe<Scalars['String']>;\n};\n\nexport type SummarizeResponseData = {\n  __typename?: 'SummarizeResponseData';\n  question?: Maybe<Question>;\n  response?: Maybe<Scalars['JSON']>;\n};\n\nexport type SummarizeResponse = {\n  __typename?: 'SummarizeResponse';\n  data: Array<SummarizeResponseData>;\n  rank?: Maybe<Scalars['JSON']>;\n};\n\nexport type JoinActivityPayload = {\n  __typename?: 'JoinActivityPayload';\n  activity?: Maybe<Activity>;\n  memberRole?: Maybe<MemberRole>;\n};\n\nexport type DeleteEventInput = {\n  activityIds?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type DeleteEventPayload = {\n  __typename?: 'deleteEventPayload';\n  activityList?: Maybe<Array<Maybe<Activity>>>;\n};\n\nexport type SendPayloadInput = {\n  targetId: Scalars['String'];\n  payload: Scalars['JSON'];\n};\n\nexport type CreateDeforaGroupInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  groupType: Enum_Group_Grouptype;\n  workspace?: Maybe<Scalars['ID']>;\n  workspaceMemberId: Scalars['ID'];\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  attachment?: Maybe<Scalars['ID']>;\n  username: Scalars['String'];\n  memberAttachment?: Maybe<Scalars['ID']>;\n  boardIds?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type UpdateDeforaGroupInput = {\n  where: InputId;\n  data?: Maybe<EditDeforaGroupInput>;\n};\n\nexport type JoinDeforaGroupInput = {\n  groupId: Scalars['ID'];\n  workspaceMemberId: Scalars['ID'];\n  username: Scalars['String'];\n  workspace?: Maybe<Scalars['ID']>;\n  invitationCode: Scalars['Int'];\n  memberAttachment?: Maybe<Scalars['ID']>;\n};\n\nexport type GroupAndMemberPayload = {\n  __typename?: 'groupAndMemberPayload';\n  group: Group;\n  member: Member;\n};\n\nexport type MemberRoleInfoResponse = {\n  __typename?: 'memberRoleInfoResponse';\n  memberRole: MemberRole;\n  groupList?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type EditDeforaGroupInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n  boardIds?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type UpdateStatusInput = {\n  interactionID?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  settingStatus?: Maybe<Enum_Group_Status>;\n  resolverName?: Maybe<Scalars['String']>;\n  resolveReason?: Maybe<Scalars['String']>;\n};\n\nexport type SortedReportsInput = {\n  workspaceID?: Maybe<Scalars['ID']>;\n};\n\nexport type ReportDataType = {\n  __typename?: 'ReportDataType';\n  id: Scalars['String'];\n  reportId: Scalars['String'];\n  title?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  avatar?: Maybe<Scalars['String']>;\n  contentCreated?: Maybe<Scalars['DateTime']>;\n  numberOfMember?: Maybe<Scalars['Int']>;\n  numberOfReport?: Maybe<Scalars['Int']>;\n  reportedDate?: Maybe<Scalars['DateTime']>;\n  reportedReason?: Maybe<Scalars['String']>;\n  reporterName?: Maybe<Scalars['String']>;\n  resolverName?: Maybe<Scalars['String']>;\n  resolvedResult?: Maybe<Scalars['String']>;\n  resolvedReason?: Maybe<Scalars['String']>;\n  resolvedDate?: Maybe<Scalars['DateTime']>;\n};\n\nexport type SubDataType = {\n  __typename?: 'SubDataType';\n  id: Scalars['ID'];\n  data: Array<Maybe<ReportDataType>>;\n};\n\nexport type UpdateStatusPayload = {\n  __typename?: 'updateStatusPayload';\n  success?: Maybe<Scalars['Boolean']>;\n};\n\nexport type SortedReportsPayload = {\n  __typename?: 'sortedReportsPayload';\n  resolvedData?: Maybe<Array<Maybe<ReportDataType>>>;\n  unResolvedData?: Maybe<Array<Maybe<ReportDataType>>>;\n  resolvedSubData?: Maybe<Array<Maybe<SubDataType>>>;\n  unResolvedSubData?: Maybe<Array<Maybe<SubDataType>>>;\n};\n\nexport type SendInvitationEmailInput = {\n  invitationId?: Maybe<Scalars['String']>;\n};\n\nexport type SendInvitationEmailPayload = {\n  __typename?: 'sendInvitationEmailPayload';\n  data: Array<SummarizeResponseData>;\n  rank?: Maybe<Scalars['JSON']>;\n};\n\nexport type InvitationCodeInfoResponse = {\n  __typename?: 'invitationCodeInfoResponse';\n  isValid: Scalars['Boolean'];\n  invitationId?: Maybe<Scalars['String']>;\n  workspaceId?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  workspaceName?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type VerifySmsInput = {\n  invitationCode: Scalars['String'];\n  phone: Scalars['String'];\n};\n\nexport type InviteMemberInput = {\n  emailList?: Maybe<Array<Scalars['String']>>;\n  workspaceId: Scalars['String'];\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type AdminInvitedInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n  invitationCode: Scalars['String'];\n  workspaceKey?: Maybe<Scalars['String']>;\n};\n\nexport type AdminInvitedPayload = {\n  __typename?: 'adminInvitedPayload';\n  valid: Scalars['Boolean'];\n  member?: Maybe<Member>;\n  workspace?: Maybe<Workspace>;\n};\n\nexport type StartQrcodeCommInput = {\n  finalHash?: Maybe<Scalars['String']>;\n  pubKey?: Maybe<Scalars['String']>;\n};\n\nexport type StartQrcodeCommPayload = {\n  __typename?: 'startQrcodeCommPayload';\n  id?: Maybe<Scalars['ID']>;\n  peer?: Maybe<Scalars['String']>;\n};\n\nexport type MessageQrcodeCommInput = {\n  peer?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type MessageQrcodeCommPayload = {\n  __typename?: 'messageQrcodeCommPayload';\n  qrcodeComm?: Maybe<QrcodeComm>;\n};\n\nexport type BackupRecoveryInput = {\n  encryptedData?: Maybe<Scalars['String']>;\n  backupAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BackupRecoveryPayload = {\n  __typename?: 'backupRecoveryPayload';\n  recovery?: Maybe<Recovery>;\n};\n\nexport type Product = {\n  __typename?: 'Product';\n  productId?: Maybe<Scalars['String']>;\n  brandTitle?: Maybe<Scalars['String']>;\n  productTitle?: Maybe<Scalars['String']>;\n  productImg1?: Maybe<Scalars['String']>;\n  productImg2?: Maybe<Scalars['String']>;\n  productType?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['Int']>;\n  priceOrg?: Maybe<Scalars['Int']>;\n  productSaleType?: Maybe<Scalars['String']>;\n  brandId?: Maybe<Scalars['String']>;\n  content?: Maybe<Scalars['String']>;\n  caution?: Maybe<Scalars['String']>;\n  useArea?: Maybe<Scalars['String']>;\n  bonusProductIds?: Maybe<Scalars['String']>;\n  tags?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['String']>;\n  popular?: Maybe<Scalars['String']>;\n  recent?: Maybe<Scalars['String']>;\n};\n\nexport type Brand = {\n  __typename?: 'Brand';\n  brandId?: Maybe<Scalars['String']>;\n  brandTitle?: Maybe<Scalars['String']>;\n  categoryTitle?: Maybe<Scalars['String']>;\n  categoryId?: Maybe<Scalars['String']>;\n  brandImg1?: Maybe<Scalars['String']>;\n  brandImg2?: Maybe<Scalars['String']>;\n};\n\nexport type Category = {\n  __typename?: 'Category';\n  categoryId?: Maybe<Scalars['String']>;\n  categoryTitle?: Maybe<Scalars['String']>;\n  categoryTitleEng?: Maybe<Scalars['String']>;\n};\n\nexport type PurchaseInfo = {\n  __typename?: 'PurchaseInfo';\n  userId?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  orId?: Maybe<Scalars['String']>;\n  trId?: Maybe<Scalars['String']>;\n  receiverMobile?: Maybe<Scalars['String']>;\n  cpId?: Maybe<Scalars['String']>;\n  cpPartnerId?: Maybe<Scalars['String']>;\n  brandId?: Maybe<Scalars['String']>;\n  brandTitle?: Maybe<Scalars['String']>;\n  productId?: Maybe<Scalars['Int']>;\n  productType?: Maybe<Scalars['String']>;\n  productSaletype?: Maybe<Scalars['String']>;\n  productTitle?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['Int']>;\n  pinNumber?: Maybe<Scalars['String']>;\n  pinindexnumber?: Maybe<Scalars['String']>;\n  pinstatus?: Maybe<Scalars['String']>;\n  expdate?: Maybe<Scalars['String']>;\n  mmsstatus?: Maybe<Scalars['Int']>;\n  mmscnt?: Maybe<Scalars['Int']>;\n  mmscompletedate?: Maybe<Scalars['String']>;\n  recdate?: Maybe<Scalars['String']>;\n  content?: Maybe<Scalars['String']>;\n  caution?: Maybe<Scalars['String']>;\n  useArea?: Maybe<Scalars['String']>;\n  exptext?: Maybe<Scalars['String']>;\n  productImg1?: Maybe<Scalars['String']>;\n  productImg2?: Maybe<Scalars['String']>;\n  priceOrg?: Maybe<Scalars['Int']>;\n  createdAt?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['String']>;\n};\n\nexport type ProductListResponse = {\n  __typename?: 'ProductListResponse';\n  brands?: Maybe<Array<Maybe<Scalars['String']>>>;\n  products?: Maybe<Array<Maybe<Product>>>;\n};\n\nexport type ProductInfo = {\n  __typename?: 'ProductInfo';\n  productId?: Maybe<Scalars['String']>;\n  brandTitle?: Maybe<Scalars['String']>;\n  productTitle?: Maybe<Scalars['String']>;\n  productImg1?: Maybe<Scalars['String']>;\n  productImg2?: Maybe<Scalars['String']>;\n  productType?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['Int']>;\n  priceOrg?: Maybe<Scalars['Int']>;\n  productSaleType?: Maybe<Scalars['String']>;\n  brandId?: Maybe<Scalars['String']>;\n  content?: Maybe<Scalars['String']>;\n  caution?: Maybe<Scalars['String']>;\n  useArea?: Maybe<Scalars['String']>;\n  bonusProductIds?: Maybe<Scalars['String']>;\n  tags?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['String']>;\n  policyExpextend?: Maybe<Scalars['String']>;\n  policyRefund?: Maybe<Scalars['String']>;\n};\n\nexport type UserPoints = {\n  __typename?: 'UserPoints';\n  points?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['String']>;\n};\n\nexport type PurchaseCouponPayload = {\n  __typename?: 'PurchaseCouponPayload';\n  pointsBefore?: Maybe<Scalars['Int']>;\n  points?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['String']>;\n  pinNumber?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['Int']>;\n};\n\nexport type RefundCouponPayload = {\n  __typename?: 'RefundCouponPayload';\n  estimateOnly?: Maybe<Scalars['Boolean']>;\n  refundPercent?: Maybe<Scalars['Int']>;\n  expdate?: Maybe<Scalars['String']>;\n  price?: Maybe<Scalars['Int']>;\n  points?: Maybe<Scalars['Int']>;\n  pointsWillbe?: Maybe<Scalars['Int']>;\n  userId?: Maybe<Scalars['String']>;\n};\n\nexport type PaymentResponsePayload = {\n  __typename?: 'paymentResponsePayload';\n  success?: Maybe<Scalars['Boolean']>;\n};\n\nexport type PurchaseCouponInput = {\n  productId: Scalars['String'];\n  buyerId: Scalars['String'];\n  buyerMobile?: Maybe<Scalars['String']>;\n  receiverId?: Maybe<Scalars['String']>;\n  receiverMobile?: Maybe<Scalars['String']>;\n};\n\nexport type PaymentInput = {\n  imp_uid?: Maybe<Scalars['String']>;\n  merchant_uid?: Maybe<Scalars['String']>;\n  customer_uid?: Maybe<Scalars['String']>;\n  day?: Maybe<Scalars['Int']>;\n  numOfMember?: Maybe<Scalars['Int']>;\n};\n\nexport type InitPaymentInput = {\n  user_name?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type InitPaymentPayload = {\n  __typename?: 'initPaymentPayload';\n  merchant_uid?: Maybe<Scalars['String']>;\n};\n\nexport type JoinWorkspaceWithCodeInput = {\n  invitationCode: Scalars['String'];\n  phone: Scalars['String'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  workspaceKey?: Maybe<Scalars['String']>;\n};\n\nexport type CreateWorkspaceFirstInput = {\n  email: Scalars['String'];\n  username: Scalars['String'];\n  password: Scalars['String'];\n  workspaceName: Scalars['String'];\n  linkpath?: Maybe<Scalars['String']>;\n};\n\nexport type JoinWorkSpaceResult = {\n  __typename?: 'joinWorkSpaceResult';\n  valid: Scalars['Boolean'];\n  workspace?: Maybe<Workspace>;\n  member?: Maybe<Member>;\n};\n\nexport type AdminAsMemberInput = {\n  phone: Scalars['String'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  workspaceId: Scalars['String'];\n};\n\nexport type UpdateWorkspaceKeyInput = {\n  workspaceId: Scalars['String'];\n  workspaceKey: Scalars['String'];\n};\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UserPermissionsPasswordPayload = {\n  __typename?: 'UserPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport enum Enum_Activity_Type {\n  Survey = 'SURVEY',\n  Poll = 'POLL',\n  Quiz = 'QUIZ',\n  Qna = 'QNA',\n  Ideabox = 'IDEABOX',\n  Board = 'BOARD'\n}\n\nexport enum Enum_Activity_Rewardoption {\n  Winner = 'WINNER',\n  Earlybird = 'EARLYBIRD',\n  Level = 'LEVEL',\n  All = 'ALL',\n  Limit = 'LIMIT'\n}\n\nexport enum Enum_Activity_Status {\n  Open = 'OPEN',\n  Closed = 'CLOSED',\n  Blocked = 'BLOCKED',\n  Deleted = 'DELETED',\n  DeleteByReport = 'DELETE_BY_REPORT',\n  KeepByReport = 'KEEP_BY_REPORT'\n}\n\n/** 그룹 안에 만들어지는 다양한 액티비티. 설문, 퀴즈, 폴, Q&A, 아이디어박스 등 기한이 정해진 활동이나 게시판처럼 기한이 정해져 있지 않고 게시물을 올릴 수 있는 공간에 해당. */\nexport type Activity = {\n  __typename?: 'Activity';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  type?: Maybe<Enum_Activity_Type>;\n  description?: Maybe<Scalars['String']>;\n  isAnonymous: Scalars['Boolean'];\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  deadline?: Maybe<Scalars['DateTime']>;\n  rewardOption?: Maybe<Enum_Activity_Rewardoption>;\n  rewardAllocationAmount: Scalars['Float'];\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n  status?: Maybe<Enum_Activity_Status>;\n  isShowResultAfterDeadline?: Maybe<Scalars['Boolean']>;\n  survey?: Maybe<Survey>;\n  group?: Maybe<Group>;\n  poll?: Maybe<Poll>;\n  quiz?: Maybe<Quiz>;\n  workspace?: Maybe<Workspace>;\n  creator?: Maybe<Member>;\n  idea_box?: Maybe<IdeaBox>;\n  qna?: Maybe<Qna>;\n  board?: Maybe<Board>;\n  posts?: Maybe<Array<Maybe<Post>>>;\n  interactions?: Maybe<Array<Maybe<Interaction>>>;\n  roles?: Maybe<Array<Maybe<MemberRole>>>;\n  attachment?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\n/** 그룹 안에 만들어지는 다양한 액티비티. 설문, 퀴즈, 폴, Q&A, 아이디어박스 등 기한이 정해진 활동이나 게시판처럼 기한이 정해져 있지 않고 게시물을 올릴 수 있는 공간에 해당. */\nexport type ActivityPostsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/** 그룹 안에 만들어지는 다양한 액티비티. 설문, 퀴즈, 폴, Q&A, 아이디어박스 등 기한이 정해진 활동이나 게시판처럼 기한이 정해져 있지 않고 게시물을 올릴 수 있는 공간에 해당. */\nexport type ActivityInteractionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/** 그룹 안에 만들어지는 다양한 액티비티. 설문, 퀴즈, 폴, Q&A, 아이디어박스 등 기한이 정해진 활동이나 게시판처럼 기한이 정해져 있지 않고 게시물을 올릴 수 있는 공간에 해당. */\nexport type ActivityRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/** 그룹 안에 만들어지는 다양한 액티비티. 설문, 퀴즈, 폴, Q&A, 아이디어박스 등 기한이 정해진 활동이나 게시판처럼 기한이 정해져 있지 않고 게시물을 올릴 수 있는 공간에 해당. */\nexport type ActivityAttachmentArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ActivityConnection = {\n  __typename?: 'ActivityConnection';\n  values?: Maybe<Array<Maybe<Activity>>>;\n  groupBy?: Maybe<ActivityGroupBy>;\n  aggregate?: Maybe<ActivityAggregator>;\n};\n\nexport type ActivityAggregator = {\n  __typename?: 'ActivityAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<ActivityAggregatorSum>;\n  avg?: Maybe<ActivityAggregatorAvg>;\n  min?: Maybe<ActivityAggregatorMin>;\n  max?: Maybe<ActivityAggregatorMax>;\n};\n\nexport type ActivityAggregatorSum = {\n  __typename?: 'ActivityAggregatorSum';\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type ActivityAggregatorAvg = {\n  __typename?: 'ActivityAggregatorAvg';\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type ActivityAggregatorMin = {\n  __typename?: 'ActivityAggregatorMin';\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type ActivityAggregatorMax = {\n  __typename?: 'ActivityAggregatorMax';\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type ActivityGroupBy = {\n  __typename?: 'ActivityGroupBy';\n  id?: Maybe<Array<Maybe<ActivityConnectionId>>>;\n  _id?: Maybe<Array<Maybe<ActivityConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<ActivityConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<ActivityConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<ActivityConnectionName>>>;\n  type?: Maybe<Array<Maybe<ActivityConnectionType>>>;\n  description?: Maybe<Array<Maybe<ActivityConnectionDescription>>>;\n  isAnonymous?: Maybe<Array<Maybe<ActivityConnectionIsAnonymous>>>;\n  effectiveDate?: Maybe<Array<Maybe<ActivityConnectionEffectiveDate>>>;\n  deadline?: Maybe<Array<Maybe<ActivityConnectionDeadline>>>;\n  rewardOption?: Maybe<Array<Maybe<ActivityConnectionRewardOption>>>;\n  rewardAllocationAmount?: Maybe<Array<Maybe<ActivityConnectionRewardAllocationAmount>>>;\n  rewardPaidAmount?: Maybe<Array<Maybe<ActivityConnectionRewardPaidAmount>>>;\n  status?: Maybe<Array<Maybe<ActivityConnectionStatus>>>;\n  isShowResultAfterDeadline?: Maybe<Array<Maybe<ActivityConnectionIsShowResultAfterDeadline>>>;\n  survey?: Maybe<Array<Maybe<ActivityConnectionSurvey>>>;\n  group?: Maybe<Array<Maybe<ActivityConnectionGroup>>>;\n  poll?: Maybe<Array<Maybe<ActivityConnectionPoll>>>;\n  quiz?: Maybe<Array<Maybe<ActivityConnectionQuiz>>>;\n  workspace?: Maybe<Array<Maybe<ActivityConnectionWorkspace>>>;\n  creator?: Maybe<Array<Maybe<ActivityConnectionCreator>>>;\n  idea_box?: Maybe<Array<Maybe<ActivityConnectionIdea_Box>>>;\n  qna?: Maybe<Array<Maybe<ActivityConnectionQna>>>;\n  board?: Maybe<Array<Maybe<ActivityConnectionBoard>>>;\n};\n\nexport type ActivityConnectionId = {\n  __typename?: 'ActivityConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnection_Id = {\n  __typename?: 'ActivityConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionCreatedAt = {\n  __typename?: 'ActivityConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionUpdatedAt = {\n  __typename?: 'ActivityConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionName = {\n  __typename?: 'ActivityConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionType = {\n  __typename?: 'ActivityConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionDescription = {\n  __typename?: 'ActivityConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionIsAnonymous = {\n  __typename?: 'ActivityConnectionIsAnonymous';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionEffectiveDate = {\n  __typename?: 'ActivityConnectionEffectiveDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionDeadline = {\n  __typename?: 'ActivityConnectionDeadline';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionRewardOption = {\n  __typename?: 'ActivityConnectionRewardOption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionRewardAllocationAmount = {\n  __typename?: 'ActivityConnectionRewardAllocationAmount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionRewardPaidAmount = {\n  __typename?: 'ActivityConnectionRewardPaidAmount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionStatus = {\n  __typename?: 'ActivityConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionIsShowResultAfterDeadline = {\n  __typename?: 'ActivityConnectionIsShowResultAfterDeadline';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionSurvey = {\n  __typename?: 'ActivityConnectionSurvey';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionGroup = {\n  __typename?: 'ActivityConnectionGroup';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionPoll = {\n  __typename?: 'ActivityConnectionPoll';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionQuiz = {\n  __typename?: 'ActivityConnectionQuiz';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionWorkspace = {\n  __typename?: 'ActivityConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionCreator = {\n  __typename?: 'ActivityConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionIdea_Box = {\n  __typename?: 'ActivityConnectionIdea_box';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionQna = {\n  __typename?: 'ActivityConnectionQna';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityConnectionBoard = {\n  __typename?: 'ActivityConnectionBoard';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<ActivityConnection>;\n};\n\nexport type ActivityInput = {\n  name: Scalars['String'];\n  type?: Maybe<Enum_Activity_Type>;\n  description?: Maybe<Scalars['String']>;\n  isAnonymous?: Maybe<Scalars['Boolean']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  deadline?: Maybe<Scalars['DateTime']>;\n  rewardOption?: Maybe<Enum_Activity_Rewardoption>;\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n  status?: Maybe<Enum_Activity_Status>;\n  isShowResultAfterDeadline?: Maybe<Scalars['Boolean']>;\n  posts?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  survey?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  poll?: Maybe<Scalars['ID']>;\n  quiz?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  idea_box?: Maybe<Scalars['ID']>;\n  qna?: Maybe<Scalars['ID']>;\n  board?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditActivityInput = {\n  name?: Maybe<Scalars['String']>;\n  type?: Maybe<Enum_Activity_Type>;\n  description?: Maybe<Scalars['String']>;\n  isAnonymous?: Maybe<Scalars['Boolean']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  deadline?: Maybe<Scalars['DateTime']>;\n  rewardOption?: Maybe<Enum_Activity_Rewardoption>;\n  rewardAllocationAmount?: Maybe<Scalars['Float']>;\n  rewardPaidAmount?: Maybe<Scalars['Float']>;\n  status?: Maybe<Enum_Activity_Status>;\n  isShowResultAfterDeadline?: Maybe<Scalars['Boolean']>;\n  posts?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  survey?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  poll?: Maybe<Scalars['ID']>;\n  quiz?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  idea_box?: Maybe<Scalars['ID']>;\n  qna?: Maybe<Scalars['ID']>;\n  board?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateActivityInput = {\n  data?: Maybe<ActivityInput>;\n};\n\nexport type CreateActivityPayload = {\n  __typename?: 'createActivityPayload';\n  activity?: Maybe<Activity>;\n};\n\nexport type UpdateActivityInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditActivityInput>;\n};\n\nexport type UpdateActivityPayload = {\n  __typename?: 'updateActivityPayload';\n  activity?: Maybe<Activity>;\n};\n\nexport type DeleteActivityInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteActivityPayload = {\n  __typename?: 'deleteActivityPayload';\n  activity?: Maybe<Activity>;\n};\n\nexport type Board = {\n  __typename?: 'Board';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  workspace?: Maybe<Workspace>;\n  isAnonymous: Scalars['Boolean'];\n  creator?: Maybe<Member>;\n  activities?: Maybe<Array<Maybe<Activity>>>;\n};\n\n\nexport type BoardActivitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type BoardConnection = {\n  __typename?: 'BoardConnection';\n  values?: Maybe<Array<Maybe<Board>>>;\n  groupBy?: Maybe<BoardGroupBy>;\n  aggregate?: Maybe<BoardAggregator>;\n};\n\nexport type BoardAggregator = {\n  __typename?: 'BoardAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type BoardGroupBy = {\n  __typename?: 'BoardGroupBy';\n  id?: Maybe<Array<Maybe<BoardConnectionId>>>;\n  _id?: Maybe<Array<Maybe<BoardConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<BoardConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<BoardConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<BoardConnectionIsTemplate>>>;\n  name?: Maybe<Array<Maybe<BoardConnectionName>>>;\n  description?: Maybe<Array<Maybe<BoardConnectionDescription>>>;\n  workspace?: Maybe<Array<Maybe<BoardConnectionWorkspace>>>;\n  isAnonymous?: Maybe<Array<Maybe<BoardConnectionIsAnonymous>>>;\n  creator?: Maybe<Array<Maybe<BoardConnectionCreator>>>;\n};\n\nexport type BoardConnectionId = {\n  __typename?: 'BoardConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnection_Id = {\n  __typename?: 'BoardConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionCreatedAt = {\n  __typename?: 'BoardConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionUpdatedAt = {\n  __typename?: 'BoardConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionIsTemplate = {\n  __typename?: 'BoardConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionName = {\n  __typename?: 'BoardConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionDescription = {\n  __typename?: 'BoardConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionWorkspace = {\n  __typename?: 'BoardConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionIsAnonymous = {\n  __typename?: 'BoardConnectionIsAnonymous';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardConnectionCreator = {\n  __typename?: 'BoardConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<BoardConnection>;\n};\n\nexport type BoardInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activities?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  workspace?: Maybe<Scalars['ID']>;\n  isAnonymous: Scalars['Boolean'];\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditBoardInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activities?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  workspace?: Maybe<Scalars['ID']>;\n  isAnonymous?: Maybe<Scalars['Boolean']>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateBoardInput = {\n  data?: Maybe<BoardInput>;\n};\n\nexport type CreateBoardPayload = {\n  __typename?: 'createBoardPayload';\n  board?: Maybe<Board>;\n};\n\nexport type UpdateBoardInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditBoardInput>;\n};\n\nexport type UpdateBoardPayload = {\n  __typename?: 'updateBoardPayload';\n  board?: Maybe<Board>;\n};\n\nexport type DeleteBoardInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteBoardPayload = {\n  __typename?: 'deleteBoardPayload';\n  board?: Maybe<Board>;\n};\n\nexport type Copyright = {\n  __typename?: 'Copyright';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  text?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type CopyrightInput = {\n  text?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCopyrightInput = {\n  text?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateCopyrightInput = {\n  data?: Maybe<EditCopyrightInput>;\n};\n\nexport type UpdateCopyrightPayload = {\n  __typename?: 'updateCopyrightPayload';\n  copyright?: Maybe<Copyright>;\n};\n\nexport type DeleteCopyrightPayload = {\n  __typename?: 'deleteCopyrightPayload';\n  copyright?: Maybe<Copyright>;\n};\n\nexport enum Enum_Customer_Subscriptionplan {\n  Trial = 'TRIAL',\n  Standard = 'STANDARD',\n  Basic = 'BASIC',\n  Enterprise = 'ENTERPRISE',\n  Academic = 'ACADEMIC',\n  Partner = 'PARTNER'\n}\n\nexport enum Enum_Customer_Paymentfrequency {\n  Monthly = 'MONTHLY',\n  Yearly = 'YEARLY',\n  Custom = 'CUSTOM',\n  None = 'NONE'\n}\n\nexport enum Enum_Customer_Status {\n  Active = 'ACTIVE',\n  Inactive = 'INACTIVE',\n  Pending = 'PENDING',\n  Terminated = 'TERMINATED'\n}\n\nexport type Customer = {\n  __typename?: 'Customer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name?: Maybe<Scalars['String']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  subscriptionPlan?: Maybe<Enum_Customer_Subscriptionplan>;\n  paymentFrequency?: Maybe<Enum_Customer_Paymentfrequency>;\n  contact?: Maybe<Array<Maybe<ComponentCommonContact>>>;\n  status?: Maybe<Enum_Customer_Status>;\n  workspaces?: Maybe<Array<Maybe<Workspace>>>;\n  referenceDocument?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type CustomerWorkspacesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type CustomerReferenceDocumentArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type CustomerConnection = {\n  __typename?: 'CustomerConnection';\n  values?: Maybe<Array<Maybe<Customer>>>;\n  groupBy?: Maybe<CustomerGroupBy>;\n  aggregate?: Maybe<CustomerAggregator>;\n};\n\nexport type CustomerAggregator = {\n  __typename?: 'CustomerAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type CustomerGroupBy = {\n  __typename?: 'CustomerGroupBy';\n  id?: Maybe<Array<Maybe<CustomerConnectionId>>>;\n  _id?: Maybe<Array<Maybe<CustomerConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<CustomerConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<CustomerConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<CustomerConnectionName>>>;\n  effectiveDate?: Maybe<Array<Maybe<CustomerConnectionEffectiveDate>>>;\n  subscriptionPlan?: Maybe<Array<Maybe<CustomerConnectionSubscriptionPlan>>>;\n  paymentFrequency?: Maybe<Array<Maybe<CustomerConnectionPaymentFrequency>>>;\n  status?: Maybe<Array<Maybe<CustomerConnectionStatus>>>;\n};\n\nexport type CustomerConnectionId = {\n  __typename?: 'CustomerConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnection_Id = {\n  __typename?: 'CustomerConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionCreatedAt = {\n  __typename?: 'CustomerConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionUpdatedAt = {\n  __typename?: 'CustomerConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionName = {\n  __typename?: 'CustomerConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionEffectiveDate = {\n  __typename?: 'CustomerConnectionEffectiveDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionSubscriptionPlan = {\n  __typename?: 'CustomerConnectionSubscriptionPlan';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionPaymentFrequency = {\n  __typename?: 'CustomerConnectionPaymentFrequency';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerConnectionStatus = {\n  __typename?: 'CustomerConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<CustomerConnection>;\n};\n\nexport type CustomerInput = {\n  name?: Maybe<Scalars['String']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  subscriptionPlan?: Maybe<Enum_Customer_Subscriptionplan>;\n  paymentFrequency?: Maybe<Enum_Customer_Paymentfrequency>;\n  contact?: Maybe<Array<Maybe<ComponentCommonContactInput>>>;\n  workspaces?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  referenceDocument?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  status?: Maybe<Enum_Customer_Status>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditCustomerInput = {\n  name?: Maybe<Scalars['String']>;\n  effectiveDate?: Maybe<Scalars['DateTime']>;\n  subscriptionPlan?: Maybe<Enum_Customer_Subscriptionplan>;\n  paymentFrequency?: Maybe<Enum_Customer_Paymentfrequency>;\n  contact?: Maybe<Array<Maybe<EditComponentCommonContactInput>>>;\n  workspaces?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  referenceDocument?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  status?: Maybe<Enum_Customer_Status>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateCustomerInput = {\n  data?: Maybe<CustomerInput>;\n};\n\nexport type CreateCustomerPayload = {\n  __typename?: 'createCustomerPayload';\n  customer?: Maybe<Customer>;\n};\n\nexport type UpdateCustomerInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditCustomerInput>;\n};\n\nexport type UpdateCustomerPayload = {\n  __typename?: 'updateCustomerPayload';\n  customer?: Maybe<Customer>;\n};\n\nexport type DeleteCustomerInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteCustomerPayload = {\n  __typename?: 'deleteCustomerPayload';\n  customer?: Maybe<Customer>;\n};\n\nexport enum Enum_Feeds_Type {\n  SysAppUpdate = 'SYS_APP_UPDATE',\n  SysNotice = 'SYS_NOTICE',\n  WsAnnouncement = 'WS_ANNOUNCEMENT',\n  WsAdminAccess = 'WS_ADMIN_ACCESS',\n  GroupNewActivity = 'GROUP_NEW_ACTIVITY',\n  GroupInvitation = 'GROUP_INVITATION',\n  GroupAnnouncement = 'GROUP_ANNOUNCEMENT',\n  GroupOwnershipTransfer = 'GROUP_OWNERSHIP_TRANSFER',\n  GroupReleased = 'GROUP_RELEASED',\n  ActivityLike = 'ACTIVITY_LIKE',\n  ActivityComment = 'ACTIVITY_COMMENT',\n  ActivityPoint = 'ACTIVITY_POINT',\n  Activity_24HrDeadline = 'ACTIVITY_24HR_DEADLINE',\n  Activity_1HrDeadline = 'ACTIVITY_1HR_DEADLINE',\n  ActivityClosed = 'ACTIVITY_CLOSED',\n  ActivityReply = 'ACTIVITY_REPLY',\n  ActivityCommentLike = 'ACTIVITY_COMMENT_LIKE',\n  ActivityMentioned = 'ACTIVITY_MENTIONED',\n  IdeaBoxNewProposal = 'IDEA_BOX_NEW_PROPOSAL',\n  IdeaBoxProposalLike = 'IDEA_BOX_PROPOSAL_LIKE',\n  IdeaBoxProposalComment = 'IDEA_BOX_PROPOSAL_COMMENT',\n  QnaAnswer = 'QNA_ANSWER'\n}\n\nexport type Feeds = {\n  __typename?: 'Feeds';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  target: Scalars['String'];\n  type: Enum_Feeds_Type;\n  content?: Maybe<ComponentFeedCotentContent>;\n  navigation?: Maybe<ComponentNavigationNavigation>;\n  timestamp?: Maybe<Scalars['String']>;\n  isRead?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type FeedsConnection = {\n  __typename?: 'FeedsConnection';\n  values?: Maybe<Array<Maybe<Feeds>>>;\n  groupBy?: Maybe<FeedsGroupBy>;\n  aggregate?: Maybe<FeedsAggregator>;\n};\n\nexport type FeedsAggregator = {\n  __typename?: 'FeedsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FeedsGroupBy = {\n  __typename?: 'FeedsGroupBy';\n  id?: Maybe<Array<Maybe<FeedsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FeedsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FeedsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FeedsConnectionUpdatedAt>>>;\n  target?: Maybe<Array<Maybe<FeedsConnectionTarget>>>;\n  type?: Maybe<Array<Maybe<FeedsConnectionType>>>;\n  content?: Maybe<Array<Maybe<FeedsConnectionContent>>>;\n  navigation?: Maybe<Array<Maybe<FeedsConnectionNavigation>>>;\n  timestamp?: Maybe<Array<Maybe<FeedsConnectionTimestamp>>>;\n  isRead?: Maybe<Array<Maybe<FeedsConnectionIsRead>>>;\n  published_at?: Maybe<Array<Maybe<FeedsConnectionPublished_At>>>;\n};\n\nexport type FeedsConnectionId = {\n  __typename?: 'FeedsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnection_Id = {\n  __typename?: 'FeedsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionCreatedAt = {\n  __typename?: 'FeedsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionUpdatedAt = {\n  __typename?: 'FeedsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionTarget = {\n  __typename?: 'FeedsConnectionTarget';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionType = {\n  __typename?: 'FeedsConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionContent = {\n  __typename?: 'FeedsConnectionContent';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionNavigation = {\n  __typename?: 'FeedsConnectionNavigation';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionTimestamp = {\n  __typename?: 'FeedsConnectionTimestamp';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionIsRead = {\n  __typename?: 'FeedsConnectionIsRead';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedsConnectionPublished_At = {\n  __typename?: 'FeedsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FeedsConnection>;\n};\n\nexport type FeedInput = {\n  target: Scalars['String'];\n  type: Enum_Feeds_Type;\n  content?: Maybe<ComponentFeedCotentContentInput>;\n  navigation?: Maybe<ComponentNavigationNavigationInput>;\n  timestamp?: Maybe<Scalars['String']>;\n  isRead?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFeedInput = {\n  target?: Maybe<Scalars['String']>;\n  type?: Maybe<Enum_Feeds_Type>;\n  content?: Maybe<EditComponentFeedCotentContentInput>;\n  navigation?: Maybe<EditComponentNavigationNavigationInput>;\n  timestamp?: Maybe<Scalars['String']>;\n  isRead?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateFeedInput = {\n  data?: Maybe<FeedInput>;\n};\n\nexport type CreateFeedPayload = {\n  __typename?: 'createFeedPayload';\n  feed?: Maybe<Feeds>;\n};\n\nexport type UpdateFeedInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFeedInput>;\n};\n\nexport type UpdateFeedPayload = {\n  __typename?: 'updateFeedPayload';\n  feed?: Maybe<Feeds>;\n};\n\nexport type DeleteFeedInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFeedPayload = {\n  __typename?: 'deleteFeedPayload';\n  feed?: Maybe<Feeds>;\n};\n\nexport type Follow = {\n  __typename?: 'Follow';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  member?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type FollowConnection = {\n  __typename?: 'FollowConnection';\n  values?: Maybe<Array<Maybe<Follow>>>;\n  groupBy?: Maybe<FollowGroupBy>;\n  aggregate?: Maybe<FollowAggregator>;\n};\n\nexport type FollowAggregator = {\n  __typename?: 'FollowAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type FollowGroupBy = {\n  __typename?: 'FollowGroupBy';\n  id?: Maybe<Array<Maybe<FollowConnectionId>>>;\n  _id?: Maybe<Array<Maybe<FollowConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<FollowConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<FollowConnectionUpdatedAt>>>;\n  member?: Maybe<Array<Maybe<FollowConnectionMember>>>;\n  target?: Maybe<Array<Maybe<FollowConnectionTarget>>>;\n  isActive?: Maybe<Array<Maybe<FollowConnectionIsActive>>>;\n  published_at?: Maybe<Array<Maybe<FollowConnectionPublished_At>>>;\n};\n\nexport type FollowConnectionId = {\n  __typename?: 'FollowConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnection_Id = {\n  __typename?: 'FollowConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionCreatedAt = {\n  __typename?: 'FollowConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionUpdatedAt = {\n  __typename?: 'FollowConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionMember = {\n  __typename?: 'FollowConnectionMember';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionTarget = {\n  __typename?: 'FollowConnectionTarget';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionIsActive = {\n  __typename?: 'FollowConnectionIsActive';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowConnectionPublished_At = {\n  __typename?: 'FollowConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<FollowConnection>;\n};\n\nexport type FollowInput = {\n  member?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFollowInput = {\n  member?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateFollowInput = {\n  data?: Maybe<FollowInput>;\n};\n\nexport type CreateFollowPayload = {\n  __typename?: 'createFollowPayload';\n  follow?: Maybe<Follow>;\n};\n\nexport type UpdateFollowInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditFollowInput>;\n};\n\nexport type UpdateFollowPayload = {\n  __typename?: 'updateFollowPayload';\n  follow?: Maybe<Follow>;\n};\n\nexport type DeleteFollowInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFollowPayload = {\n  __typename?: 'deleteFollowPayload';\n  follow?: Maybe<Follow>;\n};\n\nexport enum Enum_Group_Grouptype {\n  Private = 'PRIVATE',\n  Protected = 'PROTECTED',\n  Open = 'OPEN'\n}\n\nexport enum Enum_Group_Status {\n  Open = 'OPEN',\n  Deleted = 'DELETED',\n  DeleteByReport = 'DELETE_BY_REPORT',\n  KeepByReport = 'KEEP_BY_REPORT'\n}\n\nexport type Group = {\n  __typename?: 'Group';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  groupType?: Maybe<Enum_Group_Grouptype>;\n  workspace?: Maybe<Workspace>;\n  creator?: Maybe<Member>;\n  attachment?: Maybe<UploadFile>;\n  description?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Group_Status>;\n  trail?: Maybe<Trails>;\n  isCertified?: Maybe<Scalars['Boolean']>;\n  interactions?: Maybe<Array<Maybe<Interaction>>>;\n  roles?: Maybe<Array<Maybe<MemberRole>>>;\n};\n\n\nexport type GroupInteractionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type GroupRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type GroupConnection = {\n  __typename?: 'GroupConnection';\n  values?: Maybe<Array<Maybe<Group>>>;\n  groupBy?: Maybe<GroupGroupBy>;\n  aggregate?: Maybe<GroupAggregator>;\n};\n\nexport type GroupAggregator = {\n  __typename?: 'GroupAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type GroupGroupBy = {\n  __typename?: 'GroupGroupBy';\n  id?: Maybe<Array<Maybe<GroupConnectionId>>>;\n  _id?: Maybe<Array<Maybe<GroupConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<GroupConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<GroupConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<GroupConnectionName>>>;\n  groupType?: Maybe<Array<Maybe<GroupConnectionGroupType>>>;\n  workspace?: Maybe<Array<Maybe<GroupConnectionWorkspace>>>;\n  creator?: Maybe<Array<Maybe<GroupConnectionCreator>>>;\n  attachment?: Maybe<Array<Maybe<GroupConnectionAttachment>>>;\n  description?: Maybe<Array<Maybe<GroupConnectionDescription>>>;\n  status?: Maybe<Array<Maybe<GroupConnectionStatus>>>;\n  trail?: Maybe<Array<Maybe<GroupConnectionTrail>>>;\n  isCertified?: Maybe<Array<Maybe<GroupConnectionIsCertified>>>;\n};\n\nexport type GroupConnectionId = {\n  __typename?: 'GroupConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnection_Id = {\n  __typename?: 'GroupConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionCreatedAt = {\n  __typename?: 'GroupConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionUpdatedAt = {\n  __typename?: 'GroupConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionName = {\n  __typename?: 'GroupConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionGroupType = {\n  __typename?: 'GroupConnectionGroupType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionWorkspace = {\n  __typename?: 'GroupConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionCreator = {\n  __typename?: 'GroupConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionAttachment = {\n  __typename?: 'GroupConnectionAttachment';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionDescription = {\n  __typename?: 'GroupConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionStatus = {\n  __typename?: 'GroupConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionTrail = {\n  __typename?: 'GroupConnectionTrail';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupConnectionIsCertified = {\n  __typename?: 'GroupConnectionIsCertified';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<GroupConnection>;\n};\n\nexport type GroupInput = {\n  name: Scalars['String'];\n  groupType?: Maybe<Enum_Group_Grouptype>;\n  workspace?: Maybe<Scalars['ID']>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  attachment?: Maybe<Scalars['ID']>;\n  description?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Group_Status>;\n  trail?: Maybe<Scalars['ID']>;\n  isCertified?: Maybe<Scalars['Boolean']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditGroupInput = {\n  name?: Maybe<Scalars['String']>;\n  groupType?: Maybe<Enum_Group_Grouptype>;\n  workspace?: Maybe<Scalars['ID']>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  attachment?: Maybe<Scalars['ID']>;\n  description?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Group_Status>;\n  trail?: Maybe<Scalars['ID']>;\n  isCertified?: Maybe<Scalars['Boolean']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateGroupInput = {\n  data?: Maybe<GroupInput>;\n};\n\nexport type CreateGroupPayload = {\n  __typename?: 'createGroupPayload';\n  group?: Maybe<Group>;\n};\n\nexport type UpdateGroupInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditGroupInput>;\n};\n\nexport type UpdateGroupPayload = {\n  __typename?: 'updateGroupPayload';\n  group?: Maybe<Group>;\n};\n\nexport type DeleteGroupInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteGroupPayload = {\n  __typename?: 'deleteGroupPayload';\n  group?: Maybe<Group>;\n};\n\nexport type History = {\n  __typename?: 'History';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  companyEvent?: Maybe<Array<Maybe<ComponentHomepageCompanyEvent>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type HistoryInput = {\n  companyEvent?: Maybe<Array<Maybe<ComponentHomepageCompanyEventInput>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHistoryInput = {\n  companyEvent?: Maybe<Array<Maybe<EditComponentHomepageCompanyEventInput>>>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateHistoryInput = {\n  data?: Maybe<EditHistoryInput>;\n};\n\nexport type UpdateHistoryPayload = {\n  __typename?: 'updateHistoryPayload';\n  history?: Maybe<History>;\n};\n\nexport type DeleteHistoryPayload = {\n  __typename?: 'deleteHistoryPayload';\n  history?: Maybe<History>;\n};\n\nexport type Home = {\n  __typename?: 'Home';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  greeting?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type HomeInput = {\n  greeting?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditHomeInput = {\n  greeting?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type UpdateHomeInput = {\n  data?: Maybe<EditHomeInput>;\n};\n\nexport type UpdateHomePayload = {\n  __typename?: 'updateHomePayload';\n  home?: Maybe<Home>;\n};\n\nexport type DeleteHomePayload = {\n  __typename?: 'deleteHomePayload';\n  home?: Maybe<Home>;\n};\n\nexport type IdeaBoxOptionDynamicZone = ComponentActivityIdeaBoxOption | ComponentActivityTemplateOption;\n\n\nexport type IdeaBox = {\n  __typename?: 'IdeaBox';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Activity>;\n  workspace?: Maybe<Workspace>;\n  creator?: Maybe<Member>;\n  option: Array<Maybe<IdeaBoxOptionDynamicZone>>;\n};\n\nexport type IdeaBoxConnection = {\n  __typename?: 'IdeaBoxConnection';\n  values?: Maybe<Array<Maybe<IdeaBox>>>;\n  groupBy?: Maybe<IdeaBoxGroupBy>;\n  aggregate?: Maybe<IdeaBoxAggregator>;\n};\n\nexport type IdeaBoxAggregator = {\n  __typename?: 'IdeaBoxAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type IdeaBoxGroupBy = {\n  __typename?: 'IdeaBoxGroupBy';\n  id?: Maybe<Array<Maybe<IdeaBoxConnectionId>>>;\n  _id?: Maybe<Array<Maybe<IdeaBoxConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<IdeaBoxConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<IdeaBoxConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<IdeaBoxConnectionIsTemplate>>>;\n  activity?: Maybe<Array<Maybe<IdeaBoxConnectionActivity>>>;\n  workspace?: Maybe<Array<Maybe<IdeaBoxConnectionWorkspace>>>;\n  creator?: Maybe<Array<Maybe<IdeaBoxConnectionCreator>>>;\n};\n\nexport type IdeaBoxConnectionId = {\n  __typename?: 'IdeaBoxConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnection_Id = {\n  __typename?: 'IdeaBoxConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionCreatedAt = {\n  __typename?: 'IdeaBoxConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionUpdatedAt = {\n  __typename?: 'IdeaBoxConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionIsTemplate = {\n  __typename?: 'IdeaBoxConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionActivity = {\n  __typename?: 'IdeaBoxConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionWorkspace = {\n  __typename?: 'IdeaBoxConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxConnectionCreator = {\n  __typename?: 'IdeaBoxConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<IdeaBoxConnection>;\n};\n\nexport type IdeaBoxInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  option: Array<Scalars['IdeaBoxOptionDynamicZoneInput']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditIdeaBoxInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  option: Array<Scalars['IdeaBoxOptionDynamicZoneInput']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateIdeaBoxInput = {\n  data?: Maybe<IdeaBoxInput>;\n};\n\nexport type CreateIdeaBoxPayload = {\n  __typename?: 'createIdeaBoxPayload';\n  ideaBox?: Maybe<IdeaBox>;\n};\n\nexport type UpdateIdeaBoxInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditIdeaBoxInput>;\n};\n\nexport type UpdateIdeaBoxPayload = {\n  __typename?: 'updateIdeaBoxPayload';\n  ideaBox?: Maybe<IdeaBox>;\n};\n\nexport type DeleteIdeaBoxInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteIdeaBoxPayload = {\n  __typename?: 'deleteIdeaBoxPayload';\n  ideaBox?: Maybe<IdeaBox>;\n};\n\nexport enum Enum_Interaction_Type {\n  LikeGroup = 'LIKE_GROUP',\n  LikeActivity = 'LIKE_ACTIVITY',\n  LikePost = 'LIKE_POST',\n  ReportGroup = 'REPORT_GROUP',\n  ReportActivity = 'REPORT_ACTIVITY',\n  ReportPost = 'REPORT_POST',\n  ReadGroup = 'READ_GROUP',\n  ReadActivity = 'READ_ACTIVITY',\n  ReadPost = 'READ_POST'\n}\n\nexport type InteractionActionDynamicZone = ComponentInteractionReport | ComponentInteractionRead | ComponentInteractionLike;\n\n\n/**\n * 사용자가 특정 게시물이나 그룹, 액티비티, 게시물, 댓글, 답글 등에 대해 좋아요(LIKE), 신고(REPORT), 조회(READ) 등의 반응을 할 때 이를 저장합니다. 멤버에 대한 반응(차단하기, 보이스 양도 등)은 memberInteraction이라는 별도 타입으로 정의함.\n *\n * 이 컬렉션에 대한 쿼리 예시는 다음과 같음\n *\n * ## Query 작성 방법:\n *\n * query {\n *   interactions {\n *     id\n *     created_by {\n *       id\n *     }\n *     type\n *     action {\n *       __typename\n *       ... on ComponentInteractionLike {\n *         type\n *       }\n *       ... on ComponentInteractionRead {\n *         count\n *       }      ... on ComponentInteractionReport {\n *         reason\n *         text\n *       }\n *     }\n *     activity {\n *       id\n *     }\n *     group {\n *       id\n *     }\n *     post {\n *       id\n *     }\n *   }\n * }\n *\n *\n *\n * ## Mutation 작성 방법:\n *\n * mutation {\n *   createInteraction( input:\n *     { data: {\n *      type: REPORT_GROUP,\n *       action: [ {\n *         __typename:\"ComponentInteractionReport\"\n *         reason: PRIVACY_VIOLATION\n *       } ],\n *       group: 1 }\n *     }\n *   )\n *   {\n *   interaction {\n *     id\n *   }\n * }\n */\nexport type Interaction = {\n  __typename?: 'Interaction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  type: Enum_Interaction_Type;\n  action: Array<Maybe<InteractionActionDynamicZone>>;\n  activity?: Maybe<Activity>;\n  group?: Maybe<Group>;\n  post?: Maybe<Post>;\n  workspace?: Maybe<Workspace>;\n  actor?: Maybe<Member>;\n};\n\nexport type InteractionConnection = {\n  __typename?: 'InteractionConnection';\n  values?: Maybe<Array<Maybe<Interaction>>>;\n  groupBy?: Maybe<InteractionGroupBy>;\n  aggregate?: Maybe<InteractionAggregator>;\n};\n\nexport type InteractionAggregator = {\n  __typename?: 'InteractionAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type InteractionGroupBy = {\n  __typename?: 'InteractionGroupBy';\n  id?: Maybe<Array<Maybe<InteractionConnectionId>>>;\n  _id?: Maybe<Array<Maybe<InteractionConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<InteractionConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<InteractionConnectionUpdatedAt>>>;\n  type?: Maybe<Array<Maybe<InteractionConnectionType>>>;\n  activity?: Maybe<Array<Maybe<InteractionConnectionActivity>>>;\n  group?: Maybe<Array<Maybe<InteractionConnectionGroup>>>;\n  post?: Maybe<Array<Maybe<InteractionConnectionPost>>>;\n  workspace?: Maybe<Array<Maybe<InteractionConnectionWorkspace>>>;\n  actor?: Maybe<Array<Maybe<InteractionConnectionActor>>>;\n};\n\nexport type InteractionConnectionId = {\n  __typename?: 'InteractionConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnection_Id = {\n  __typename?: 'InteractionConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionCreatedAt = {\n  __typename?: 'InteractionConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionUpdatedAt = {\n  __typename?: 'InteractionConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionType = {\n  __typename?: 'InteractionConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionActivity = {\n  __typename?: 'InteractionConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionGroup = {\n  __typename?: 'InteractionConnectionGroup';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionPost = {\n  __typename?: 'InteractionConnectionPost';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionWorkspace = {\n  __typename?: 'InteractionConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionConnectionActor = {\n  __typename?: 'InteractionConnectionActor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InteractionConnection>;\n};\n\nexport type InteractionInput = {\n  type: Enum_Interaction_Type;\n  action: Array<Scalars['InteractionActionDynamicZoneInput']>;\n  activity?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  post?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  actor?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditInteractionInput = {\n  type?: Maybe<Enum_Interaction_Type>;\n  action: Array<Scalars['InteractionActionDynamicZoneInput']>;\n  activity?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  post?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  actor?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateInteractionInput = {\n  data?: Maybe<InteractionInput>;\n};\n\nexport type CreateInteractionPayload = {\n  __typename?: 'createInteractionPayload';\n  interaction?: Maybe<Interaction>;\n};\n\nexport type UpdateInteractionInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditInteractionInput>;\n};\n\nexport type UpdateInteractionPayload = {\n  __typename?: 'updateInteractionPayload';\n  interaction?: Maybe<Interaction>;\n};\n\nexport type DeleteInteractionInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteInteractionPayload = {\n  __typename?: 'deleteInteractionPayload';\n  interaction?: Maybe<Interaction>;\n};\n\nexport enum Enum_Invitation_Scope {\n  System = 'SYSTEM',\n  Workspace = 'WORKSPACE',\n  Group = 'GROUP',\n  Activity = 'ACTIVITY'\n}\n\nexport type Invitation = {\n  __typename?: 'Invitation';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  scope?: Maybe<Enum_Invitation_Scope>;\n  sentDate?: Maybe<Scalars['DateTime']>;\n  rsvp?: Maybe<Array<Maybe<ComponentCommonRsvp>>>;\n  expiredDate?: Maybe<Scalars['DateTime']>;\n};\n\nexport type InvitationConnection = {\n  __typename?: 'InvitationConnection';\n  values?: Maybe<Array<Maybe<Invitation>>>;\n  groupBy?: Maybe<InvitationGroupBy>;\n  aggregate?: Maybe<InvitationAggregator>;\n};\n\nexport type InvitationAggregator = {\n  __typename?: 'InvitationAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type InvitationGroupBy = {\n  __typename?: 'InvitationGroupBy';\n  id?: Maybe<Array<Maybe<InvitationConnectionId>>>;\n  _id?: Maybe<Array<Maybe<InvitationConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<InvitationConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<InvitationConnectionUpdatedAt>>>;\n  scope?: Maybe<Array<Maybe<InvitationConnectionScope>>>;\n  sentDate?: Maybe<Array<Maybe<InvitationConnectionSentDate>>>;\n  expiredDate?: Maybe<Array<Maybe<InvitationConnectionExpiredDate>>>;\n};\n\nexport type InvitationConnectionId = {\n  __typename?: 'InvitationConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnection_Id = {\n  __typename?: 'InvitationConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnectionCreatedAt = {\n  __typename?: 'InvitationConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnectionUpdatedAt = {\n  __typename?: 'InvitationConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnectionScope = {\n  __typename?: 'InvitationConnectionScope';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnectionSentDate = {\n  __typename?: 'InvitationConnectionSentDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationConnectionExpiredDate = {\n  __typename?: 'InvitationConnectionExpiredDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<InvitationConnection>;\n};\n\nexport type InvitationInput = {\n  scope?: Maybe<Enum_Invitation_Scope>;\n  sentDate?: Maybe<Scalars['DateTime']>;\n  workspace?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  rsvp?: Maybe<Array<Maybe<ComponentCommonRsvpInput>>>;\n  sender?: Maybe<Scalars['ID']>;\n  expiredDate?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditInvitationInput = {\n  scope?: Maybe<Enum_Invitation_Scope>;\n  sentDate?: Maybe<Scalars['DateTime']>;\n  workspace?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  rsvp?: Maybe<Array<Maybe<EditComponentCommonRsvpInput>>>;\n  sender?: Maybe<Scalars['ID']>;\n  expiredDate?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateInvitationInput = {\n  data?: Maybe<InvitationInput>;\n};\n\nexport type CreateInvitationPayload = {\n  __typename?: 'createInvitationPayload';\n  invitation?: Maybe<Invitation>;\n};\n\nexport type UpdateInvitationInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditInvitationInput>;\n};\n\nexport type UpdateInvitationPayload = {\n  __typename?: 'updateInvitationPayload';\n  invitation?: Maybe<Invitation>;\n};\n\nexport type DeleteInvitationInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteInvitationPayload = {\n  __typename?: 'deleteInvitationPayload';\n  invitation?: Maybe<Invitation>;\n};\n\nexport enum Enum_Memberinteraction_Type {\n  Mute = 'MUTE',\n  Voice = 'VOICE'\n}\n\n/** 멤버 사이의 상호작용 즉, 어느 멤버가 다른 멤버에게 보이스 양도 또는 특정 멤버의 게시물 차단에 대한 내역 */\nexport type MemberInteraction = {\n  __typename?: 'MemberInteraction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  type: Enum_Memberinteraction_Type;\n  quantity?: Maybe<Scalars['Int']>;\n  receiver?: Maybe<Member>;\n  activity?: Maybe<Activity>;\n  workspace?: Maybe<Workspace>;\n  actor?: Maybe<Member>;\n};\n\nexport type MemberInteractionConnection = {\n  __typename?: 'MemberInteractionConnection';\n  values?: Maybe<Array<Maybe<MemberInteraction>>>;\n  groupBy?: Maybe<MemberInteractionGroupBy>;\n  aggregate?: Maybe<MemberInteractionAggregator>;\n};\n\nexport type MemberInteractionAggregator = {\n  __typename?: 'MemberInteractionAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<MemberInteractionAggregatorSum>;\n  avg?: Maybe<MemberInteractionAggregatorAvg>;\n  min?: Maybe<MemberInteractionAggregatorMin>;\n  max?: Maybe<MemberInteractionAggregatorMax>;\n};\n\nexport type MemberInteractionAggregatorSum = {\n  __typename?: 'MemberInteractionAggregatorSum';\n  quantity?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberInteractionAggregatorAvg = {\n  __typename?: 'MemberInteractionAggregatorAvg';\n  quantity?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberInteractionAggregatorMin = {\n  __typename?: 'MemberInteractionAggregatorMin';\n  quantity?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberInteractionAggregatorMax = {\n  __typename?: 'MemberInteractionAggregatorMax';\n  quantity?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberInteractionGroupBy = {\n  __typename?: 'MemberInteractionGroupBy';\n  id?: Maybe<Array<Maybe<MemberInteractionConnectionId>>>;\n  _id?: Maybe<Array<Maybe<MemberInteractionConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<MemberInteractionConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<MemberInteractionConnectionUpdatedAt>>>;\n  type?: Maybe<Array<Maybe<MemberInteractionConnectionType>>>;\n  quantity?: Maybe<Array<Maybe<MemberInteractionConnectionQuantity>>>;\n  receiver?: Maybe<Array<Maybe<MemberInteractionConnectionReceiver>>>;\n  activity?: Maybe<Array<Maybe<MemberInteractionConnectionActivity>>>;\n  workspace?: Maybe<Array<Maybe<MemberInteractionConnectionWorkspace>>>;\n  actor?: Maybe<Array<Maybe<MemberInteractionConnectionActor>>>;\n};\n\nexport type MemberInteractionConnectionId = {\n  __typename?: 'MemberInteractionConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnection_Id = {\n  __typename?: 'MemberInteractionConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionCreatedAt = {\n  __typename?: 'MemberInteractionConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionUpdatedAt = {\n  __typename?: 'MemberInteractionConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionType = {\n  __typename?: 'MemberInteractionConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionQuantity = {\n  __typename?: 'MemberInteractionConnectionQuantity';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionReceiver = {\n  __typename?: 'MemberInteractionConnectionReceiver';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionActivity = {\n  __typename?: 'MemberInteractionConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionWorkspace = {\n  __typename?: 'MemberInteractionConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionConnectionActor = {\n  __typename?: 'MemberInteractionConnectionActor';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberInteractionConnection>;\n};\n\nexport type MemberInteractionInput = {\n  type: Enum_Memberinteraction_Type;\n  quantity?: Maybe<Scalars['Int']>;\n  receiver?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  actor?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditMemberInteractionInput = {\n  type?: Maybe<Enum_Memberinteraction_Type>;\n  quantity?: Maybe<Scalars['Int']>;\n  receiver?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  actor?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateMemberInteractionInput = {\n  data?: Maybe<MemberInteractionInput>;\n};\n\nexport type CreateMemberInteractionPayload = {\n  __typename?: 'createMemberInteractionPayload';\n  memberInteraction?: Maybe<MemberInteraction>;\n};\n\nexport type UpdateMemberInteractionInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditMemberInteractionInput>;\n};\n\nexport type UpdateMemberInteractionPayload = {\n  __typename?: 'updateMemberInteractionPayload';\n  memberInteraction?: Maybe<MemberInteraction>;\n};\n\nexport type DeleteMemberInteractionInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteMemberInteractionPayload = {\n  __typename?: 'deleteMemberInteractionPayload';\n  memberInteraction?: Maybe<MemberInteraction>;\n};\n\nexport enum Enum_Memberrole_Type {\n  Administrator = 'ADMINISTRATOR',\n  Editor = 'EDITOR',\n  Auditor = 'AUDITOR',\n  User = 'USER',\n  Guest = 'GUEST'\n}\n\nexport enum Enum_Memberrole_Scope {\n  System = 'SYSTEM',\n  Workspace = 'WORKSPACE',\n  Group = 'GROUP',\n  Activity = 'ACTIVITY'\n}\n\nexport enum Enum_Memberrole_Status {\n  Pending = 'PENDING',\n  Normal = 'NORMAL',\n  Block = 'BLOCK',\n  Leave = 'LEAVE'\n}\n\n/**\n * 시스템 수준(scope: SYSTEM)에서의 접근 권한 관리\n * type이 ADMINISTRATOR인 경우, 디포라 서비스 관리. 가장 최상위 사용자로서 모든 기능과 데이터 접근 가능.\n * type이 USER인 경우, 디포라 앱 로그인. 자신의 웍스페이스 생성. 공개된 액티비티에 GUEST로 참여 가능. 디포라에 가입하면 USER type으로 멤버가 됨.\n *\n * 웍스페이스 수준(scope: WORKSPACE)에서의 접근 권한 관리\n * type이 ADMINISTRATOR인 경우, 해당 웍스페이스 관리. 웍스페이스 사용자 초대. 기존 사용자 탈퇴 처리. 신고된 콘텐츠 삭제. 공식 그룹 생성. 공식 이벤트 생성.\n * type이 USER인 경우, 해당 웍스페이스의 기본 그룹에 자동 가입되며 초대된 그룹에도 가입할 수 있음.\n * 동일한 멤버가 SYSTEM 수준에서는 USER인 사람이, WORKSPACE 수준에서는 ADMINISTRATOR, USER, GUEST 중 하나의 역할로 참여하게 되며 새로 aaid를 발급하지 않음.(새로 발급하는 방식에 대해서는 나중에 생각해 볼 것)\n *\n * 그룹 수준(scope: GROUP)에서의 접근 권한 관리\n * type이 ADMINISTRATOR인 경우, 해당 그룹에 대한 관리(그룹 정보 수정, 멤버 초대나 삭제, 게시판 설정 등).\n * type이 USER인 경우, 해당 그룹의 모든 액티비티에 참여 가능.\n *\n * 액티비티 수준(scope: ACTIVITY)에서의 접근 권한 관리\n * type이 ADMINISTRATOR인 경우, 해당 액티비티 관리(액티비티 정보 수정, 마감 연장이나 단축 등)\n * type이 USER인 경우, 해당 액티비티에 참여.\n * type이 EDITOR인 경우, 질의응답 이벤트에 올라오는 질문들에 대해 답변 등록.\n * type이 GUEST인 경우, 웍스페이스 중 초대받은 액티비티로만 바로 들어가게 됨. 회사 외부인 대상 설문 조사 등을 위한 사용자 유형. 웍스페이스의 공통 이벤트나 공지 등을 받을 수 없으며 자신이 참여한 액티비티만 볼 수 있음.\n */\nexport type MemberRole = {\n  __typename?: 'MemberRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  type?: Maybe<Enum_Memberrole_Type>;\n  scope?: Maybe<Enum_Memberrole_Scope>;\n  activity?: Maybe<Activity>;\n  group?: Maybe<Group>;\n  workspace?: Maybe<Workspace>;\n  member?: Maybe<Member>;\n  status?: Maybe<Enum_Memberrole_Status>;\n  username?: Maybe<Scalars['String']>;\n};\n\nexport type MemberRoleConnection = {\n  __typename?: 'MemberRoleConnection';\n  values?: Maybe<Array<Maybe<MemberRole>>>;\n  groupBy?: Maybe<MemberRoleGroupBy>;\n  aggregate?: Maybe<MemberRoleAggregator>;\n};\n\nexport type MemberRoleAggregator = {\n  __typename?: 'MemberRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type MemberRoleGroupBy = {\n  __typename?: 'MemberRoleGroupBy';\n  id?: Maybe<Array<Maybe<MemberRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<MemberRoleConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<MemberRoleConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<MemberRoleConnectionUpdatedAt>>>;\n  type?: Maybe<Array<Maybe<MemberRoleConnectionType>>>;\n  scope?: Maybe<Array<Maybe<MemberRoleConnectionScope>>>;\n  activity?: Maybe<Array<Maybe<MemberRoleConnectionActivity>>>;\n  group?: Maybe<Array<Maybe<MemberRoleConnectionGroup>>>;\n  workspace?: Maybe<Array<Maybe<MemberRoleConnectionWorkspace>>>;\n  member?: Maybe<Array<Maybe<MemberRoleConnectionMember>>>;\n  status?: Maybe<Array<Maybe<MemberRoleConnectionStatus>>>;\n  username?: Maybe<Array<Maybe<MemberRoleConnectionUsername>>>;\n};\n\nexport type MemberRoleConnectionId = {\n  __typename?: 'MemberRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnection_Id = {\n  __typename?: 'MemberRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionCreatedAt = {\n  __typename?: 'MemberRoleConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionUpdatedAt = {\n  __typename?: 'MemberRoleConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionType = {\n  __typename?: 'MemberRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionScope = {\n  __typename?: 'MemberRoleConnectionScope';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionActivity = {\n  __typename?: 'MemberRoleConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionGroup = {\n  __typename?: 'MemberRoleConnectionGroup';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionWorkspace = {\n  __typename?: 'MemberRoleConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionMember = {\n  __typename?: 'MemberRoleConnectionMember';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionStatus = {\n  __typename?: 'MemberRoleConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleConnectionUsername = {\n  __typename?: 'MemberRoleConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberRoleConnection>;\n};\n\nexport type MemberRoleInput = {\n  type?: Maybe<Enum_Memberrole_Type>;\n  scope?: Maybe<Enum_Memberrole_Scope>;\n  activity?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  member?: Maybe<Scalars['ID']>;\n  status?: Maybe<Enum_Memberrole_Status>;\n  username?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditMemberRoleInput = {\n  type?: Maybe<Enum_Memberrole_Type>;\n  scope?: Maybe<Enum_Memberrole_Scope>;\n  activity?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  member?: Maybe<Scalars['ID']>;\n  status?: Maybe<Enum_Memberrole_Status>;\n  username?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateMemberRoleInput = {\n  data?: Maybe<MemberRoleInput>;\n};\n\nexport type CreateMemberRolePayload = {\n  __typename?: 'createMemberRolePayload';\n  memberRole?: Maybe<MemberRole>;\n};\n\nexport type UpdateMemberRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditMemberRoleInput>;\n};\n\nexport type UpdateMemberRolePayload = {\n  __typename?: 'updateMemberRolePayload';\n  memberRole?: Maybe<MemberRole>;\n};\n\nexport type DeleteMemberRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteMemberRolePayload = {\n  __typename?: 'deleteMemberRolePayload';\n  memberRole?: Maybe<MemberRole>;\n};\n\nexport enum Enum_Member_Userclass {\n  Application = 'APPLICATION',\n  System = 'SYSTEM',\n  External = 'EXTERNAL'\n}\n\n/** 웍스페이스, 그룹, 액티비티의 멤버. 익명 옵션이 아닌 경우, 그룹이나 액티비티에서 별도의 멤버를 생성하지 않으며 웍스페이스의 멤버가 그 웍스페이스에 속해 있는 모든 그룹이나 액티비티에 접근할 수 있다. 하지만 어떤 익명 옵션으로 만들어지는 그룹인 경우에는 웍스페이스의 멤버와 다른 멤버 계정이 만들어지고 그 활동 가능한 범위는 해당 그룹으로만 제한된다. 마찬가지로 그룹 내의 모든 액티비티는 그룹 멤버로 참여 가능하지만 익명 옵션으로 만든 액티비티라면 그 안에서만 사용할 수 있는 별도의 멤버 계정이 만들어진다. Member는 Workspace, Group, Activity, Post, Interaction, MemberInteraction, MemberRole 등 다른 컬렉션에서 creator, writer, actor 등의 역할로 참조되지만 반대로 Member로부터 다른 컬렉션 정보에 대한 직접 참조를 저장하지 않아야 한다. 의도되지 않은 접근으로 멤버에 연결된 모든 정보가 노출될 수 있기 때문에 연결 고리를 끊기 위한 것이다. */\nexport type Member = {\n  __typename?: 'Member';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  userClass: Enum_Member_Userclass;\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  avatar?: Maybe<UploadFile>;\n  lastAccessTime?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<UsersPermissionsUser>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type MemberConnection = {\n  __typename?: 'MemberConnection';\n  values?: Maybe<Array<Maybe<Member>>>;\n  groupBy?: Maybe<MemberGroupBy>;\n  aggregate?: Maybe<MemberAggregator>;\n};\n\nexport type MemberAggregator = {\n  __typename?: 'MemberAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<MemberAggregatorSum>;\n  avg?: Maybe<MemberAggregatorAvg>;\n  min?: Maybe<MemberAggregatorMin>;\n  max?: Maybe<MemberAggregatorMax>;\n};\n\nexport type MemberAggregatorSum = {\n  __typename?: 'MemberAggregatorSum';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberAggregatorAvg = {\n  __typename?: 'MemberAggregatorAvg';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberAggregatorMin = {\n  __typename?: 'MemberAggregatorMin';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberAggregatorMax = {\n  __typename?: 'MemberAggregatorMax';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type MemberGroupBy = {\n  __typename?: 'MemberGroupBy';\n  id?: Maybe<Array<Maybe<MemberConnectionId>>>;\n  _id?: Maybe<Array<Maybe<MemberConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<MemberConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<MemberConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<MemberConnectionUsername>>>;\n  userClass?: Maybe<Array<Maybe<MemberConnectionUserClass>>>;\n  address?: Maybe<Array<Maybe<MemberConnectionAddress>>>;\n  balance?: Maybe<Array<Maybe<MemberConnectionBalance>>>;\n  avatar?: Maybe<Array<Maybe<MemberConnectionAvatar>>>;\n  lastAccessTime?: Maybe<Array<Maybe<MemberConnectionLastAccessTime>>>;\n  user?: Maybe<Array<Maybe<MemberConnectionUser>>>;\n  email?: Maybe<Array<Maybe<MemberConnectionEmail>>>;\n};\n\nexport type MemberConnectionId = {\n  __typename?: 'MemberConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnection_Id = {\n  __typename?: 'MemberConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionCreatedAt = {\n  __typename?: 'MemberConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionUpdatedAt = {\n  __typename?: 'MemberConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionUsername = {\n  __typename?: 'MemberConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionUserClass = {\n  __typename?: 'MemberConnectionUserClass';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionAddress = {\n  __typename?: 'MemberConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionBalance = {\n  __typename?: 'MemberConnectionBalance';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionAvatar = {\n  __typename?: 'MemberConnectionAvatar';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionLastAccessTime = {\n  __typename?: 'MemberConnectionLastAccessTime';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionUser = {\n  __typename?: 'MemberConnectionUser';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberConnectionEmail = {\n  __typename?: 'MemberConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<MemberConnection>;\n};\n\nexport type MemberInput = {\n  username: Scalars['String'];\n  userClass: Enum_Member_Userclass;\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  avatar?: Maybe<Scalars['ID']>;\n  aaid?: Maybe<Scalars['String']>;\n  lastAccessTime?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<Scalars['ID']>;\n  email?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditMemberInput = {\n  username?: Maybe<Scalars['String']>;\n  userClass?: Maybe<Enum_Member_Userclass>;\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  avatar?: Maybe<Scalars['ID']>;\n  aaid?: Maybe<Scalars['String']>;\n  lastAccessTime?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<Scalars['ID']>;\n  email?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateMemberInput = {\n  data?: Maybe<MemberInput>;\n};\n\nexport type CreateMemberPayload = {\n  __typename?: 'createMemberPayload';\n  member?: Maybe<Member>;\n};\n\nexport type UpdateMemberInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditMemberInput>;\n};\n\nexport type UpdateMemberPayload = {\n  __typename?: 'updateMemberPayload';\n  member?: Maybe<Member>;\n};\n\nexport type DeleteMemberInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteMemberPayload = {\n  __typename?: 'deleteMemberPayload';\n  member?: Maybe<Member>;\n};\n\nexport enum Enum_Pointpurchase_Currencyunit {\n  Krw = 'KRW',\n  Usd = 'USD',\n  Eur = 'EUR',\n  Aud = 'AUD',\n  Cad = 'CAD',\n  Hkd = 'HKD',\n  Chf = 'CHF',\n  Gbp = 'GBP',\n  Jpy = 'JPY',\n  Cny = 'CNY',\n  Btc = 'BTC',\n  Eth = 'ETH',\n  Boa = 'BOA'\n}\n\nexport type PointPurchase = {\n  __typename?: 'PointPurchase';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n  currencyUnit?: Maybe<Enum_Pointpurchase_Currencyunit>;\n  purchaseDate?: Maybe<Scalars['DateTime']>;\n  settlementInstruction?: Maybe<ComponentRewardSettlementInstruction>;\n  transaction?: Maybe<Transaction>;\n};\n\nexport type PointPurchaseConnection = {\n  __typename?: 'PointPurchaseConnection';\n  values?: Maybe<Array<Maybe<PointPurchase>>>;\n  groupBy?: Maybe<PointPurchaseGroupBy>;\n  aggregate?: Maybe<PointPurchaseAggregator>;\n};\n\nexport type PointPurchaseAggregator = {\n  __typename?: 'PointPurchaseAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PointPurchaseAggregatorSum>;\n  avg?: Maybe<PointPurchaseAggregatorAvg>;\n  min?: Maybe<PointPurchaseAggregatorMin>;\n  max?: Maybe<PointPurchaseAggregatorMax>;\n};\n\nexport type PointPurchaseAggregatorSum = {\n  __typename?: 'PointPurchaseAggregatorSum';\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type PointPurchaseAggregatorAvg = {\n  __typename?: 'PointPurchaseAggregatorAvg';\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type PointPurchaseAggregatorMin = {\n  __typename?: 'PointPurchaseAggregatorMin';\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type PointPurchaseAggregatorMax = {\n  __typename?: 'PointPurchaseAggregatorMax';\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n};\n\nexport type PointPurchaseGroupBy = {\n  __typename?: 'PointPurchaseGroupBy';\n  id?: Maybe<Array<Maybe<PointPurchaseConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PointPurchaseConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PointPurchaseConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PointPurchaseConnectionUpdatedAt>>>;\n  pointAmount?: Maybe<Array<Maybe<PointPurchaseConnectionPointAmount>>>;\n  currencyAmount?: Maybe<Array<Maybe<PointPurchaseConnectionCurrencyAmount>>>;\n  currencyUnit?: Maybe<Array<Maybe<PointPurchaseConnectionCurrencyUnit>>>;\n  purchaseDate?: Maybe<Array<Maybe<PointPurchaseConnectionPurchaseDate>>>;\n  settlementInstruction?: Maybe<Array<Maybe<PointPurchaseConnectionSettlementInstruction>>>;\n  transaction?: Maybe<Array<Maybe<PointPurchaseConnectionTransaction>>>;\n};\n\nexport type PointPurchaseConnectionId = {\n  __typename?: 'PointPurchaseConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnection_Id = {\n  __typename?: 'PointPurchaseConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionCreatedAt = {\n  __typename?: 'PointPurchaseConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionUpdatedAt = {\n  __typename?: 'PointPurchaseConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionPointAmount = {\n  __typename?: 'PointPurchaseConnectionPointAmount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionCurrencyAmount = {\n  __typename?: 'PointPurchaseConnectionCurrencyAmount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionCurrencyUnit = {\n  __typename?: 'PointPurchaseConnectionCurrencyUnit';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionPurchaseDate = {\n  __typename?: 'PointPurchaseConnectionPurchaseDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionSettlementInstruction = {\n  __typename?: 'PointPurchaseConnectionSettlementInstruction';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseConnectionTransaction = {\n  __typename?: 'PointPurchaseConnectionTransaction';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PointPurchaseConnection>;\n};\n\nexport type PointPurchaseInput = {\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n  currencyUnit?: Maybe<Enum_Pointpurchase_Currencyunit>;\n  purchaseDate?: Maybe<Scalars['DateTime']>;\n  settlementInstruction?: Maybe<ComponentRewardSettlementInstructionInput>;\n  transaction?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPointPurchaseInput = {\n  pointAmount?: Maybe<Scalars['Float']>;\n  currencyAmount?: Maybe<Scalars['Float']>;\n  currencyUnit?: Maybe<Enum_Pointpurchase_Currencyunit>;\n  purchaseDate?: Maybe<Scalars['DateTime']>;\n  settlementInstruction?: Maybe<EditComponentRewardSettlementInstructionInput>;\n  transaction?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreatePointPurchaseInput = {\n  data?: Maybe<PointPurchaseInput>;\n};\n\nexport type CreatePointPurchasePayload = {\n  __typename?: 'createPointPurchasePayload';\n  pointPurchase?: Maybe<PointPurchase>;\n};\n\nexport type UpdatePointPurchaseInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPointPurchaseInput>;\n};\n\nexport type UpdatePointPurchasePayload = {\n  __typename?: 'updatePointPurchasePayload';\n  pointPurchase?: Maybe<PointPurchase>;\n};\n\nexport type DeletePointPurchaseInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePointPurchasePayload = {\n  __typename?: 'deletePointPurchasePayload';\n  pointPurchase?: Maybe<PointPurchase>;\n};\n\nexport type PollOptionDynamicZone = ComponentActivityPollOption | ComponentActivityTemplateOption;\n\n\n/** 액티비티를 구성하는 내용 중 투표(Poll) 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 투표 뿐만 아니라 여러 투표에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능. */\nexport type Poll = {\n  __typename?: 'Poll';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate: Scalars['Boolean'];\n  option: Array<Maybe<PollOptionDynamicZone>>;\n  activity?: Maybe<Activity>;\n  template?: Maybe<Poll>;\n  workspace?: Maybe<Workspace>;\n  creator?: Maybe<Member>;\n  questions?: Maybe<Array<Maybe<Question>>>;\n};\n\n\n/** 액티비티를 구성하는 내용 중 투표(Poll) 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 투표 뿐만 아니라 여러 투표에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능. */\nexport type PollQuestionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PollConnection = {\n  __typename?: 'PollConnection';\n  values?: Maybe<Array<Maybe<Poll>>>;\n  groupBy?: Maybe<PollGroupBy>;\n  aggregate?: Maybe<PollAggregator>;\n};\n\nexport type PollAggregator = {\n  __typename?: 'PollAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type PollGroupBy = {\n  __typename?: 'PollGroupBy';\n  id?: Maybe<Array<Maybe<PollConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PollConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PollConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PollConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<PollConnectionIsTemplate>>>;\n  activity?: Maybe<Array<Maybe<PollConnectionActivity>>>;\n  template?: Maybe<Array<Maybe<PollConnectionTemplate>>>;\n  workspace?: Maybe<Array<Maybe<PollConnectionWorkspace>>>;\n  creator?: Maybe<Array<Maybe<PollConnectionCreator>>>;\n};\n\nexport type PollConnectionId = {\n  __typename?: 'PollConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnection_Id = {\n  __typename?: 'PollConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionCreatedAt = {\n  __typename?: 'PollConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionUpdatedAt = {\n  __typename?: 'PollConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionIsTemplate = {\n  __typename?: 'PollConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionActivity = {\n  __typename?: 'PollConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionTemplate = {\n  __typename?: 'PollConnectionTemplate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionWorkspace = {\n  __typename?: 'PollConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollConnectionCreator = {\n  __typename?: 'PollConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PollConnection>;\n};\n\nexport type PollInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['PollOptionDynamicZoneInput']>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPollInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['PollOptionDynamicZoneInput']>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreatePollInput = {\n  data?: Maybe<PollInput>;\n};\n\nexport type CreatePollPayload = {\n  __typename?: 'createPollPayload';\n  poll?: Maybe<Poll>;\n};\n\nexport type UpdatePollInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPollInput>;\n};\n\nexport type UpdatePollPayload = {\n  __typename?: 'updatePollPayload';\n  poll?: Maybe<Poll>;\n};\n\nexport type DeletePollInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePollPayload = {\n  __typename?: 'deletePollPayload';\n  poll?: Maybe<Poll>;\n};\n\nexport enum Enum_Post_Type {\n  SurveyResponse = 'SURVEY_RESPONSE',\n  QuizResponse = 'QUIZ_RESPONSE',\n  PollResponse = 'POLL_RESPONSE',\n  BoardArticle = 'BOARD_ARTICLE',\n  IdeaboxProposal = 'IDEABOX_PROPOSAL',\n  QnaQuestion = 'QNA_QUESTION',\n  CommentOnActivity = 'COMMENT_ON_ACTIVITY',\n  CommentOnPost = 'COMMENT_ON_POST',\n  ReplyOnComment = 'REPLY_ON_COMMENT'\n}\n\nexport enum Enum_Post_Status {\n  Open = 'OPEN',\n  DeleteByReport = 'DELETE_BY_REPORT',\n  KeepByReport = 'KEEP_BY_REPORT'\n}\n\nexport type PostContentDynamicZone = ComponentPostCommentOnActivity | ComponentPostCommentOnPost | ComponentPostReply | ComponentPostScaleAnswer | ComponentPostSingleChoiceAnswer | ComponentPostMultipleChoiceAnswer | ComponentPostTextAnswer | ComponentPostShortAnswer | ComponentPostProposal | ComponentPostArticle | ComponentPostQnaQuestion;\n\n\n/**\n * 액티비티에 대한 참여 형태는 액티비티 종류에 따라 설문조사, 퀴즈, 투표에 대한 답안 작성, 게시판에서의 게시물 작성, Q&A에서의 질문 작성, 아이디어박스에서의 제안 작성 등이며, 그렇게 작성된 것들을 게시물이라고 볼 수 있다. 이러한 응답 형태의 참여가 아니더라도 액티비티 자체 또는 그 액티비티에 참여한 사람들의 응답에 대한 의견을 표시하기 위해 작성된 댓글 또는 답글도 모두 게시물로 간주된다.\n *\n * ## Mutation 작성 방법:\n * (퀴즈 참여 응답에 해당하는 포스트 생성하는 예시)\n *\n * mutation newQuizResponse {\n *  createPost (input: {\n *  data: {\n *  type: QUIZ_RESPONSE,\n *  content: [\n *  {\n *  __typename: \"ComponentPostSingleChoiceAnswer\",\n *  selection: {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 55,\n *  }\n *  question: 4\n *  },\n *  {\n *  __typename: \"ComponentPostMultipleChoiceAnswer\",\n *  __component: \"post.multiple-choice-answer\",\n *  selection: [\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 1,\n *  value: 18\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 2,\n *  value: 810\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 432\n *  }\n *  ],\n *  question: 5\n *  }\n *  ]\n *  activity: 1,\n *  }}) {\n *  post {\n *  ...postFields\n *  }\n *  }\n *  }\n */\nexport type Post = {\n  __typename?: 'Post';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  type: Enum_Post_Type;\n  content: Array<Maybe<PostContentDynamicZone>>;\n  activity?: Maybe<Activity>;\n  parentPost?: Maybe<Post>;\n  writer?: Maybe<Member>;\n  myScore?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Post_Status>;\n  interactions?: Maybe<Array<Maybe<Interaction>>>;\n  childPosts?: Maybe<Array<Maybe<Post>>>;\n  attachment?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\n/**\n * 액티비티에 대한 참여 형태는 액티비티 종류에 따라 설문조사, 퀴즈, 투표에 대한 답안 작성, 게시판에서의 게시물 작성, Q&A에서의 질문 작성, 아이디어박스에서의 제안 작성 등이며, 그렇게 작성된 것들을 게시물이라고 볼 수 있다. 이러한 응답 형태의 참여가 아니더라도 액티비티 자체 또는 그 액티비티에 참여한 사람들의 응답에 대한 의견을 표시하기 위해 작성된 댓글 또는 답글도 모두 게시물로 간주된다.\n *\n * ## Mutation 작성 방법:\n * (퀴즈 참여 응답에 해당하는 포스트 생성하는 예시)\n *\n * mutation newQuizResponse {\n *  createPost (input: {\n *  data: {\n *  type: QUIZ_RESPONSE,\n *  content: [\n *  {\n *  __typename: \"ComponentPostSingleChoiceAnswer\",\n *  selection: {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 55,\n *  }\n *  question: 4\n *  },\n *  {\n *  __typename: \"ComponentPostMultipleChoiceAnswer\",\n *  __component: \"post.multiple-choice-answer\",\n *  selection: [\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 1,\n *  value: 18\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 2,\n *  value: 810\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 432\n *  }\n *  ],\n *  question: 5\n *  }\n *  ]\n *  activity: 1,\n *  }}) {\n *  post {\n *  ...postFields\n *  }\n *  }\n *  }\n */\nexport type PostInteractionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/**\n * 액티비티에 대한 참여 형태는 액티비티 종류에 따라 설문조사, 퀴즈, 투표에 대한 답안 작성, 게시판에서의 게시물 작성, Q&A에서의 질문 작성, 아이디어박스에서의 제안 작성 등이며, 그렇게 작성된 것들을 게시물이라고 볼 수 있다. 이러한 응답 형태의 참여가 아니더라도 액티비티 자체 또는 그 액티비티에 참여한 사람들의 응답에 대한 의견을 표시하기 위해 작성된 댓글 또는 답글도 모두 게시물로 간주된다.\n *\n * ## Mutation 작성 방법:\n * (퀴즈 참여 응답에 해당하는 포스트 생성하는 예시)\n *\n * mutation newQuizResponse {\n *  createPost (input: {\n *  data: {\n *  type: QUIZ_RESPONSE,\n *  content: [\n *  {\n *  __typename: \"ComponentPostSingleChoiceAnswer\",\n *  selection: {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 55,\n *  }\n *  question: 4\n *  },\n *  {\n *  __typename: \"ComponentPostMultipleChoiceAnswer\",\n *  __component: \"post.multiple-choice-answer\",\n *  selection: [\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 1,\n *  value: 18\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 2,\n *  value: 810\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 432\n *  }\n *  ],\n *  question: 5\n *  }\n *  ]\n *  activity: 1,\n *  }}) {\n *  post {\n *  ...postFields\n *  }\n *  }\n *  }\n */\nexport type PostChildPostsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/**\n * 액티비티에 대한 참여 형태는 액티비티 종류에 따라 설문조사, 퀴즈, 투표에 대한 답안 작성, 게시판에서의 게시물 작성, Q&A에서의 질문 작성, 아이디어박스에서의 제안 작성 등이며, 그렇게 작성된 것들을 게시물이라고 볼 수 있다. 이러한 응답 형태의 참여가 아니더라도 액티비티 자체 또는 그 액티비티에 참여한 사람들의 응답에 대한 의견을 표시하기 위해 작성된 댓글 또는 답글도 모두 게시물로 간주된다.\n *\n * ## Mutation 작성 방법:\n * (퀴즈 참여 응답에 해당하는 포스트 생성하는 예시)\n *\n * mutation newQuizResponse {\n *  createPost (input: {\n *  data: {\n *  type: QUIZ_RESPONSE,\n *  content: [\n *  {\n *  __typename: \"ComponentPostSingleChoiceAnswer\",\n *  selection: {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 55,\n *  }\n *  question: 4\n *  },\n *  {\n *  __typename: \"ComponentPostMultipleChoiceAnswer\",\n *  __component: \"post.multiple-choice-answer\",\n *  selection: [\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 1,\n *  value: 18\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 2,\n *  value: 810\n *  },\n *  {\n *  __typename: \"ComponentPostSelection\",\n *  __component: \"post.selection\",\n *  sequence: 3,\n *  value: 432\n *  }\n *  ],\n *  question: 5\n *  }\n *  ]\n *  activity: 1,\n *  }}) {\n *  post {\n *  ...postFields\n *  }\n *  }\n *  }\n */\nexport type PostAttachmentArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type PostConnection = {\n  __typename?: 'PostConnection';\n  values?: Maybe<Array<Maybe<Post>>>;\n  groupBy?: Maybe<PostGroupBy>;\n  aggregate?: Maybe<PostAggregator>;\n};\n\nexport type PostAggregator = {\n  __typename?: 'PostAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<PostAggregatorSum>;\n  avg?: Maybe<PostAggregatorAvg>;\n  min?: Maybe<PostAggregatorMin>;\n  max?: Maybe<PostAggregatorMax>;\n};\n\nexport type PostAggregatorSum = {\n  __typename?: 'PostAggregatorSum';\n  myScore?: Maybe<Scalars['Float']>;\n};\n\nexport type PostAggregatorAvg = {\n  __typename?: 'PostAggregatorAvg';\n  myScore?: Maybe<Scalars['Float']>;\n};\n\nexport type PostAggregatorMin = {\n  __typename?: 'PostAggregatorMin';\n  myScore?: Maybe<Scalars['Float']>;\n};\n\nexport type PostAggregatorMax = {\n  __typename?: 'PostAggregatorMax';\n  myScore?: Maybe<Scalars['Float']>;\n};\n\nexport type PostGroupBy = {\n  __typename?: 'PostGroupBy';\n  id?: Maybe<Array<Maybe<PostConnectionId>>>;\n  _id?: Maybe<Array<Maybe<PostConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<PostConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<PostConnectionUpdatedAt>>>;\n  type?: Maybe<Array<Maybe<PostConnectionType>>>;\n  activity?: Maybe<Array<Maybe<PostConnectionActivity>>>;\n  parentPost?: Maybe<Array<Maybe<PostConnectionParentPost>>>;\n  writer?: Maybe<Array<Maybe<PostConnectionWriter>>>;\n  myScore?: Maybe<Array<Maybe<PostConnectionMyScore>>>;\n  status?: Maybe<Array<Maybe<PostConnectionStatus>>>;\n};\n\nexport type PostConnectionId = {\n  __typename?: 'PostConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnection_Id = {\n  __typename?: 'PostConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionCreatedAt = {\n  __typename?: 'PostConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionUpdatedAt = {\n  __typename?: 'PostConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionType = {\n  __typename?: 'PostConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionActivity = {\n  __typename?: 'PostConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionParentPost = {\n  __typename?: 'PostConnectionParentPost';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionWriter = {\n  __typename?: 'PostConnectionWriter';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionMyScore = {\n  __typename?: 'PostConnectionMyScore';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostConnectionStatus = {\n  __typename?: 'PostConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<PostConnection>;\n};\n\nexport type PostInput = {\n  type: Enum_Post_Type;\n  content: Array<Scalars['PostContentDynamicZoneInput']>;\n  activity?: Maybe<Scalars['ID']>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  parentPost?: Maybe<Scalars['ID']>;\n  childPosts?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  writer?: Maybe<Scalars['ID']>;\n  myScore?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Post_Status>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditPostInput = {\n  type?: Maybe<Enum_Post_Type>;\n  content: Array<Scalars['PostContentDynamicZoneInput']>;\n  activity?: Maybe<Scalars['ID']>;\n  interactions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  parentPost?: Maybe<Scalars['ID']>;\n  childPosts?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  writer?: Maybe<Scalars['ID']>;\n  myScore?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Post_Status>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreatePostInput = {\n  data?: Maybe<PostInput>;\n};\n\nexport type CreatePostPayload = {\n  __typename?: 'createPostPayload';\n  post?: Maybe<Post>;\n};\n\nexport type UpdatePostInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditPostInput>;\n};\n\nexport type UpdatePostPayload = {\n  __typename?: 'updatePostPayload';\n  post?: Maybe<Post>;\n};\n\nexport type DeletePostInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeletePostPayload = {\n  __typename?: 'deletePostPayload';\n  post?: Maybe<Post>;\n};\n\nexport type QnaOptionDynamicZone = ComponentActivityQnaOption | ComponentActivityTemplateOption;\n\n\nexport type Qna = {\n  __typename?: 'Qna';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Activity>;\n  workspace?: Maybe<Workspace>;\n  creator?: Maybe<Member>;\n  option?: Maybe<Array<Maybe<QnaOptionDynamicZone>>>;\n  responders?: Maybe<Array<Maybe<Member>>>;\n};\n\n\nexport type QnaRespondersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type QnaConnection = {\n  __typename?: 'QnaConnection';\n  values?: Maybe<Array<Maybe<Qna>>>;\n  groupBy?: Maybe<QnaGroupBy>;\n  aggregate?: Maybe<QnaAggregator>;\n};\n\nexport type QnaAggregator = {\n  __typename?: 'QnaAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type QnaGroupBy = {\n  __typename?: 'QnaGroupBy';\n  id?: Maybe<Array<Maybe<QnaConnectionId>>>;\n  _id?: Maybe<Array<Maybe<QnaConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<QnaConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<QnaConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<QnaConnectionIsTemplate>>>;\n  activity?: Maybe<Array<Maybe<QnaConnectionActivity>>>;\n  workspace?: Maybe<Array<Maybe<QnaConnectionWorkspace>>>;\n  creator?: Maybe<Array<Maybe<QnaConnectionCreator>>>;\n};\n\nexport type QnaConnectionId = {\n  __typename?: 'QnaConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnection_Id = {\n  __typename?: 'QnaConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionCreatedAt = {\n  __typename?: 'QnaConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionUpdatedAt = {\n  __typename?: 'QnaConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionIsTemplate = {\n  __typename?: 'QnaConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionActivity = {\n  __typename?: 'QnaConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionWorkspace = {\n  __typename?: 'QnaConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaConnectionCreator = {\n  __typename?: 'QnaConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QnaConnection>;\n};\n\nexport type QnaInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  option?: Maybe<Array<Scalars['QnaOptionDynamicZoneInput']>>;\n  responders?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditQnaInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  option?: Maybe<Array<Scalars['QnaOptionDynamicZoneInput']>>;\n  responders?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateQnaInput = {\n  data?: Maybe<QnaInput>;\n};\n\nexport type CreateQnaPayload = {\n  __typename?: 'createQnaPayload';\n  qna?: Maybe<Qna>;\n};\n\nexport type UpdateQnaInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditQnaInput>;\n};\n\nexport type UpdateQnaPayload = {\n  __typename?: 'updateQnaPayload';\n  qna?: Maybe<Qna>;\n};\n\nexport type DeleteQnaInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteQnaPayload = {\n  __typename?: 'deleteQnaPayload';\n  qna?: Maybe<Qna>;\n};\n\nexport type QrcodeComm = {\n  __typename?: 'QrcodeComm';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  pubKey?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  expireAt?: Maybe<Scalars['Int']>;\n};\n\nexport type QrcodeCommConnection = {\n  __typename?: 'QrcodeCommConnection';\n  values?: Maybe<Array<Maybe<QrcodeComm>>>;\n  groupBy?: Maybe<QrcodeCommGroupBy>;\n  aggregate?: Maybe<QrcodeCommAggregator>;\n};\n\nexport type QrcodeCommAggregator = {\n  __typename?: 'QrcodeCommAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<QrcodeCommAggregatorSum>;\n  avg?: Maybe<QrcodeCommAggregatorAvg>;\n  min?: Maybe<QrcodeCommAggregatorMin>;\n  max?: Maybe<QrcodeCommAggregatorMax>;\n};\n\nexport type QrcodeCommAggregatorSum = {\n  __typename?: 'QrcodeCommAggregatorSum';\n  expireAt?: Maybe<Scalars['Float']>;\n};\n\nexport type QrcodeCommAggregatorAvg = {\n  __typename?: 'QrcodeCommAggregatorAvg';\n  expireAt?: Maybe<Scalars['Float']>;\n};\n\nexport type QrcodeCommAggregatorMin = {\n  __typename?: 'QrcodeCommAggregatorMin';\n  expireAt?: Maybe<Scalars['Float']>;\n};\n\nexport type QrcodeCommAggregatorMax = {\n  __typename?: 'QrcodeCommAggregatorMax';\n  expireAt?: Maybe<Scalars['Float']>;\n};\n\nexport type QrcodeCommGroupBy = {\n  __typename?: 'QrcodeCommGroupBy';\n  id?: Maybe<Array<Maybe<QrcodeCommConnectionId>>>;\n  _id?: Maybe<Array<Maybe<QrcodeCommConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<QrcodeCommConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<QrcodeCommConnectionUpdatedAt>>>;\n  pubKey?: Maybe<Array<Maybe<QrcodeCommConnectionPubKey>>>;\n  message?: Maybe<Array<Maybe<QrcodeCommConnectionMessage>>>;\n  expireAt?: Maybe<Array<Maybe<QrcodeCommConnectionExpireAt>>>;\n};\n\nexport type QrcodeCommConnectionId = {\n  __typename?: 'QrcodeCommConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnection_Id = {\n  __typename?: 'QrcodeCommConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnectionCreatedAt = {\n  __typename?: 'QrcodeCommConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnectionUpdatedAt = {\n  __typename?: 'QrcodeCommConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnectionPubKey = {\n  __typename?: 'QrcodeCommConnectionPubKey';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnectionMessage = {\n  __typename?: 'QrcodeCommConnectionMessage';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommConnectionExpireAt = {\n  __typename?: 'QrcodeCommConnectionExpireAt';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<QrcodeCommConnection>;\n};\n\nexport type QrcodeCommInput = {\n  peerHash: Scalars['String'];\n  finalHash: Scalars['String'];\n  pubKey?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  expireAt?: Maybe<Scalars['Int']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditQrcodeCommInput = {\n  peerHash?: Maybe<Scalars['String']>;\n  finalHash?: Maybe<Scalars['String']>;\n  pubKey?: Maybe<Scalars['String']>;\n  message?: Maybe<Scalars['String']>;\n  expireAt?: Maybe<Scalars['Int']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateQrcodeCommInput = {\n  data?: Maybe<QrcodeCommInput>;\n};\n\nexport type CreateQrcodeCommPayload = {\n  __typename?: 'createQrcodeCommPayload';\n  qrcodeComm?: Maybe<QrcodeComm>;\n};\n\nexport type UpdateQrcodeCommInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditQrcodeCommInput>;\n};\n\nexport type UpdateQrcodeCommPayload = {\n  __typename?: 'updateQrcodeCommPayload';\n  qrcodeComm?: Maybe<QrcodeComm>;\n};\n\nexport type DeleteQrcodeCommInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteQrcodeCommPayload = {\n  __typename?: 'deleteQrcodeCommPayload';\n  qrcodeComm?: Maybe<QrcodeComm>;\n};\n\nexport enum Enum_Question_Type {\n  SingleChoice = 'SINGLE_CHOICE',\n  MultipleChoice = 'MULTIPLE_CHOICE',\n  Scale = 'SCALE',\n  ShortAnswer = 'SHORT_ANSWER',\n  Text = 'TEXT',\n  Pagebreak = 'PAGEBREAK'\n}\n\nexport enum Enum_Question_Status {\n  Open = 'OPEN',\n  Delete = 'DELETE'\n}\n\nexport type QuestionContentDynamicZone = ComponentActivityScaleOption | ComponentActivityTextOption | ComponentActivityChoiceOptionList;\n\n\n/**\n * 설문, 퀴즈, 투표 등에 포함되는 문제.\n * 각 문제를 별도로 저장함으로써 참여자의 답안이 어떤 문제를 참조하는 지 지정할 수 있는 장점이 있으며, 문제은행을 만들기 용이하다. 설문조사, 퀴즈, 투표 양식을 새로 만들어 저장하려면, 먼저 이 컬렉션에 문제들을 생성하여 저장하고, 만들어진 문제들의 ID 목록을 Survey, Quiz, Poll 컬렉션의 questions 필드에 저장한다.\n *\n * ## Mutation 방법:\n * mutation newQuestion {\n *  createQuestion (input: {\n *  data: {\n *  sequence: 1\n *  type: SINGLE_CHOICE,\n *  title: \"수리능력 평가\",\n *  description: \"1부터 10까지의 합은?\",\n *  content: {\n *  __typename: \"ComponentActivityChoiceOptionList\",\n *  item: [\n *  {\n *  sequence: 1,\n *  label: \"가\",\n *  text: \"11\",\n *  value: 11\n *  },\n *  {\n *  sequence: 2,\n *  label: \"나\",\n *  text: \"50\",\n *  value: 50\n *  },\n *  {\n *  sequence: 3,\n *  label: \"다\",\n *  text: \"55\",\n *  value: 55\n *  },\n *  {\n *  sequence: 4,\n *  label: \"라\",\n *  text: \"101\",\n *  value: 101\n *  },\n *  ]\n *  }\n *  tags: \"#수리영역 #덧셈 #퀴즈 #자연수\",\n *  point: 10,\n *  quiz: 1,\n *  survey: null,\n *  poll: null,\n *  workspace: 1\n *  }\n *  }\n * ) {\n *  question {\n *  ...questionFields\n *  }\n *  }\n *  }\n */\nexport type Question = {\n  __typename?: 'Question';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  isRequired?: Maybe<Scalars['Boolean']>;\n  type: Enum_Question_Type;\n  content: Array<Maybe<QuestionContentDynamicZone>>;\n  tags?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n  point?: Maybe<Scalars['Float']>;\n  survey?: Maybe<Survey>;\n  poll?: Maybe<Poll>;\n  quiz?: Maybe<Quiz>;\n  workspace?: Maybe<Workspace>;\n  status?: Maybe<Enum_Question_Status>;\n  image?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\n/**\n * 설문, 퀴즈, 투표 등에 포함되는 문제.\n * 각 문제를 별도로 저장함으로써 참여자의 답안이 어떤 문제를 참조하는 지 지정할 수 있는 장점이 있으며, 문제은행을 만들기 용이하다. 설문조사, 퀴즈, 투표 양식을 새로 만들어 저장하려면, 먼저 이 컬렉션에 문제들을 생성하여 저장하고, 만들어진 문제들의 ID 목록을 Survey, Quiz, Poll 컬렉션의 questions 필드에 저장한다.\n *\n * ## Mutation 방법:\n * mutation newQuestion {\n *  createQuestion (input: {\n *  data: {\n *  sequence: 1\n *  type: SINGLE_CHOICE,\n *  title: \"수리능력 평가\",\n *  description: \"1부터 10까지의 합은?\",\n *  content: {\n *  __typename: \"ComponentActivityChoiceOptionList\",\n *  item: [\n *  {\n *  sequence: 1,\n *  label: \"가\",\n *  text: \"11\",\n *  value: 11\n *  },\n *  {\n *  sequence: 2,\n *  label: \"나\",\n *  text: \"50\",\n *  value: 50\n *  },\n *  {\n *  sequence: 3,\n *  label: \"다\",\n *  text: \"55\",\n *  value: 55\n *  },\n *  {\n *  sequence: 4,\n *  label: \"라\",\n *  text: \"101\",\n *  value: 101\n *  },\n *  ]\n *  }\n *  tags: \"#수리영역 #덧셈 #퀴즈 #자연수\",\n *  point: 10,\n *  quiz: 1,\n *  survey: null,\n *  poll: null,\n *  workspace: 1\n *  }\n *  }\n * ) {\n *  question {\n *  ...questionFields\n *  }\n *  }\n *  }\n */\nexport type QuestionImageArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type QuestionConnection = {\n  __typename?: 'QuestionConnection';\n  values?: Maybe<Array<Maybe<Question>>>;\n  groupBy?: Maybe<QuestionGroupBy>;\n  aggregate?: Maybe<QuestionAggregator>;\n};\n\nexport type QuestionAggregator = {\n  __typename?: 'QuestionAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<QuestionAggregatorSum>;\n  avg?: Maybe<QuestionAggregatorAvg>;\n  min?: Maybe<QuestionAggregatorMin>;\n  max?: Maybe<QuestionAggregatorMax>;\n};\n\nexport type QuestionAggregatorSum = {\n  __typename?: 'QuestionAggregatorSum';\n  sequence?: Maybe<Scalars['Float']>;\n  point?: Maybe<Scalars['Float']>;\n};\n\nexport type QuestionAggregatorAvg = {\n  __typename?: 'QuestionAggregatorAvg';\n  sequence?: Maybe<Scalars['Float']>;\n  point?: Maybe<Scalars['Float']>;\n};\n\nexport type QuestionAggregatorMin = {\n  __typename?: 'QuestionAggregatorMin';\n  sequence?: Maybe<Scalars['Float']>;\n  point?: Maybe<Scalars['Float']>;\n};\n\nexport type QuestionAggregatorMax = {\n  __typename?: 'QuestionAggregatorMax';\n  sequence?: Maybe<Scalars['Float']>;\n  point?: Maybe<Scalars['Float']>;\n};\n\nexport type QuestionGroupBy = {\n  __typename?: 'QuestionGroupBy';\n  id?: Maybe<Array<Maybe<QuestionConnectionId>>>;\n  _id?: Maybe<Array<Maybe<QuestionConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<QuestionConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<QuestionConnectionUpdatedAt>>>;\n  title?: Maybe<Array<Maybe<QuestionConnectionTitle>>>;\n  description?: Maybe<Array<Maybe<QuestionConnectionDescription>>>;\n  key?: Maybe<Array<Maybe<QuestionConnectionKey>>>;\n  isRequired?: Maybe<Array<Maybe<QuestionConnectionIsRequired>>>;\n  type?: Maybe<Array<Maybe<QuestionConnectionType>>>;\n  tags?: Maybe<Array<Maybe<QuestionConnectionTags>>>;\n  sequence?: Maybe<Array<Maybe<QuestionConnectionSequence>>>;\n  point?: Maybe<Array<Maybe<QuestionConnectionPoint>>>;\n  survey?: Maybe<Array<Maybe<QuestionConnectionSurvey>>>;\n  poll?: Maybe<Array<Maybe<QuestionConnectionPoll>>>;\n  quiz?: Maybe<Array<Maybe<QuestionConnectionQuiz>>>;\n  workspace?: Maybe<Array<Maybe<QuestionConnectionWorkspace>>>;\n  status?: Maybe<Array<Maybe<QuestionConnectionStatus>>>;\n};\n\nexport type QuestionConnectionId = {\n  __typename?: 'QuestionConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnection_Id = {\n  __typename?: 'QuestionConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionCreatedAt = {\n  __typename?: 'QuestionConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionUpdatedAt = {\n  __typename?: 'QuestionConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionTitle = {\n  __typename?: 'QuestionConnectionTitle';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionDescription = {\n  __typename?: 'QuestionConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionKey = {\n  __typename?: 'QuestionConnectionKey';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionIsRequired = {\n  __typename?: 'QuestionConnectionIsRequired';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionType = {\n  __typename?: 'QuestionConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionTags = {\n  __typename?: 'QuestionConnectionTags';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionSequence = {\n  __typename?: 'QuestionConnectionSequence';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionPoint = {\n  __typename?: 'QuestionConnectionPoint';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionSurvey = {\n  __typename?: 'QuestionConnectionSurvey';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionPoll = {\n  __typename?: 'QuestionConnectionPoll';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionQuiz = {\n  __typename?: 'QuestionConnectionQuiz';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionWorkspace = {\n  __typename?: 'QuestionConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionConnectionStatus = {\n  __typename?: 'QuestionConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<QuestionConnection>;\n};\n\nexport type QuestionInput = {\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  isRequired?: Maybe<Scalars['Boolean']>;\n  type: Enum_Question_Type;\n  content: Array<Scalars['QuestionContentDynamicZoneInput']>;\n  tags?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n  point?: Maybe<Scalars['Float']>;\n  survey?: Maybe<Scalars['ID']>;\n  poll?: Maybe<Scalars['ID']>;\n  quiz?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  image?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  status?: Maybe<Enum_Question_Status>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditQuestionInput = {\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  isRequired?: Maybe<Scalars['Boolean']>;\n  type?: Maybe<Enum_Question_Type>;\n  content: Array<Scalars['QuestionContentDynamicZoneInput']>;\n  tags?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n  point?: Maybe<Scalars['Float']>;\n  survey?: Maybe<Scalars['ID']>;\n  poll?: Maybe<Scalars['ID']>;\n  quiz?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  image?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  status?: Maybe<Enum_Question_Status>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateQuestionInput = {\n  data?: Maybe<QuestionInput>;\n};\n\nexport type CreateQuestionPayload = {\n  __typename?: 'createQuestionPayload';\n  question?: Maybe<Question>;\n};\n\nexport type UpdateQuestionInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditQuestionInput>;\n};\n\nexport type UpdateQuestionPayload = {\n  __typename?: 'updateQuestionPayload';\n  question?: Maybe<Question>;\n};\n\nexport type DeleteQuestionInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteQuestionPayload = {\n  __typename?: 'deleteQuestionPayload';\n  question?: Maybe<Question>;\n};\n\nexport type QuizOptionDynamicZone = ComponentActivityTemplateOption | ComponentActivityQuizOption;\n\n\nexport type QuizAnswersDynamicZone = ComponentPostSingleChoiceAnswer | ComponentPostMultipleChoiceAnswer | ComponentPostTextAnswer | ComponentPostShortAnswer;\n\n\n/**\n * 액티비티를 구성하는 내용 중 퀴즈 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 퀴즈 뿐만 아니라 여러 퀴즈에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능.\n *\n * ## Mutation 방법:\n * mutation newQuiz {\n *   createQuiz(input: {\n *     data: {\n *       title: \"두뇌 운동에 도움을 주는 깜짝 퀴즈\",\n *       description: \"이 퀴즈를 다 푸신 분께는 추첨을 통해 근사한 경품을 드립니다. 마니마니 참여해 주세요.\",\n *       isTemplate: false,\n *       option: {\n *         __typename: \"ComponentActivityQuizOption\",\n *         shareResult: true\n *       }\n *       questions: [],\n *       # 퀴즈 정답 목록\n *       answers: [\n *       {\n *         __typename: \"ComponentPostSingleChoiceAnswer\",\n *         selection: {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 3,\n *           value: 55,\n *         }\n *         key: \"1\"    # 문제 번호\n *       },\n *       {\n *         __typename: \"ComponentPostMultipleChoiceAnswer\",\n *         __component: \"post.multiple-choice-answer\",\n *         selection: [\n *         {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 1,\n *           value: 18\n *         },\n *       {\n *             __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 2,\n *           value: 810\n *         },\n *         {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 3,\n *           value: 432\n *         } ],\n *         key: \"2\"  # 문제 번호\n *       } ],\n *       activity: 4,\n *       template: null\n *     }\n *   } ) {\n *     quiz {\n *       ...quizFields\n *     }\n *   }\n * }\n */\nexport type Quiz = {\n  __typename?: 'Quiz';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate: Scalars['Boolean'];\n  option: Array<Maybe<QuizOptionDynamicZone>>;\n  answers?: Maybe<Array<Maybe<QuizAnswersDynamicZone>>>;\n  activity?: Maybe<Activity>;\n  workspace?: Maybe<Workspace>;\n  template?: Maybe<Quiz>;\n  tier?: Maybe<Array<Maybe<ComponentActivityTier>>>;\n  creator?: Maybe<Member>;\n  questions?: Maybe<Array<Maybe<Question>>>;\n};\n\n\n/**\n * 액티비티를 구성하는 내용 중 퀴즈 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 퀴즈 뿐만 아니라 여러 퀴즈에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능.\n *\n * ## Mutation 방법:\n * mutation newQuiz {\n *   createQuiz(input: {\n *     data: {\n *       title: \"두뇌 운동에 도움을 주는 깜짝 퀴즈\",\n *       description: \"이 퀴즈를 다 푸신 분께는 추첨을 통해 근사한 경품을 드립니다. 마니마니 참여해 주세요.\",\n *       isTemplate: false,\n *       option: {\n *         __typename: \"ComponentActivityQuizOption\",\n *         shareResult: true\n *       }\n *       questions: [],\n *       # 퀴즈 정답 목록\n *       answers: [\n *       {\n *         __typename: \"ComponentPostSingleChoiceAnswer\",\n *         selection: {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 3,\n *           value: 55,\n *         }\n *         key: \"1\"    # 문제 번호\n *       },\n *       {\n *         __typename: \"ComponentPostMultipleChoiceAnswer\",\n *         __component: \"post.multiple-choice-answer\",\n *         selection: [\n *         {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 1,\n *           value: 18\n *         },\n *       {\n *             __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 2,\n *           value: 810\n *         },\n *         {\n *           __typename: \"ComponentPostSelection\",\n *           __component: \"post.selection\",\n *           sequence: 3,\n *           value: 432\n *         } ],\n *         key: \"2\"  # 문제 번호\n *       } ],\n *       activity: 4,\n *       template: null\n *     }\n *   } ) {\n *     quiz {\n *       ...quizFields\n *     }\n *   }\n * }\n */\nexport type QuizQuestionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type QuizConnection = {\n  __typename?: 'QuizConnection';\n  values?: Maybe<Array<Maybe<Quiz>>>;\n  groupBy?: Maybe<QuizGroupBy>;\n  aggregate?: Maybe<QuizAggregator>;\n};\n\nexport type QuizAggregator = {\n  __typename?: 'QuizAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type QuizGroupBy = {\n  __typename?: 'QuizGroupBy';\n  id?: Maybe<Array<Maybe<QuizConnectionId>>>;\n  _id?: Maybe<Array<Maybe<QuizConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<QuizConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<QuizConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<QuizConnectionIsTemplate>>>;\n  activity?: Maybe<Array<Maybe<QuizConnectionActivity>>>;\n  workspace?: Maybe<Array<Maybe<QuizConnectionWorkspace>>>;\n  template?: Maybe<Array<Maybe<QuizConnectionTemplate>>>;\n  creator?: Maybe<Array<Maybe<QuizConnectionCreator>>>;\n};\n\nexport type QuizConnectionId = {\n  __typename?: 'QuizConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnection_Id = {\n  __typename?: 'QuizConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionCreatedAt = {\n  __typename?: 'QuizConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionUpdatedAt = {\n  __typename?: 'QuizConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionIsTemplate = {\n  __typename?: 'QuizConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionActivity = {\n  __typename?: 'QuizConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionWorkspace = {\n  __typename?: 'QuizConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionTemplate = {\n  __typename?: 'QuizConnectionTemplate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizConnectionCreator = {\n  __typename?: 'QuizConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<QuizConnection>;\n};\n\nexport type QuizInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['QuizOptionDynamicZoneInput']>;\n  answers?: Maybe<Array<Scalars['QuizAnswersDynamicZoneInput']>>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  tier?: Maybe<Array<Maybe<ComponentActivityTierInput>>>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditQuizInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['QuizOptionDynamicZoneInput']>;\n  answers?: Maybe<Array<Scalars['QuizAnswersDynamicZoneInput']>>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  tier?: Maybe<Array<Maybe<EditComponentActivityTierInput>>>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateQuizInput = {\n  data?: Maybe<QuizInput>;\n};\n\nexport type CreateQuizPayload = {\n  __typename?: 'createQuizPayload';\n  quiz?: Maybe<Quiz>;\n};\n\nexport type UpdateQuizInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditQuizInput>;\n};\n\nexport type UpdateQuizPayload = {\n  __typename?: 'updateQuizPayload';\n  quiz?: Maybe<Quiz>;\n};\n\nexport type DeleteQuizInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteQuizPayload = {\n  __typename?: 'deleteQuizPayload';\n  quiz?: Maybe<Quiz>;\n};\n\n/** 복구 정보 저장 */\nexport type Recovery = {\n  __typename?: 'Recovery';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  address: Scalars['String'];\n  encryptedData?: Maybe<Scalars['String']>;\n};\n\nexport type RecoveryConnection = {\n  __typename?: 'RecoveryConnection';\n  values?: Maybe<Array<Maybe<Recovery>>>;\n  groupBy?: Maybe<RecoveryGroupBy>;\n  aggregate?: Maybe<RecoveryAggregator>;\n};\n\nexport type RecoveryAggregator = {\n  __typename?: 'RecoveryAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type RecoveryGroupBy = {\n  __typename?: 'RecoveryGroupBy';\n  id?: Maybe<Array<Maybe<RecoveryConnectionId>>>;\n  _id?: Maybe<Array<Maybe<RecoveryConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<RecoveryConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<RecoveryConnectionUpdatedAt>>>;\n  address?: Maybe<Array<Maybe<RecoveryConnectionAddress>>>;\n  encryptedData?: Maybe<Array<Maybe<RecoveryConnectionEncryptedData>>>;\n};\n\nexport type RecoveryConnectionId = {\n  __typename?: 'RecoveryConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryConnection_Id = {\n  __typename?: 'RecoveryConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryConnectionCreatedAt = {\n  __typename?: 'RecoveryConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryConnectionUpdatedAt = {\n  __typename?: 'RecoveryConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryConnectionAddress = {\n  __typename?: 'RecoveryConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryConnectionEncryptedData = {\n  __typename?: 'RecoveryConnectionEncryptedData';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<RecoveryConnection>;\n};\n\nexport type RecoveryInput = {\n  address: Scalars['String'];\n  encryptedData?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRecoveryInput = {\n  address?: Maybe<Scalars['String']>;\n  encryptedData?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateRecoveryInput = {\n  data?: Maybe<RecoveryInput>;\n};\n\nexport type CreateRecoveryPayload = {\n  __typename?: 'createRecoveryPayload';\n  recovery?: Maybe<Recovery>;\n};\n\nexport type UpdateRecoveryInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRecoveryInput>;\n};\n\nexport type UpdateRecoveryPayload = {\n  __typename?: 'updateRecoveryPayload';\n  recovery?: Maybe<Recovery>;\n};\n\nexport type DeleteRecoveryInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRecoveryPayload = {\n  __typename?: 'deleteRecoveryPayload';\n  recovery?: Maybe<Recovery>;\n};\n\nexport type SurveyOptionDynamicZone = ComponentActivitySurveyOption | ComponentActivityTemplateOption;\n\n\n/**\n * 액티비티를 구성하는 내용 중 설문조사 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 설문조사 양식 뿐만 아니라 여러 설문조사에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능.\n *\n * ## Mutation 작성 방법:\n * mutation {\n *   createSurvey (input:\n *     {\n *       data: {\n *         title: \"서비스 만족도 조사\",\n *         description: \"디포라 서비스에 대한 사용자 여러분의 만족도에 대한 설문조사입니다. 귀하의 소중한 의견을 반영하여 더욱 향상된 서비스 제공하고자 하오니 적극적인 참여 부탁드립니다.\",\n *         isTemplate: true,\n *         option: {\n *           __typename: \"ComponentActivityTemplateOption\",\n *           scope: SYSTEM,\n *           availableIn: \"\"\n *         },\n *         questions: []\n *         activity: null,\n *         template: null,\n *         workspace: 1\n *       }\n *     }\n *   )\n *   {\n *     survey {\n *       ...surveyFields\n *     }\n *   }\n * }\n *\n * #참고: 위에서 사용한 surveyFields fragment는 아래와 같다.\n * fragment surveyFields on Survey {\n *   id\n *   title\n *   description\n *   option {\n *     ... on ComponentActivitySurveyOption {\n *       resubmit\n *     }\n *     ... on ComponentActivityTemplateOption {\n *       scope\n *       availableIn\n *     }\n *   }\n *   questions {\n *     ...questionFields\n *   }\n *   workspace {\n *     id\n *   }\n *   activity {\n *     id\n *   }\n * }\n *\n * fragment questionFields on Question {\n *   id\n *   type\n *   title\n *   description\n *   content {\n *     ... on ComponentActivityScaleOption {\n *       type\n *       min\n *       max\n *       customLabel {\n *         key\n *         label\n *       }\n *     }\n *     ... on ComponentActivityTextOption {\n *       characterLimit\n *     }\n *     ... on ComponentActivityChoiceOptionList {\n *       item {\n *         sequence\n *         label\n *         text\n *         image {\n *           url\n *         }\n *         value\n *       }\n *     }\n *   }\n *   tags\n * }\n */\nexport type Survey = {\n  __typename?: 'Survey';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  isTemplate: Scalars['Boolean'];\n  option: Array<Maybe<SurveyOptionDynamicZone>>;\n  activity?: Maybe<Activity>;\n  workspace?: Maybe<Workspace>;\n  template?: Maybe<Survey>;\n  creator?: Maybe<Member>;\n  questions?: Maybe<Array<Maybe<Question>>>;\n};\n\n\n/**\n * 액티비티를 구성하는 내용 중 설문조사 양식에 대한 내용만 따로 저장. 실제 액티비티로 만들어지는 설문조사 양식 뿐만 아니라 여러 설문조사에 공통으로 사용할 수 있게 만든 템플릿도 저장 가능.\n *\n * ## Mutation 작성 방법:\n * mutation {\n *   createSurvey (input:\n *     {\n *       data: {\n *         title: \"서비스 만족도 조사\",\n *         description: \"디포라 서비스에 대한 사용자 여러분의 만족도에 대한 설문조사입니다. 귀하의 소중한 의견을 반영하여 더욱 향상된 서비스 제공하고자 하오니 적극적인 참여 부탁드립니다.\",\n *         isTemplate: true,\n *         option: {\n *           __typename: \"ComponentActivityTemplateOption\",\n *           scope: SYSTEM,\n *           availableIn: \"\"\n *         },\n *         questions: []\n *         activity: null,\n *         template: null,\n *         workspace: 1\n *       }\n *     }\n *   )\n *   {\n *     survey {\n *       ...surveyFields\n *     }\n *   }\n * }\n *\n * #참고: 위에서 사용한 surveyFields fragment는 아래와 같다.\n * fragment surveyFields on Survey {\n *   id\n *   title\n *   description\n *   option {\n *     ... on ComponentActivitySurveyOption {\n *       resubmit\n *     }\n *     ... on ComponentActivityTemplateOption {\n *       scope\n *       availableIn\n *     }\n *   }\n *   questions {\n *     ...questionFields\n *   }\n *   workspace {\n *     id\n *   }\n *   activity {\n *     id\n *   }\n * }\n *\n * fragment questionFields on Question {\n *   id\n *   type\n *   title\n *   description\n *   content {\n *     ... on ComponentActivityScaleOption {\n *       type\n *       min\n *       max\n *       customLabel {\n *         key\n *         label\n *       }\n *     }\n *     ... on ComponentActivityTextOption {\n *       characterLimit\n *     }\n *     ... on ComponentActivityChoiceOptionList {\n *       item {\n *         sequence\n *         label\n *         text\n *         image {\n *           url\n *         }\n *         value\n *       }\n *     }\n *   }\n *   tags\n * }\n */\nexport type SurveyQuestionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type SurveyConnection = {\n  __typename?: 'SurveyConnection';\n  values?: Maybe<Array<Maybe<Survey>>>;\n  groupBy?: Maybe<SurveyGroupBy>;\n  aggregate?: Maybe<SurveyAggregator>;\n};\n\nexport type SurveyAggregator = {\n  __typename?: 'SurveyAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type SurveyGroupBy = {\n  __typename?: 'SurveyGroupBy';\n  id?: Maybe<Array<Maybe<SurveyConnectionId>>>;\n  _id?: Maybe<Array<Maybe<SurveyConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<SurveyConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<SurveyConnectionUpdatedAt>>>;\n  isTemplate?: Maybe<Array<Maybe<SurveyConnectionIsTemplate>>>;\n  activity?: Maybe<Array<Maybe<SurveyConnectionActivity>>>;\n  workspace?: Maybe<Array<Maybe<SurveyConnectionWorkspace>>>;\n  template?: Maybe<Array<Maybe<SurveyConnectionTemplate>>>;\n  creator?: Maybe<Array<Maybe<SurveyConnectionCreator>>>;\n};\n\nexport type SurveyConnectionId = {\n  __typename?: 'SurveyConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnection_Id = {\n  __typename?: 'SurveyConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionCreatedAt = {\n  __typename?: 'SurveyConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionUpdatedAt = {\n  __typename?: 'SurveyConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionIsTemplate = {\n  __typename?: 'SurveyConnectionIsTemplate';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionActivity = {\n  __typename?: 'SurveyConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionWorkspace = {\n  __typename?: 'SurveyConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionTemplate = {\n  __typename?: 'SurveyConnectionTemplate';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyConnectionCreator = {\n  __typename?: 'SurveyConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<SurveyConnection>;\n};\n\nexport type SurveyInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['SurveyOptionDynamicZoneInput']>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditSurveyInput = {\n  isTemplate?: Maybe<Scalars['Boolean']>;\n  option: Array<Scalars['SurveyOptionDynamicZoneInput']>;\n  questions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  activity?: Maybe<Scalars['ID']>;\n  workspace?: Maybe<Scalars['ID']>;\n  template?: Maybe<Scalars['ID']>;\n  creator?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateSurveyInput = {\n  data?: Maybe<SurveyInput>;\n};\n\nexport type CreateSurveyPayload = {\n  __typename?: 'createSurveyPayload';\n  survey?: Maybe<Survey>;\n};\n\nexport type UpdateSurveyInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditSurveyInput>;\n};\n\nexport type UpdateSurveyPayload = {\n  __typename?: 'updateSurveyPayload';\n  survey?: Maybe<Survey>;\n};\n\nexport type DeleteSurveyInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteSurveyPayload = {\n  __typename?: 'deleteSurveyPayload';\n  survey?: Maybe<Survey>;\n};\n\nexport type Trails = {\n  __typename?: 'Trails';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  category?: Maybe<Scalars['String']>;\n  categorySub?: Maybe<Scalars['String']>;\n  action?: Maybe<Scalars['String']>;\n  date?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  detailInfo?: Maybe<Scalars['JSON']>;\n  workspace?: Maybe<Workspace>;\n  activity?: Maybe<Activity>;\n  post?: Maybe<Post>;\n  group?: Maybe<Group>;\n  key?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n};\n\nexport type TrailsConnection = {\n  __typename?: 'TrailsConnection';\n  values?: Maybe<Array<Maybe<Trails>>>;\n  groupBy?: Maybe<TrailsGroupBy>;\n  aggregate?: Maybe<TrailsAggregator>;\n};\n\nexport type TrailsAggregator = {\n  __typename?: 'TrailsAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type TrailsGroupBy = {\n  __typename?: 'TrailsGroupBy';\n  id?: Maybe<Array<Maybe<TrailsConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TrailsConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TrailsConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TrailsConnectionUpdatedAt>>>;\n  category?: Maybe<Array<Maybe<TrailsConnectionCategory>>>;\n  categorySub?: Maybe<Array<Maybe<TrailsConnectionCategorySub>>>;\n  action?: Maybe<Array<Maybe<TrailsConnectionAction>>>;\n  date?: Maybe<Array<Maybe<TrailsConnectionDate>>>;\n  user?: Maybe<Array<Maybe<TrailsConnectionUser>>>;\n  target?: Maybe<Array<Maybe<TrailsConnectionTarget>>>;\n  detailInfo?: Maybe<Array<Maybe<TrailsConnectionDetailInfo>>>;\n  workspace?: Maybe<Array<Maybe<TrailsConnectionWorkspace>>>;\n  activity?: Maybe<Array<Maybe<TrailsConnectionActivity>>>;\n  post?: Maybe<Array<Maybe<TrailsConnectionPost>>>;\n  group?: Maybe<Array<Maybe<TrailsConnectionGroup>>>;\n  key?: Maybe<Array<Maybe<TrailsConnectionKey>>>;\n  published_at?: Maybe<Array<Maybe<TrailsConnectionPublished_At>>>;\n};\n\nexport type TrailsConnectionId = {\n  __typename?: 'TrailsConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnection_Id = {\n  __typename?: 'TrailsConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionCreatedAt = {\n  __typename?: 'TrailsConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionUpdatedAt = {\n  __typename?: 'TrailsConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionCategory = {\n  __typename?: 'TrailsConnectionCategory';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionCategorySub = {\n  __typename?: 'TrailsConnectionCategorySub';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionAction = {\n  __typename?: 'TrailsConnectionAction';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionDate = {\n  __typename?: 'TrailsConnectionDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionUser = {\n  __typename?: 'TrailsConnectionUser';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionTarget = {\n  __typename?: 'TrailsConnectionTarget';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionDetailInfo = {\n  __typename?: 'TrailsConnectionDetailInfo';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionWorkspace = {\n  __typename?: 'TrailsConnectionWorkspace';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionActivity = {\n  __typename?: 'TrailsConnectionActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionPost = {\n  __typename?: 'TrailsConnectionPost';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionGroup = {\n  __typename?: 'TrailsConnectionGroup';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionKey = {\n  __typename?: 'TrailsConnectionKey';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailsConnectionPublished_At = {\n  __typename?: 'TrailsConnectionPublished_at';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TrailsConnection>;\n};\n\nexport type TrailInput = {\n  category?: Maybe<Scalars['String']>;\n  categorySub?: Maybe<Scalars['String']>;\n  action?: Maybe<Scalars['String']>;\n  date?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  detailInfo?: Maybe<Scalars['JSON']>;\n  workspace?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  post?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  key?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTrailInput = {\n  category?: Maybe<Scalars['String']>;\n  categorySub?: Maybe<Scalars['String']>;\n  action?: Maybe<Scalars['String']>;\n  date?: Maybe<Scalars['DateTime']>;\n  user?: Maybe<Scalars['String']>;\n  target?: Maybe<Scalars['String']>;\n  detailInfo?: Maybe<Scalars['JSON']>;\n  workspace?: Maybe<Scalars['ID']>;\n  activity?: Maybe<Scalars['ID']>;\n  post?: Maybe<Scalars['ID']>;\n  group?: Maybe<Scalars['ID']>;\n  key?: Maybe<Scalars['String']>;\n  published_at?: Maybe<Scalars['DateTime']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateTrailInput = {\n  data?: Maybe<TrailInput>;\n};\n\nexport type CreateTrailPayload = {\n  __typename?: 'createTrailPayload';\n  trail?: Maybe<Trails>;\n};\n\nexport type UpdateTrailInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTrailInput>;\n};\n\nexport type UpdateTrailPayload = {\n  __typename?: 'updateTrailPayload';\n  trail?: Maybe<Trails>;\n};\n\nexport type DeleteTrailInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTrailPayload = {\n  __typename?: 'deleteTrailPayload';\n  trail?: Maybe<Trails>;\n};\n\nexport enum Enum_Transaction_Transactiontype {\n  Reward = 'REWARD',\n  Transfer = 'TRANSFER',\n  Purchase = 'PURCHASE'\n}\n\nexport enum Enum_Transaction_Transactionstatus {\n  Pending = 'PENDING',\n  Verified = 'VERIFIED',\n  Canceled = 'CANCELED'\n}\n\nexport type Transaction = {\n  __typename?: 'Transaction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  senderAddress: Scalars['String'];\n  receiverAddress: Scalars['String'];\n  transactionType?: Maybe<Enum_Transaction_Transactiontype>;\n  transactionDate?: Maybe<Scalars['DateTime']>;\n  settlementDate?: Maybe<Scalars['DateTime']>;\n  amount?: Maybe<Scalars['Float']>;\n  transactionStatus?: Maybe<Enum_Transaction_Transactionstatus>;\n  referenceActivity?: Maybe<Activity>;\n  referencePurchase?: Maybe<PointPurchase>;\n};\n\nexport type TransactionConnection = {\n  __typename?: 'TransactionConnection';\n  values?: Maybe<Array<Maybe<Transaction>>>;\n  groupBy?: Maybe<TransactionGroupBy>;\n  aggregate?: Maybe<TransactionAggregator>;\n};\n\nexport type TransactionAggregator = {\n  __typename?: 'TransactionAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<TransactionAggregatorSum>;\n  avg?: Maybe<TransactionAggregatorAvg>;\n  min?: Maybe<TransactionAggregatorMin>;\n  max?: Maybe<TransactionAggregatorMax>;\n};\n\nexport type TransactionAggregatorSum = {\n  __typename?: 'TransactionAggregatorSum';\n  amount?: Maybe<Scalars['Float']>;\n};\n\nexport type TransactionAggregatorAvg = {\n  __typename?: 'TransactionAggregatorAvg';\n  amount?: Maybe<Scalars['Float']>;\n};\n\nexport type TransactionAggregatorMin = {\n  __typename?: 'TransactionAggregatorMin';\n  amount?: Maybe<Scalars['Float']>;\n};\n\nexport type TransactionAggregatorMax = {\n  __typename?: 'TransactionAggregatorMax';\n  amount?: Maybe<Scalars['Float']>;\n};\n\nexport type TransactionGroupBy = {\n  __typename?: 'TransactionGroupBy';\n  id?: Maybe<Array<Maybe<TransactionConnectionId>>>;\n  _id?: Maybe<Array<Maybe<TransactionConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<TransactionConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<TransactionConnectionUpdatedAt>>>;\n  senderAddress?: Maybe<Array<Maybe<TransactionConnectionSenderAddress>>>;\n  receiverAddress?: Maybe<Array<Maybe<TransactionConnectionReceiverAddress>>>;\n  transactionType?: Maybe<Array<Maybe<TransactionConnectionTransactionType>>>;\n  transactionDate?: Maybe<Array<Maybe<TransactionConnectionTransactionDate>>>;\n  settlementDate?: Maybe<Array<Maybe<TransactionConnectionSettlementDate>>>;\n  amount?: Maybe<Array<Maybe<TransactionConnectionAmount>>>;\n  transactionStatus?: Maybe<Array<Maybe<TransactionConnectionTransactionStatus>>>;\n  referenceActivity?: Maybe<Array<Maybe<TransactionConnectionReferenceActivity>>>;\n  referencePurchase?: Maybe<Array<Maybe<TransactionConnectionReferencePurchase>>>;\n};\n\nexport type TransactionConnectionId = {\n  __typename?: 'TransactionConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnection_Id = {\n  __typename?: 'TransactionConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionCreatedAt = {\n  __typename?: 'TransactionConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionUpdatedAt = {\n  __typename?: 'TransactionConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionSenderAddress = {\n  __typename?: 'TransactionConnectionSenderAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionReceiverAddress = {\n  __typename?: 'TransactionConnectionReceiverAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionTransactionType = {\n  __typename?: 'TransactionConnectionTransactionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionTransactionDate = {\n  __typename?: 'TransactionConnectionTransactionDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionSettlementDate = {\n  __typename?: 'TransactionConnectionSettlementDate';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionAmount = {\n  __typename?: 'TransactionConnectionAmount';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionTransactionStatus = {\n  __typename?: 'TransactionConnectionTransactionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionReferenceActivity = {\n  __typename?: 'TransactionConnectionReferenceActivity';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionConnectionReferencePurchase = {\n  __typename?: 'TransactionConnectionReferencePurchase';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<TransactionConnection>;\n};\n\nexport type TransactionInput = {\n  senderAddress: Scalars['String'];\n  receiverAddress: Scalars['String'];\n  transactionType?: Maybe<Enum_Transaction_Transactiontype>;\n  transactionDate?: Maybe<Scalars['DateTime']>;\n  settlementDate?: Maybe<Scalars['DateTime']>;\n  amount?: Maybe<Scalars['Float']>;\n  transactionStatus?: Maybe<Enum_Transaction_Transactionstatus>;\n  referenceActivity?: Maybe<Scalars['ID']>;\n  referencePurchase?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditTransactionInput = {\n  senderAddress?: Maybe<Scalars['String']>;\n  receiverAddress?: Maybe<Scalars['String']>;\n  transactionType?: Maybe<Enum_Transaction_Transactiontype>;\n  transactionDate?: Maybe<Scalars['DateTime']>;\n  settlementDate?: Maybe<Scalars['DateTime']>;\n  amount?: Maybe<Scalars['Float']>;\n  transactionStatus?: Maybe<Enum_Transaction_Transactionstatus>;\n  referenceActivity?: Maybe<Scalars['ID']>;\n  referencePurchase?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateTransactionInput = {\n  data?: Maybe<TransactionInput>;\n};\n\nexport type CreateTransactionPayload = {\n  __typename?: 'createTransactionPayload';\n  transaction?: Maybe<Transaction>;\n};\n\nexport type UpdateTransactionInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditTransactionInput>;\n};\n\nexport type UpdateTransactionPayload = {\n  __typename?: 'updateTransactionPayload';\n  transaction?: Maybe<Transaction>;\n};\n\nexport type DeleteTransactionInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteTransactionPayload = {\n  __typename?: 'deleteTransactionPayload';\n  transaction?: Maybe<Transaction>;\n};\n\nexport enum Enum_Workspace_Subscriptionplan {\n  Standard = 'STANDARD',\n  Trial = 'TRIAL',\n  Academic = 'ACADEMIC',\n  Enterprise = 'ENTERPRISE',\n  Basic = 'BASIC',\n  Partner = 'PARTNER'\n}\n\nexport enum Enum_Workspace_Status {\n  New = 'NEW',\n  Active = 'ACTIVE',\n  Suspended = 'SUSPENDED',\n  Inactive = 'INACTIVE',\n  Deleted = 'DELETED'\n}\n\n/** 디포라 서비스를 이용하는 단체를 나타내는 컬렉션 타입입니다. 웍스페이스는 하나의 회사 또는 공동체에 해당합니다. */\nexport type Workspace = {\n  __typename?: 'Workspace';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  isEncrypted: Scalars['Boolean'];\n  encryptionKey?: Maybe<Scalars['String']>;\n  subscriptionPlan?: Maybe<Enum_Workspace_Subscriptionplan>;\n  status?: Maybe<Enum_Workspace_Status>;\n  description?: Maybe<Scalars['String']>;\n  creator?: Maybe<Member>;\n  avatar?: Maybe<UploadFile>;\n  workspaceKey?: Maybe<Scalars['String']>;\n  groups?: Maybe<Array<Maybe<Group>>>;\n  roles?: Maybe<Array<Maybe<MemberRole>>>;\n  boards?: Maybe<Array<Maybe<Board>>>;\n};\n\n\n/** 디포라 서비스를 이용하는 단체를 나타내는 컬렉션 타입입니다. 웍스페이스는 하나의 회사 또는 공동체에 해당합니다. */\nexport type WorkspaceGroupsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/** 디포라 서비스를 이용하는 단체를 나타내는 컬렉션 타입입니다. 웍스페이스는 하나의 회사 또는 공동체에 해당합니다. */\nexport type WorkspaceRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\n/** 디포라 서비스를 이용하는 단체를 나타내는 컬렉션 타입입니다. 웍스페이스는 하나의 회사 또는 공동체에 해당합니다. */\nexport type WorkspaceBoardsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type WorkspaceConnection = {\n  __typename?: 'WorkspaceConnection';\n  values?: Maybe<Array<Maybe<Workspace>>>;\n  groupBy?: Maybe<WorkspaceGroupBy>;\n  aggregate?: Maybe<WorkspaceAggregator>;\n};\n\nexport type WorkspaceAggregator = {\n  __typename?: 'WorkspaceAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<WorkspaceAggregatorSum>;\n  avg?: Maybe<WorkspaceAggregatorAvg>;\n  min?: Maybe<WorkspaceAggregatorMin>;\n  max?: Maybe<WorkspaceAggregatorMax>;\n};\n\nexport type WorkspaceAggregatorSum = {\n  __typename?: 'WorkspaceAggregatorSum';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type WorkspaceAggregatorAvg = {\n  __typename?: 'WorkspaceAggregatorAvg';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type WorkspaceAggregatorMin = {\n  __typename?: 'WorkspaceAggregatorMin';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type WorkspaceAggregatorMax = {\n  __typename?: 'WorkspaceAggregatorMax';\n  balance?: Maybe<Scalars['Float']>;\n};\n\nexport type WorkspaceGroupBy = {\n  __typename?: 'WorkspaceGroupBy';\n  id?: Maybe<Array<Maybe<WorkspaceConnectionId>>>;\n  _id?: Maybe<Array<Maybe<WorkspaceConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<WorkspaceConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<WorkspaceConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<WorkspaceConnectionName>>>;\n  address?: Maybe<Array<Maybe<WorkspaceConnectionAddress>>>;\n  balance?: Maybe<Array<Maybe<WorkspaceConnectionBalance>>>;\n  isEncrypted?: Maybe<Array<Maybe<WorkspaceConnectionIsEncrypted>>>;\n  encryptionKey?: Maybe<Array<Maybe<WorkspaceConnectionEncryptionKey>>>;\n  subscriptionPlan?: Maybe<Array<Maybe<WorkspaceConnectionSubscriptionPlan>>>;\n  status?: Maybe<Array<Maybe<WorkspaceConnectionStatus>>>;\n  description?: Maybe<Array<Maybe<WorkspaceConnectionDescription>>>;\n  creator?: Maybe<Array<Maybe<WorkspaceConnectionCreator>>>;\n  avatar?: Maybe<Array<Maybe<WorkspaceConnectionAvatar>>>;\n  workspaceKey?: Maybe<Array<Maybe<WorkspaceConnectionWorkspaceKey>>>;\n};\n\nexport type WorkspaceConnectionId = {\n  __typename?: 'WorkspaceConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnection_Id = {\n  __typename?: 'WorkspaceConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionCreatedAt = {\n  __typename?: 'WorkspaceConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionUpdatedAt = {\n  __typename?: 'WorkspaceConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionName = {\n  __typename?: 'WorkspaceConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionAddress = {\n  __typename?: 'WorkspaceConnectionAddress';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionBalance = {\n  __typename?: 'WorkspaceConnectionBalance';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionIsEncrypted = {\n  __typename?: 'WorkspaceConnectionIsEncrypted';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionEncryptionKey = {\n  __typename?: 'WorkspaceConnectionEncryptionKey';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionSubscriptionPlan = {\n  __typename?: 'WorkspaceConnectionSubscriptionPlan';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionStatus = {\n  __typename?: 'WorkspaceConnectionStatus';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionDescription = {\n  __typename?: 'WorkspaceConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionCreator = {\n  __typename?: 'WorkspaceConnectionCreator';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionAvatar = {\n  __typename?: 'WorkspaceConnectionAvatar';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceConnectionWorkspaceKey = {\n  __typename?: 'WorkspaceConnectionWorkspaceKey';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<WorkspaceConnection>;\n};\n\nexport type WorkspaceInput = {\n  name: Scalars['String'];\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  isEncrypted?: Maybe<Scalars['Boolean']>;\n  encryptionKey?: Maybe<Scalars['String']>;\n  subscriptionPlan?: Maybe<Enum_Workspace_Subscriptionplan>;\n  status?: Maybe<Enum_Workspace_Status>;\n  groups?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  description?: Maybe<Scalars['String']>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  avatar?: Maybe<Scalars['ID']>;\n  boards?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  workspaceKey?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditWorkspaceInput = {\n  name?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  balance?: Maybe<Scalars['Float']>;\n  isEncrypted?: Maybe<Scalars['Boolean']>;\n  encryptionKey?: Maybe<Scalars['String']>;\n  subscriptionPlan?: Maybe<Enum_Workspace_Subscriptionplan>;\n  status?: Maybe<Enum_Workspace_Status>;\n  groups?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  description?: Maybe<Scalars['String']>;\n  creator?: Maybe<Scalars['ID']>;\n  roles?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  avatar?: Maybe<Scalars['ID']>;\n  boards?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  workspaceKey?: Maybe<Scalars['String']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateWorkspaceInput = {\n  data?: Maybe<WorkspaceInput>;\n};\n\nexport type CreateWorkspacePayload = {\n  __typename?: 'createWorkspacePayload';\n  workspace?: Maybe<Workspace>;\n};\n\nexport type UpdateWorkspaceInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditWorkspaceInput>;\n};\n\nexport type UpdateWorkspacePayload = {\n  __typename?: 'updateWorkspacePayload';\n  workspace?: Maybe<Workspace>;\n};\n\nexport type DeleteWorkspaceInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteWorkspacePayload = {\n  __typename?: 'deleteWorkspacePayload';\n  workspace?: Maybe<Workspace>;\n};\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Morph>>>;\n};\n\n\nexport type UploadFileRelatedArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFileConnection = {\n  __typename?: 'UploadFileConnection';\n  values?: Maybe<Array<Maybe<UploadFile>>>;\n  groupBy?: Maybe<UploadFileGroupBy>;\n  aggregate?: Maybe<UploadFileAggregator>;\n};\n\nexport type UploadFileAggregator = {\n  __typename?: 'UploadFileAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n  sum?: Maybe<UploadFileAggregatorSum>;\n  avg?: Maybe<UploadFileAggregatorAvg>;\n  min?: Maybe<UploadFileAggregatorMin>;\n  max?: Maybe<UploadFileAggregatorMax>;\n};\n\nexport type UploadFileAggregatorSum = {\n  __typename?: 'UploadFileAggregatorSum';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorAvg = {\n  __typename?: 'UploadFileAggregatorAvg';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMin = {\n  __typename?: 'UploadFileAggregatorMin';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileAggregatorMax = {\n  __typename?: 'UploadFileAggregatorMax';\n  width?: Maybe<Scalars['Float']>;\n  height?: Maybe<Scalars['Float']>;\n  size?: Maybe<Scalars['Float']>;\n};\n\nexport type UploadFileGroupBy = {\n  __typename?: 'UploadFileGroupBy';\n  id?: Maybe<Array<Maybe<UploadFileConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UploadFileConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UploadFileConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UploadFileConnectionUpdatedAt>>>;\n  name?: Maybe<Array<Maybe<UploadFileConnectionName>>>;\n  alternativeText?: Maybe<Array<Maybe<UploadFileConnectionAlternativeText>>>;\n  caption?: Maybe<Array<Maybe<UploadFileConnectionCaption>>>;\n  width?: Maybe<Array<Maybe<UploadFileConnectionWidth>>>;\n  height?: Maybe<Array<Maybe<UploadFileConnectionHeight>>>;\n  formats?: Maybe<Array<Maybe<UploadFileConnectionFormats>>>;\n  hash?: Maybe<Array<Maybe<UploadFileConnectionHash>>>;\n  ext?: Maybe<Array<Maybe<UploadFileConnectionExt>>>;\n  mime?: Maybe<Array<Maybe<UploadFileConnectionMime>>>;\n  size?: Maybe<Array<Maybe<UploadFileConnectionSize>>>;\n  url?: Maybe<Array<Maybe<UploadFileConnectionUrl>>>;\n  previewUrl?: Maybe<Array<Maybe<UploadFileConnectionPreviewUrl>>>;\n  provider?: Maybe<Array<Maybe<UploadFileConnectionProvider>>>;\n  provider_metadata?: Maybe<Array<Maybe<UploadFileConnectionProvider_Metadata>>>;\n};\n\nexport type UploadFileConnectionId = {\n  __typename?: 'UploadFileConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnection_Id = {\n  __typename?: 'UploadFileConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCreatedAt = {\n  __typename?: 'UploadFileConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUpdatedAt = {\n  __typename?: 'UploadFileConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionName = {\n  __typename?: 'UploadFileConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionAlternativeText = {\n  __typename?: 'UploadFileConnectionAlternativeText';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionCaption = {\n  __typename?: 'UploadFileConnectionCaption';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionWidth = {\n  __typename?: 'UploadFileConnectionWidth';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHeight = {\n  __typename?: 'UploadFileConnectionHeight';\n  key?: Maybe<Scalars['Int']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionFormats = {\n  __typename?: 'UploadFileConnectionFormats';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionHash = {\n  __typename?: 'UploadFileConnectionHash';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionExt = {\n  __typename?: 'UploadFileConnectionExt';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionMime = {\n  __typename?: 'UploadFileConnectionMime';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionSize = {\n  __typename?: 'UploadFileConnectionSize';\n  key?: Maybe<Scalars['Float']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionUrl = {\n  __typename?: 'UploadFileConnectionUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionPreviewUrl = {\n  __typename?: 'UploadFileConnectionPreviewUrl';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider = {\n  __typename?: 'UploadFileConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type UploadFileConnectionProvider_Metadata = {\n  __typename?: 'UploadFileConnectionProvider_metadata';\n  key?: Maybe<Scalars['JSON']>;\n  connection?: Maybe<UploadFileConnection>;\n};\n\nexport type FileInput = {\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type DeleteFileInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteFilePayload = {\n  __typename?: 'deleteFilePayload';\n  file?: Maybe<UploadFile>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Scalars['String'];\n  controller: Scalars['String'];\n  action: Scalars['String'];\n  enabled: Scalars['Boolean'];\n  policy?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<UsersPermissionsPermission>>>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type UsersPermissionsRoleConnection = {\n  __typename?: 'UsersPermissionsRoleConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  groupBy?: Maybe<UsersPermissionsRoleGroupBy>;\n  aggregate?: Maybe<UsersPermissionsRoleAggregator>;\n};\n\nexport type UsersPermissionsRoleAggregator = {\n  __typename?: 'UsersPermissionsRoleAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsRoleGroupBy = {\n  __typename?: 'UsersPermissionsRoleGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsRoleConnection_Id>>>;\n  name?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionName>>>;\n  description?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionDescription>>>;\n  type?: Maybe<Array<Maybe<UsersPermissionsRoleConnectionType>>>;\n};\n\nexport type UsersPermissionsRoleConnectionId = {\n  __typename?: 'UsersPermissionsRoleConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnection_Id = {\n  __typename?: 'UsersPermissionsRoleConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionName = {\n  __typename?: 'UsersPermissionsRoleConnectionName';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionDescription = {\n  __typename?: 'UsersPermissionsRoleConnectionDescription';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type UsersPermissionsRoleConnectionType = {\n  __typename?: 'UsersPermissionsRoleConnectionType';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsRoleConnection>;\n};\n\nexport type RoleInput = {\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateRoleInput = {\n  data?: Maybe<RoleInput>;\n};\n\nexport type CreateRolePayload = {\n  __typename?: 'createRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UpdateRoleInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditRoleInput>;\n};\n\nexport type UpdateRolePayload = {\n  __typename?: 'updateRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type DeleteRoleInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteRolePayload = {\n  __typename?: 'deleteRolePayload';\n  role?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  createdAt: Scalars['DateTime'];\n  updatedAt: Scalars['DateTime'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRole>;\n  member?: Maybe<Member>;\n};\n\nexport type UsersPermissionsUserConnection = {\n  __typename?: 'UsersPermissionsUserConnection';\n  values?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  groupBy?: Maybe<UsersPermissionsUserGroupBy>;\n  aggregate?: Maybe<UsersPermissionsUserAggregator>;\n};\n\nexport type UsersPermissionsUserAggregator = {\n  __typename?: 'UsersPermissionsUserAggregator';\n  count?: Maybe<Scalars['Int']>;\n  totalCount?: Maybe<Scalars['Int']>;\n};\n\nexport type UsersPermissionsUserGroupBy = {\n  __typename?: 'UsersPermissionsUserGroupBy';\n  id?: Maybe<Array<Maybe<UsersPermissionsUserConnectionId>>>;\n  _id?: Maybe<Array<Maybe<UsersPermissionsUserConnection_Id>>>;\n  createdAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionCreatedAt>>>;\n  updatedAt?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUpdatedAt>>>;\n  username?: Maybe<Array<Maybe<UsersPermissionsUserConnectionUsername>>>;\n  email?: Maybe<Array<Maybe<UsersPermissionsUserConnectionEmail>>>;\n  provider?: Maybe<Array<Maybe<UsersPermissionsUserConnectionProvider>>>;\n  confirmed?: Maybe<Array<Maybe<UsersPermissionsUserConnectionConfirmed>>>;\n  blocked?: Maybe<Array<Maybe<UsersPermissionsUserConnectionBlocked>>>;\n  role?: Maybe<Array<Maybe<UsersPermissionsUserConnectionRole>>>;\n  member?: Maybe<Array<Maybe<UsersPermissionsUserConnectionMember>>>;\n};\n\nexport type UsersPermissionsUserConnectionId = {\n  __typename?: 'UsersPermissionsUserConnectionId';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnection_Id = {\n  __typename?: 'UsersPermissionsUserConnection_id';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionCreatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionCreatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUpdatedAt = {\n  __typename?: 'UsersPermissionsUserConnectionUpdatedAt';\n  key?: Maybe<Scalars['DateTime']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionUsername = {\n  __typename?: 'UsersPermissionsUserConnectionUsername';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionEmail = {\n  __typename?: 'UsersPermissionsUserConnectionEmail';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionProvider = {\n  __typename?: 'UsersPermissionsUserConnectionProvider';\n  key?: Maybe<Scalars['String']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionConfirmed = {\n  __typename?: 'UsersPermissionsUserConnectionConfirmed';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionBlocked = {\n  __typename?: 'UsersPermissionsUserConnectionBlocked';\n  key?: Maybe<Scalars['Boolean']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionRole = {\n  __typename?: 'UsersPermissionsUserConnectionRole';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UsersPermissionsUserConnectionMember = {\n  __typename?: 'UsersPermissionsUserConnectionMember';\n  key?: Maybe<Scalars['ID']>;\n  connection?: Maybe<UsersPermissionsUserConnection>;\n};\n\nexport type UserInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  member?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type EditUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  member?: Maybe<Scalars['ID']>;\n  created_by?: Maybe<Scalars['ID']>;\n  updated_by?: Maybe<Scalars['ID']>;\n};\n\nexport type CreateUserInput = {\n  data?: Maybe<UserInput>;\n};\n\nexport type CreateUserPayload = {\n  __typename?: 'createUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type UpdateUserInput = {\n  where?: Maybe<InputId>;\n  data?: Maybe<EditUserInput>;\n};\n\nexport type UpdateUserPayload = {\n  __typename?: 'updateUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\nexport type DeleteUserInput = {\n  where?: Maybe<InputId>;\n};\n\nexport type DeleteUserPayload = {\n  __typename?: 'deleteUserPayload';\n  user?: Maybe<UsersPermissionsUser>;\n};\n\n/**\n * 한 개의 객관식 문제에 포함된 여러 선택지(보기 또는 옵션) 목록.\n * 예시)\n * \"가장 좋아하는 음식 하나를 다음 네 가지 중에서 고르세요.\"\n * 가. 피자\t나. 짜장\t다. 김치볶음밥\t라. 된장찌개\n *\n * 위 문제에서 보기는 [가, 나, 다, 라]의 네 개이다. ChoiceOptionList는 그 네 개의 보기를 포함하며 각 보기 하나 하나는 ChoiceOption 컴포넌트로 정의된다.\n */\nexport type ComponentActivityChoiceOptionList = {\n  __typename?: 'ComponentActivityChoiceOptionList';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  item?: Maybe<Array<Maybe<ComponentActivityChoiceOption>>>;\n};\n\nexport type ComponentActivityChoiceOptionListInput = {\n  item?: Maybe<Array<Maybe<ComponentActivityChoiceOptionInput>>>;\n};\n\nexport type EditComponentActivityChoiceOptionListInput = {\n  id?: Maybe<Scalars['ID']>;\n  item?: Maybe<Array<Maybe<EditComponentActivityChoiceOptionInput>>>;\n};\n\nexport enum Enum_Componentactivitychoiceoption_Status {\n  Open = 'OPEN',\n  Deleted = 'DELETED'\n}\n\n/**\n * 객관식 문제에서 선택가능한 선택지(보기 또는 옵션) 하나에 해당하는 컴포넌트.\n * 예시)\n * \"가장 좋아하는 음식 하나를 다음 네 가지 중에서 고르세요.\"\n * 가. 피자\t나. 짜장\t다. 김치볶음밥\t라. 된장찌개\n *\n * 위 문제에서  보기는 [가, 나, 다, 라]의 네 개이다.\n * 위 예에서, '가', '나', '다', '라'는 ChoiceOption 컴포넌트의 레이블(label) 필드, 이 보기들이 문제 내에서 보여지는 순서는 ChoiceOption 컴포넌트의 순서(sequence) 필드, '피자', '짜장면', '김치볶음밥', '된장찌개' 등의 문구는 텍스트(text) 필드, 마지막으로 사용자가 답안 작성시 선택한 보기에 대해서 전체 집계할 때 그 선택된 보기들을 어떤 숫자값으로 매핑할지는 값(value) 필드에 저장한다.\n * 보기 항목에 이미지를 나타내고자 할 경우, 이미지(image) 필드에 저장한다.\n */\nexport type ComponentActivityChoiceOption = {\n  __typename?: 'ComponentActivityChoiceOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  sequence?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  image?: Maybe<UploadFile>;\n  value?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Componentactivitychoiceoption_Status>;\n};\n\nexport type ComponentActivityChoiceOptionInput = {\n  sequence?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  value?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Componentactivitychoiceoption_Status>;\n};\n\nexport type EditComponentActivityChoiceOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  image?: Maybe<Scalars['ID']>;\n  value?: Maybe<Scalars['Int']>;\n  status?: Maybe<Enum_Componentactivitychoiceoption_Status>;\n};\n\n/** 리커트 척도 문제의 보기에 지정하는 사용자 정의 레이블. 기본적으로는 시스템이 제공하는 레이블을 사용할 수 있지만, 시스템과 다른 방식으로 레이블을 붙이고 싶을 때 사용함. 예를 들어, 5점 척도 문제에서 빈도를 묻는 질문에서, 1. 전혀 경험 없음, 2. 한 번 경험, 3. 가끔 경험, 4. 자주 경험, 5. 항상 경험 식의 보기를 주고 싶을 때 사용할 수 있음. 양 끝 자리에만 레이블을 보여주고 다른 눈금 자리에는 보여주지 않으려면 양 끝 자리 레이블만 지정하면 됨. 즉, [ { key: 1, label: \"전혀 경험 없음\" }, { key: 5, label: \"항상 경험\" } ] */\nexport type ComponentActivityCustomLabel = {\n  __typename?: 'ComponentActivityCustomLabel';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  key: Scalars['Int'];\n  label: Scalars['String'];\n};\n\nexport type ComponentActivityCustomLabelInput = {\n  key: Scalars['Int'];\n  label: Scalars['String'];\n};\n\nexport type EditComponentActivityCustomLabelInput = {\n  id?: Maybe<Scalars['ID']>;\n  key?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentActivityIdeaBoxOption = {\n  __typename?: 'ComponentActivityIdeaBoxOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  numberOfProposals?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityIdeaBoxOptionInput = {\n  numberOfProposals?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentActivityIdeaBoxOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  numberOfProposals?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityNumberOfParticipant = {\n  __typename?: 'ComponentActivityNumberOfParticipant';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  numberOfParticipant?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentActivityNumberOfParticipantInput = {\n  numberOfParticipant?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentActivityNumberOfParticipantInput = {\n  id?: Maybe<Scalars['ID']>;\n  numberOfParticipant?: Maybe<Scalars['Boolean']>;\n};\n\n/** 액티비티에 대한 옵션 중 투표에만 해당하는 추가 설정 옵션 */\nexport type ComponentActivityPollOption = {\n  __typename?: 'ComponentActivityPollOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  isOptionsShuffled?: Maybe<Scalars['Boolean']>;\n  isOthersCanAddOptions?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentActivityPollOptionInput = {\n  isOptionsShuffled?: Maybe<Scalars['Boolean']>;\n  isOthersCanAddOptions?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentActivityPollOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  isOptionsShuffled?: Maybe<Scalars['Boolean']>;\n  isOthersCanAddOptions?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentActivityQnaOption = {\n  __typename?: 'ComponentActivityQnaOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  isAllowSecretQuestions?: Maybe<Scalars['Boolean']>;\n  numOfQuestions?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityQnaOptionInput = {\n  isAllowSecretQuestions?: Maybe<Scalars['Boolean']>;\n  numOfQuestions?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentActivityQnaOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  isAllowSecretQuestions?: Maybe<Scalars['Boolean']>;\n  numOfQuestions?: Maybe<Scalars['Int']>;\n};\n\n/** 액티비티에 대한 옵션 중 퀴즈에만 해당하는 추가 설정 옵션 */\nexport type ComponentActivityQuizOption = {\n  __typename?: 'ComponentActivityQuizOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  isShowNameOnRanking?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentActivityQuizOptionInput = {\n  isShowNameOnRanking?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentActivityQuizOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  isShowNameOnRanking?: Maybe<Scalars['Boolean']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n};\n\nexport enum Enum_Componentactivityscaleoption_Type {\n  DisagreeAgree = 'DISAGREE_AGREE',\n  NegativePositive = 'NEGATIVE_POSITIVE',\n  NeverAlways = 'NEVER_ALWAYS',\n  UnlikelyLikely = 'UNLIKELY_LIKELY',\n  HateLike = 'HATE_LIKE',\n  Custom = 'CUSTOM'\n}\n\n/** 설문 질문 중 리커트 척도 문항에 대해 설정하는 옵션 */\nexport type ComponentActivityScaleOption = {\n  __typename?: 'ComponentActivityScaleOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Enum_Componentactivityscaleoption_Type;\n  min?: Maybe<Scalars['Int']>;\n  max: Scalars['Int'];\n  customLabel?: Maybe<Array<Maybe<ComponentActivityCustomLabel>>>;\n};\n\nexport type ComponentActivityScaleOptionInput = {\n  type: Enum_Componentactivityscaleoption_Type;\n  min?: Maybe<Scalars['Int']>;\n  max: Scalars['Int'];\n  customLabel?: Maybe<Array<Maybe<ComponentActivityCustomLabelInput>>>;\n};\n\nexport type EditComponentActivityScaleOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  type?: Maybe<Enum_Componentactivityscaleoption_Type>;\n  min?: Maybe<Scalars['Int']>;\n  max?: Maybe<Scalars['Int']>;\n  customLabel?: Maybe<Array<Maybe<EditComponentActivityCustomLabelInput>>>;\n};\n\n/** 액티비티에 대한 옵션 중 설문에만 해당하는 추가 설정 옵션 */\nexport type ComponentActivitySurveyOption = {\n  __typename?: 'ComponentActivitySurveyOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentActivitySurveyOptionInput = {\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentActivitySurveyOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  isResubmittable?: Maybe<Scalars['Boolean']>;\n  isShowResultOnlyToOwner?: Maybe<Scalars['Boolean']>;\n};\n\nexport enum Enum_Componentactivitytemplateoption_Scope {\n  System = 'SYSTEM',\n  Workspace = 'WORKSPACE',\n  Group = 'GROUP'\n}\n\n/** 설문, 투표, 또는 퀴즈에 대한 템플릿인 경우에만 추가적으로 설정하는 옵션 */\nexport type ComponentActivityTemplateOption = {\n  __typename?: 'ComponentActivityTemplateOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  scope: Enum_Componentactivitytemplateoption_Scope;\n  availableIn?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentActivityTemplateOptionInput = {\n  scope?: Maybe<Enum_Componentactivitytemplateoption_Scope>;\n  availableIn?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentActivityTemplateOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  scope?: Maybe<Enum_Componentactivitytemplateoption_Scope>;\n  availableIn?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\n/** 주관식 문제에 대해 설정하는 옵션 */\nexport type ComponentActivityTextOption = {\n  __typename?: 'ComponentActivityTextOption';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  characterLimit?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityTextOptionInput = {\n  characterLimit?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentActivityTextOptionInput = {\n  id?: Maybe<Scalars['ID']>;\n  characterLimit?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityTier = {\n  __typename?: 'ComponentActivityTier';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  label?: Maybe<Scalars['String']>;\n  scoreFrom?: Maybe<Scalars['Int']>;\n  scoreTo?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentActivityTierInput = {\n  label?: Maybe<Scalars['String']>;\n  scoreFrom?: Maybe<Scalars['Int']>;\n  scoreTo?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentActivityTierInput = {\n  id?: Maybe<Scalars['ID']>;\n  label?: Maybe<Scalars['String']>;\n  scoreFrom?: Maybe<Scalars['Int']>;\n  scoreTo?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentCommonContact = {\n  __typename?: 'ComponentCommonContact';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  firstName: Scalars['String'];\n  lastName?: Maybe<Scalars['String']>;\n  alias?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentCommonContactInput = {\n  firstName: Scalars['String'];\n  lastName?: Maybe<Scalars['String']>;\n  alias?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentCommonContactInput = {\n  id?: Maybe<Scalars['ID']>;\n  firstName?: Maybe<Scalars['String']>;\n  lastName?: Maybe<Scalars['String']>;\n  alias?: Maybe<Scalars['String']>;\n  title?: Maybe<Scalars['String']>;\n  phone?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentCommonRichtextInstruction = {\n  __typename?: 'ComponentCommonRichtextInstruction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentCommonRichtextInstructionInput = {\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentCommonRichtextInstructionInput = {\n  id?: Maybe<Scalars['ID']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport enum Enum_Componentcommonrsvp_Status {\n  New = 'NEW',\n  Sent = 'SENT',\n  Verified = 'VERIFIED',\n  Canceled = 'CANCELED',\n  Pending = 'PENDING'\n}\n\nexport enum Enum_Componentcommonrsvp_Type {\n  Admin = 'ADMIN',\n  Member = 'MEMBER'\n}\n\nexport type ComponentCommonRsvp = {\n  __typename?: 'ComponentCommonRsvp';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  email?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Componentcommonrsvp_Status>;\n  phone?: Maybe<Scalars['String']>;\n  member?: Maybe<Member>;\n  type?: Maybe<Enum_Componentcommonrsvp_Type>;\n};\n\nexport type ComponentCommonRsvpInput = {\n  email?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Componentcommonrsvp_Status>;\n  phone?: Maybe<Scalars['String']>;\n  member?: Maybe<Scalars['ID']>;\n  type?: Maybe<Enum_Componentcommonrsvp_Type>;\n};\n\nexport type EditComponentCommonRsvpInput = {\n  id?: Maybe<Scalars['ID']>;\n  email?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['String']>;\n  status?: Maybe<Enum_Componentcommonrsvp_Status>;\n  phone?: Maybe<Scalars['String']>;\n  member?: Maybe<Scalars['ID']>;\n  type?: Maybe<Enum_Componentcommonrsvp_Type>;\n};\n\nexport type ComponentCommonSimpleInstruction = {\n  __typename?: 'ComponentCommonSimpleInstruction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  description?: Maybe<Scalars['String']>;\n  attachment?: Maybe<UploadFile>;\n};\n\nexport type ComponentCommonSimpleInstructionInput = {\n  description?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentCommonSimpleInstructionInput = {\n  id?: Maybe<Scalars['ID']>;\n  description?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentFeedCotentContent = {\n  __typename?: 'ComponentFeedCotentContent';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  version?: Maybe<Scalars['String']>;\n  userName?: Maybe<Scalars['String']>;\n  activityName?: Maybe<Scalars['String']>;\n  groupName?: Maybe<Scalars['String']>;\n  notionTitle?: Maybe<Scalars['String']>;\n  proposalTitle?: Maybe<Scalars['String']>;\n  questionTitle?: Maybe<Scalars['String']>;\n  comment?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentFeedCotentContentInput = {\n  version?: Maybe<Scalars['String']>;\n  userName?: Maybe<Scalars['String']>;\n  activityName?: Maybe<Scalars['String']>;\n  groupName?: Maybe<Scalars['String']>;\n  notionTitle?: Maybe<Scalars['String']>;\n  proposalTitle?: Maybe<Scalars['String']>;\n  questionTitle?: Maybe<Scalars['String']>;\n  comment?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentFeedCotentContentInput = {\n  id?: Maybe<Scalars['ID']>;\n  version?: Maybe<Scalars['String']>;\n  userName?: Maybe<Scalars['String']>;\n  activityName?: Maybe<Scalars['String']>;\n  groupName?: Maybe<Scalars['String']>;\n  notionTitle?: Maybe<Scalars['String']>;\n  proposalTitle?: Maybe<Scalars['String']>;\n  questionTitle?: Maybe<Scalars['String']>;\n  comment?: Maybe<Scalars['String']>;\n};\n\nexport enum Enum_Componenthomepagecompanyevent_Category {\n  Market = 'MARKET',\n  Technology = 'TECHNOLOGY',\n  Management = 'MANAGEMENT',\n  Social = 'SOCIAL'\n}\n\nexport type ComponentHomepageCompanyEvent = {\n  __typename?: 'ComponentHomepageCompanyEvent';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  eventDate?: Maybe<Scalars['Date']>;\n  category?: Maybe<Enum_Componenthomepagecompanyevent_Category>;\n  summary?: Maybe<Scalars['String']>;\n  article?: Maybe<Scalars['String']>;\n  eventDateText?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentHomepageCompanyEventInput = {\n  eventDate?: Maybe<Scalars['Date']>;\n  category?: Maybe<Enum_Componenthomepagecompanyevent_Category>;\n  summary?: Maybe<Scalars['String']>;\n  article?: Maybe<Scalars['String']>;\n  eventDateText?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentHomepageCompanyEventInput = {\n  id?: Maybe<Scalars['ID']>;\n  eventDate?: Maybe<Scalars['Date']>;\n  category?: Maybe<Enum_Componenthomepagecompanyevent_Category>;\n  summary?: Maybe<Scalars['String']>;\n  article?: Maybe<Scalars['String']>;\n  eventDateText?: Maybe<Scalars['String']>;\n};\n\nexport enum Enum_Componentinteractionlike_Type {\n  Like = 'LIKE',\n  Best = 'BEST',\n  Sad = 'SAD',\n  Happy = 'HAPPY',\n  Angry = 'ANGRY'\n}\n\n/** 사용자 반응이 좋아요에 해당하는 경우 추가 저장 정보 */\nexport type ComponentInteractionLike = {\n  __typename?: 'ComponentInteractionLike';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  type: Enum_Componentinteractionlike_Type;\n};\n\nexport type ComponentInteractionLikeInput = {\n  type?: Maybe<Enum_Componentinteractionlike_Type>;\n};\n\nexport type EditComponentInteractionLikeInput = {\n  id?: Maybe<Scalars['ID']>;\n  type?: Maybe<Enum_Componentinteractionlike_Type>;\n};\n\n/** 사용자 반응 중에서 조회(읽음)에 해당하는 경우 추가 저장 정보 */\nexport type ComponentInteractionRead = {\n  __typename?: 'ComponentInteractionRead';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  count?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentInteractionReadInput = {\n  count?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentInteractionReadInput = {\n  id?: Maybe<Scalars['ID']>;\n  count?: Maybe<Scalars['Int']>;\n};\n\nexport enum Enum_Componentinteractionreport_Reason {\n  PrivacyViolation = 'PRIVACY_VIOLATION',\n  ConfidentialityBreach = 'CONFIDENTIALITY_BREACH',\n  Defamation = 'DEFAMATION',\n  IllegalContent = 'ILLEGAL_CONTENT',\n  FakeInformation = 'FAKE_INFORMATION',\n  Other = 'OTHER'\n}\n\n/** 신고 사유에 해당하는 컴포넌트 타입 */\nexport type ComponentInteractionReport = {\n  __typename?: 'ComponentInteractionReport';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  reason: Enum_Componentinteractionreport_Reason;\n  text?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentInteractionReportInput = {\n  reason: Enum_Componentinteractionreport_Reason;\n  text?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentInteractionReportInput = {\n  id?: Maybe<Scalars['ID']>;\n  reason?: Maybe<Enum_Componentinteractionreport_Reason>;\n  text?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentNavigationNavigation = {\n  __typename?: 'ComponentNavigationNavigation';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  activityId?: Maybe<Scalars['String']>;\n  activityType?: Maybe<Scalars['String']>;\n  postId?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  groupId?: Maybe<Scalars['String']>;\n  memberId?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentNavigationNavigationInput = {\n  activityId?: Maybe<Scalars['String']>;\n  activityType?: Maybe<Scalars['String']>;\n  postId?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  groupId?: Maybe<Scalars['String']>;\n  memberId?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentNavigationNavigationInput = {\n  id?: Maybe<Scalars['ID']>;\n  activityId?: Maybe<Scalars['String']>;\n  activityType?: Maybe<Scalars['String']>;\n  postId?: Maybe<Scalars['String']>;\n  status?: Maybe<Scalars['String']>;\n  groupId?: Maybe<Scalars['String']>;\n  memberId?: Maybe<Scalars['String']>;\n  invitationCode?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentPostAnswerListAnswerDynamicZone = ComponentPostScaleAnswer | ComponentPostSingleChoiceAnswer | ComponentPostMultipleChoiceAnswer | ComponentPostTextAnswer | ComponentPostShortAnswer;\n\n\n/** 이 컴포넌트는 컴포넌트에서 dynamic zone을 지원하는지 테스트할 목적으로 만들었다. 모델 JSON 파일에서 dynamic zone 타입 필드를 작성하는 것이 가능하지만 문제는 이렇게 만들어진 컴포넌트 필드에 대한 렌더링 지원이 안 되어 Strapi 프론트엔드에서는 데이터 입력이 불가능하다는 것이다. */\nexport type ComponentPostAnswerList = {\n  __typename?: 'ComponentPostAnswerList';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  answer: Array<Maybe<ComponentPostAnswerListAnswerDynamicZone>>;\n};\n\nexport type ComponentPostAnswerListInput = {\n  answer: Array<Scalars['ComponentPostAnswerListAnswerDynamicZoneInput']>;\n};\n\nexport type EditComponentPostAnswerListInput = {\n  id?: Maybe<Scalars['ID']>;\n  answer: Array<Scalars['ComponentPostAnswerListAnswerDynamicZoneInput']>;\n};\n\n/** 게시판에 올리는 게시글 */\nexport type ComponentPostArticle = {\n  __typename?: 'ComponentPostArticle';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<UploadFile>;\n};\n\nexport type ComponentPostArticleInput = {\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentPostArticleInput = {\n  id?: Maybe<Scalars['ID']>;\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\n/** 액티비티에 대한 댓글 */\nexport type ComponentPostCommentOnActivity = {\n  __typename?: 'ComponentPostCommentOnActivity';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<UploadFile>;\n};\n\nexport type ComponentPostCommentOnActivityInput = {\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentPostCommentOnActivityInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\n/** 액티비티 참여 응답(설문, 투표, 퀴즈에 대한 응답, 게시판 게시글, 아이디어 제안 등)에 달리는 댓글 */\nexport type ComponentPostCommentOnPost = {\n  __typename?: 'ComponentPostCommentOnPost';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<UploadFile>;\n};\n\nexport type ComponentPostCommentOnPostInput = {\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentPostCommentOnPostInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type ComponentPostItem = {\n  __typename?: 'ComponentPostItem';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n};\n\nexport type ComponentPostItemInput = {\n  _?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentPostItemInput = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n/** 객관식 문제에 대한 답. 보기 중에서 여러 개를 고르는 복수선택에 사용됨 */\nexport type ComponentPostMultipleChoiceAnswer = {\n  __typename?: 'ComponentPostMultipleChoiceAnswer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  selection?: Maybe<Array<Maybe<ComponentPostSelection>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Question>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPostMultipleChoiceAnswerInput = {\n  selection?: Maybe<Array<Maybe<ComponentPostSelectionInput>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPostMultipleChoiceAnswerInput = {\n  id?: Maybe<Scalars['ID']>;\n  selection?: Maybe<Array<Maybe<EditComponentPostSelectionInput>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\n/** 아이디어박스 액티비티에 대한 제안(proposal) */\nexport type ComponentPostProposal = {\n  __typename?: 'ComponentPostProposal';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\n/** 아이디어박스 액티비티에 대한 제안(proposal) */\nexport type ComponentPostProposalAttachmentArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentPostProposalInput = {\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type EditComponentPostProposalInput = {\n  id?: Maybe<Scalars['ID']>;\n  title?: Maybe<Scalars['String']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type ComponentPostQnaQuestion = {\n  __typename?: 'ComponentPostQnaQuestion';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<UploadFile>>>;\n};\n\n\nexport type ComponentPostQnaQuestionAttachmentArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\nexport type ComponentPostQnaQuestionInput = {\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type EditComponentPostQnaQuestionInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  attachment?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\n/** 댓글에 달리는 답글 */\nexport type ComponentPostReply = {\n  __typename?: 'ComponentPostReply';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text?: Maybe<Scalars['String']>;\n  replyTo?: Maybe<Member>;\n  attachment?: Maybe<UploadFile>;\n};\n\nexport type ComponentPostReplyInput = {\n  text?: Maybe<Scalars['String']>;\n  replyTo?: Maybe<Scalars['ID']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\nexport type EditComponentPostReplyInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  replyTo?: Maybe<Scalars['ID']>;\n  attachment?: Maybe<Scalars['ID']>;\n};\n\n/** 리커트 척도 유형의 문제에 대한 답 */\nexport type ComponentPostScaleAnswer = {\n  __typename?: 'ComponentPostScaleAnswer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  value?: Maybe<Scalars['Int']>;\n  question?: Maybe<Question>;\n  key?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentPostScaleAnswerInput = {\n  value?: Maybe<Scalars['Int']>;\n  question?: Maybe<Scalars['ID']>;\n  key?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentPostScaleAnswerInput = {\n  id?: Maybe<Scalars['ID']>;\n  value?: Maybe<Scalars['Int']>;\n  question?: Maybe<Scalars['ID']>;\n  key?: Maybe<Scalars['String']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\n/** 객관식 문제에 대한 답으로 선택한 보기(옵션) */\nexport type ComponentPostSelection = {\n  __typename?: 'ComponentPostSelection';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  value?: Maybe<Scalars['Int']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\nexport type ComponentPostSelectionInput = {\n  value?: Maybe<Scalars['Int']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\nexport type EditComponentPostSelectionInput = {\n  id?: Maybe<Scalars['ID']>;\n  value?: Maybe<Scalars['Int']>;\n  sequence?: Maybe<Scalars['Int']>;\n};\n\n/** 주관식 단답형 문제에 대한 답. 서술형의 주관식 문제과 다른 점은 입력값의 길이가 짧고 몇 개의 단어 또는 숫자를 기입한다는 것임. */\nexport type ComponentPostShortAnswer = {\n  __typename?: 'ComponentPostShortAnswer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text: Scalars['String'];\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Question>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPostShortAnswerInput = {\n  text: Scalars['String'];\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPostShortAnswerInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\n/** 객관식 문제에 대한 답. 보기 중에서 하나만 고르는 단수선택에 사용됨 */\nexport type ComponentPostSingleChoiceAnswer = {\n  __typename?: 'ComponentPostSingleChoiceAnswer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  selection?: Maybe<Array<Maybe<ComponentPostSelection>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Question>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPostSingleChoiceAnswerInput = {\n  selection?: Maybe<Array<Maybe<ComponentPostSelectionInput>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPostSingleChoiceAnswerInput = {\n  id?: Maybe<Scalars['ID']>;\n  selection?: Maybe<Array<Maybe<EditComponentPostSelectionInput>>>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\n/** 주관식에 문제에 대한 답 */\nexport type ComponentPostTextAnswer = {\n  __typename?: 'ComponentPostTextAnswer';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  text?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Question>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentPostTextAnswerInput = {\n  text?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type EditComponentPostTextAnswerInput = {\n  id?: Maybe<Scalars['ID']>;\n  text?: Maybe<Scalars['String']>;\n  key?: Maybe<Scalars['String']>;\n  question?: Maybe<Scalars['ID']>;\n  sequence?: Maybe<Scalars['Int']>;\n  isCorrect?: Maybe<Scalars['Boolean']>;\n};\n\nexport type ComponentRewardRewardSetting = {\n  __typename?: 'ComponentRewardRewardSetting';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentRewardRewardSettingInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentRewardRewardSettingInput = {\n  id?: Maybe<Scalars['ID']>;\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n};\n\nexport enum Enum_Componentrewardsettlementinstruction_Paymentmethod {\n  Bankwire = 'BANKWIRE',\n  DirectPayment = 'DIRECT_PAYMENT',\n  CreditCard = 'CREDIT_CARD',\n  Voucher = 'VOUCHER',\n  Paypal = 'PAYPAL'\n}\n\nexport type ComponentRewardSettlementInstruction = {\n  __typename?: 'ComponentRewardSettlementInstruction';\n  id: Scalars['ID'];\n  _id: Scalars['ID'];\n  accountNumber?: Maybe<Scalars['String']>;\n  paymentMethod: Enum_Componentrewardsettlementinstruction_Paymentmethod;\n  reference?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentRewardSettlementInstructionInput = {\n  accountNumber?: Maybe<Scalars['String']>;\n  paymentMethod: Enum_Componentrewardsettlementinstruction_Paymentmethod;\n  reference?: Maybe<Scalars['String']>;\n};\n\nexport type EditComponentRewardSettlementInstructionInput = {\n  id?: Maybe<Scalars['ID']>;\n  accountNumber?: Maybe<Scalars['String']>;\n  paymentMethod?: Maybe<Enum_Componentrewardsettlementinstruction_Paymentmethod>;\n  reference?: Maybe<Scalars['String']>;\n};\n\nexport type Morph = SummarizeResponseData | SummarizeResponse | JoinActivityPayload | DeleteEventPayload | GroupAndMemberPayload | MemberRoleInfoResponse | ReportDataType | SubDataType | UpdateStatusPayload | SortedReportsPayload | SendInvitationEmailPayload | InvitationCodeInfoResponse | AdminInvitedPayload | StartQrcodeCommPayload | MessageQrcodeCommPayload | BackupRecoveryPayload | Product | Brand | Category | PurchaseInfo | ProductListResponse | ProductInfo | UserPoints | PurchaseCouponPayload | RefundCouponPayload | PaymentResponsePayload | InitPaymentPayload | JoinWorkSpaceResult | UsersPermissionsMe | UsersPermissionsMeRole | UsersPermissionsLoginPayload | UserPermissionsPasswordPayload | Activity | ActivityConnection | ActivityAggregator | ActivityAggregatorSum | ActivityAggregatorAvg | ActivityAggregatorMin | ActivityAggregatorMax | ActivityGroupBy | ActivityConnectionId | ActivityConnection_Id | ActivityConnectionCreatedAt | ActivityConnectionUpdatedAt | ActivityConnectionName | ActivityConnectionType | ActivityConnectionDescription | ActivityConnectionIsAnonymous | ActivityConnectionEffectiveDate | ActivityConnectionDeadline | ActivityConnectionRewardOption | ActivityConnectionRewardAllocationAmount | ActivityConnectionRewardPaidAmount | ActivityConnectionStatus | ActivityConnectionIsShowResultAfterDeadline | ActivityConnectionSurvey | ActivityConnectionGroup | ActivityConnectionPoll | ActivityConnectionQuiz | ActivityConnectionWorkspace | ActivityConnectionCreator | ActivityConnectionIdea_Box | ActivityConnectionQna | ActivityConnectionBoard | CreateActivityPayload | UpdateActivityPayload | DeleteActivityPayload | Board | BoardConnection | BoardAggregator | BoardGroupBy | BoardConnectionId | BoardConnection_Id | BoardConnectionCreatedAt | BoardConnectionUpdatedAt | BoardConnectionIsTemplate | BoardConnectionName | BoardConnectionDescription | BoardConnectionWorkspace | BoardConnectionIsAnonymous | BoardConnectionCreator | CreateBoardPayload | UpdateBoardPayload | DeleteBoardPayload | Copyright | UpdateCopyrightPayload | DeleteCopyrightPayload | Customer | CustomerConnection | CustomerAggregator | CustomerGroupBy | CustomerConnectionId | CustomerConnection_Id | CustomerConnectionCreatedAt | CustomerConnectionUpdatedAt | CustomerConnectionName | CustomerConnectionEffectiveDate | CustomerConnectionSubscriptionPlan | CustomerConnectionPaymentFrequency | CustomerConnectionStatus | CreateCustomerPayload | UpdateCustomerPayload | DeleteCustomerPayload | Feeds | FeedsConnection | FeedsAggregator | FeedsGroupBy | FeedsConnectionId | FeedsConnection_Id | FeedsConnectionCreatedAt | FeedsConnectionUpdatedAt | FeedsConnectionTarget | FeedsConnectionType | FeedsConnectionContent | FeedsConnectionNavigation | FeedsConnectionTimestamp | FeedsConnectionIsRead | FeedsConnectionPublished_At | CreateFeedPayload | UpdateFeedPayload | DeleteFeedPayload | Follow | FollowConnection | FollowAggregator | FollowGroupBy | FollowConnectionId | FollowConnection_Id | FollowConnectionCreatedAt | FollowConnectionUpdatedAt | FollowConnectionMember | FollowConnectionTarget | FollowConnectionIsActive | FollowConnectionPublished_At | CreateFollowPayload | UpdateFollowPayload | DeleteFollowPayload | Group | GroupConnection | GroupAggregator | GroupGroupBy | GroupConnectionId | GroupConnection_Id | GroupConnectionCreatedAt | GroupConnectionUpdatedAt | GroupConnectionName | GroupConnectionGroupType | GroupConnectionWorkspace | GroupConnectionCreator | GroupConnectionAttachment | GroupConnectionDescription | GroupConnectionStatus | GroupConnectionTrail | GroupConnectionIsCertified | CreateGroupPayload | UpdateGroupPayload | DeleteGroupPayload | History | UpdateHistoryPayload | DeleteHistoryPayload | Home | UpdateHomePayload | DeleteHomePayload | IdeaBox | IdeaBoxConnection | IdeaBoxAggregator | IdeaBoxGroupBy | IdeaBoxConnectionId | IdeaBoxConnection_Id | IdeaBoxConnectionCreatedAt | IdeaBoxConnectionUpdatedAt | IdeaBoxConnectionIsTemplate | IdeaBoxConnectionActivity | IdeaBoxConnectionWorkspace | IdeaBoxConnectionCreator | CreateIdeaBoxPayload | UpdateIdeaBoxPayload | DeleteIdeaBoxPayload | Interaction | InteractionConnection | InteractionAggregator | InteractionGroupBy | InteractionConnectionId | InteractionConnection_Id | InteractionConnectionCreatedAt | InteractionConnectionUpdatedAt | InteractionConnectionType | InteractionConnectionActivity | InteractionConnectionGroup | InteractionConnectionPost | InteractionConnectionWorkspace | InteractionConnectionActor | CreateInteractionPayload | UpdateInteractionPayload | DeleteInteractionPayload | Invitation | InvitationConnection | InvitationAggregator | InvitationGroupBy | InvitationConnectionId | InvitationConnection_Id | InvitationConnectionCreatedAt | InvitationConnectionUpdatedAt | InvitationConnectionScope | InvitationConnectionSentDate | InvitationConnectionExpiredDate | CreateInvitationPayload | UpdateInvitationPayload | DeleteInvitationPayload | MemberInteraction | MemberInteractionConnection | MemberInteractionAggregator | MemberInteractionAggregatorSum | MemberInteractionAggregatorAvg | MemberInteractionAggregatorMin | MemberInteractionAggregatorMax | MemberInteractionGroupBy | MemberInteractionConnectionId | MemberInteractionConnection_Id | MemberInteractionConnectionCreatedAt | MemberInteractionConnectionUpdatedAt | MemberInteractionConnectionType | MemberInteractionConnectionQuantity | MemberInteractionConnectionReceiver | MemberInteractionConnectionActivity | MemberInteractionConnectionWorkspace | MemberInteractionConnectionActor | CreateMemberInteractionPayload | UpdateMemberInteractionPayload | DeleteMemberInteractionPayload | MemberRole | MemberRoleConnection | MemberRoleAggregator | MemberRoleGroupBy | MemberRoleConnectionId | MemberRoleConnection_Id | MemberRoleConnectionCreatedAt | MemberRoleConnectionUpdatedAt | MemberRoleConnectionType | MemberRoleConnectionScope | MemberRoleConnectionActivity | MemberRoleConnectionGroup | MemberRoleConnectionWorkspace | MemberRoleConnectionMember | MemberRoleConnectionStatus | MemberRoleConnectionUsername | CreateMemberRolePayload | UpdateMemberRolePayload | DeleteMemberRolePayload | Member | MemberConnection | MemberAggregator | MemberAggregatorSum | MemberAggregatorAvg | MemberAggregatorMin | MemberAggregatorMax | MemberGroupBy | MemberConnectionId | MemberConnection_Id | MemberConnectionCreatedAt | MemberConnectionUpdatedAt | MemberConnectionUsername | MemberConnectionUserClass | MemberConnectionAddress | MemberConnectionBalance | MemberConnectionAvatar | MemberConnectionLastAccessTime | MemberConnectionUser | MemberConnectionEmail | CreateMemberPayload | UpdateMemberPayload | DeleteMemberPayload | PointPurchase | PointPurchaseConnection | PointPurchaseAggregator | PointPurchaseAggregatorSum | PointPurchaseAggregatorAvg | PointPurchaseAggregatorMin | PointPurchaseAggregatorMax | PointPurchaseGroupBy | PointPurchaseConnectionId | PointPurchaseConnection_Id | PointPurchaseConnectionCreatedAt | PointPurchaseConnectionUpdatedAt | PointPurchaseConnectionPointAmount | PointPurchaseConnectionCurrencyAmount | PointPurchaseConnectionCurrencyUnit | PointPurchaseConnectionPurchaseDate | PointPurchaseConnectionSettlementInstruction | PointPurchaseConnectionTransaction | CreatePointPurchasePayload | UpdatePointPurchasePayload | DeletePointPurchasePayload | Poll | PollConnection | PollAggregator | PollGroupBy | PollConnectionId | PollConnection_Id | PollConnectionCreatedAt | PollConnectionUpdatedAt | PollConnectionIsTemplate | PollConnectionActivity | PollConnectionTemplate | PollConnectionWorkspace | PollConnectionCreator | CreatePollPayload | UpdatePollPayload | DeletePollPayload | Post | PostConnection | PostAggregator | PostAggregatorSum | PostAggregatorAvg | PostAggregatorMin | PostAggregatorMax | PostGroupBy | PostConnectionId | PostConnection_Id | PostConnectionCreatedAt | PostConnectionUpdatedAt | PostConnectionType | PostConnectionActivity | PostConnectionParentPost | PostConnectionWriter | PostConnectionMyScore | PostConnectionStatus | CreatePostPayload | UpdatePostPayload | DeletePostPayload | Qna | QnaConnection | QnaAggregator | QnaGroupBy | QnaConnectionId | QnaConnection_Id | QnaConnectionCreatedAt | QnaConnectionUpdatedAt | QnaConnectionIsTemplate | QnaConnectionActivity | QnaConnectionWorkspace | QnaConnectionCreator | CreateQnaPayload | UpdateQnaPayload | DeleteQnaPayload | QrcodeComm | QrcodeCommConnection | QrcodeCommAggregator | QrcodeCommAggregatorSum | QrcodeCommAggregatorAvg | QrcodeCommAggregatorMin | QrcodeCommAggregatorMax | QrcodeCommGroupBy | QrcodeCommConnectionId | QrcodeCommConnection_Id | QrcodeCommConnectionCreatedAt | QrcodeCommConnectionUpdatedAt | QrcodeCommConnectionPubKey | QrcodeCommConnectionMessage | QrcodeCommConnectionExpireAt | CreateQrcodeCommPayload | UpdateQrcodeCommPayload | DeleteQrcodeCommPayload | Question | QuestionConnection | QuestionAggregator | QuestionAggregatorSum | QuestionAggregatorAvg | QuestionAggregatorMin | QuestionAggregatorMax | QuestionGroupBy | QuestionConnectionId | QuestionConnection_Id | QuestionConnectionCreatedAt | QuestionConnectionUpdatedAt | QuestionConnectionTitle | QuestionConnectionDescription | QuestionConnectionKey | QuestionConnectionIsRequired | QuestionConnectionType | QuestionConnectionTags | QuestionConnectionSequence | QuestionConnectionPoint | QuestionConnectionSurvey | QuestionConnectionPoll | QuestionConnectionQuiz | QuestionConnectionWorkspace | QuestionConnectionStatus | CreateQuestionPayload | UpdateQuestionPayload | DeleteQuestionPayload | Quiz | QuizConnection | QuizAggregator | QuizGroupBy | QuizConnectionId | QuizConnection_Id | QuizConnectionCreatedAt | QuizConnectionUpdatedAt | QuizConnectionIsTemplate | QuizConnectionActivity | QuizConnectionWorkspace | QuizConnectionTemplate | QuizConnectionCreator | CreateQuizPayload | UpdateQuizPayload | DeleteQuizPayload | Recovery | RecoveryConnection | RecoveryAggregator | RecoveryGroupBy | RecoveryConnectionId | RecoveryConnection_Id | RecoveryConnectionCreatedAt | RecoveryConnectionUpdatedAt | RecoveryConnectionAddress | RecoveryConnectionEncryptedData | CreateRecoveryPayload | UpdateRecoveryPayload | DeleteRecoveryPayload | Survey | SurveyConnection | SurveyAggregator | SurveyGroupBy | SurveyConnectionId | SurveyConnection_Id | SurveyConnectionCreatedAt | SurveyConnectionUpdatedAt | SurveyConnectionIsTemplate | SurveyConnectionActivity | SurveyConnectionWorkspace | SurveyConnectionTemplate | SurveyConnectionCreator | CreateSurveyPayload | UpdateSurveyPayload | DeleteSurveyPayload | Trails | TrailsConnection | TrailsAggregator | TrailsGroupBy | TrailsConnectionId | TrailsConnection_Id | TrailsConnectionCreatedAt | TrailsConnectionUpdatedAt | TrailsConnectionCategory | TrailsConnectionCategorySub | TrailsConnectionAction | TrailsConnectionDate | TrailsConnectionUser | TrailsConnectionTarget | TrailsConnectionDetailInfo | TrailsConnectionWorkspace | TrailsConnectionActivity | TrailsConnectionPost | TrailsConnectionGroup | TrailsConnectionKey | TrailsConnectionPublished_At | CreateTrailPayload | UpdateTrailPayload | DeleteTrailPayload | Transaction | TransactionConnection | TransactionAggregator | TransactionAggregatorSum | TransactionAggregatorAvg | TransactionAggregatorMin | TransactionAggregatorMax | TransactionGroupBy | TransactionConnectionId | TransactionConnection_Id | TransactionConnectionCreatedAt | TransactionConnectionUpdatedAt | TransactionConnectionSenderAddress | TransactionConnectionReceiverAddress | TransactionConnectionTransactionType | TransactionConnectionTransactionDate | TransactionConnectionSettlementDate | TransactionConnectionAmount | TransactionConnectionTransactionStatus | TransactionConnectionReferenceActivity | TransactionConnectionReferencePurchase | CreateTransactionPayload | UpdateTransactionPayload | DeleteTransactionPayload | Workspace | WorkspaceConnection | WorkspaceAggregator | WorkspaceAggregatorSum | WorkspaceAggregatorAvg | WorkspaceAggregatorMin | WorkspaceAggregatorMax | WorkspaceGroupBy | WorkspaceConnectionId | WorkspaceConnection_Id | WorkspaceConnectionCreatedAt | WorkspaceConnectionUpdatedAt | WorkspaceConnectionName | WorkspaceConnectionAddress | WorkspaceConnectionBalance | WorkspaceConnectionIsEncrypted | WorkspaceConnectionEncryptionKey | WorkspaceConnectionSubscriptionPlan | WorkspaceConnectionStatus | WorkspaceConnectionDescription | WorkspaceConnectionCreator | WorkspaceConnectionAvatar | WorkspaceConnectionWorkspaceKey | CreateWorkspacePayload | UpdateWorkspacePayload | DeleteWorkspacePayload | UploadFile | UploadFileConnection | UploadFileAggregator | UploadFileAggregatorSum | UploadFileAggregatorAvg | UploadFileAggregatorMin | UploadFileAggregatorMax | UploadFileGroupBy | UploadFileConnectionId | UploadFileConnection_Id | UploadFileConnectionCreatedAt | UploadFileConnectionUpdatedAt | UploadFileConnectionName | UploadFileConnectionAlternativeText | UploadFileConnectionCaption | UploadFileConnectionWidth | UploadFileConnectionHeight | UploadFileConnectionFormats | UploadFileConnectionHash | UploadFileConnectionExt | UploadFileConnectionMime | UploadFileConnectionSize | UploadFileConnectionUrl | UploadFileConnectionPreviewUrl | UploadFileConnectionProvider | UploadFileConnectionProvider_Metadata | DeleteFilePayload | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsRoleConnection | UsersPermissionsRoleAggregator | UsersPermissionsRoleGroupBy | UsersPermissionsRoleConnectionId | UsersPermissionsRoleConnection_Id | UsersPermissionsRoleConnectionName | UsersPermissionsRoleConnectionDescription | UsersPermissionsRoleConnectionType | CreateRolePayload | UpdateRolePayload | DeleteRolePayload | UsersPermissionsUser | UsersPermissionsUserConnection | UsersPermissionsUserAggregator | UsersPermissionsUserGroupBy | UsersPermissionsUserConnectionId | UsersPermissionsUserConnection_Id | UsersPermissionsUserConnectionCreatedAt | UsersPermissionsUserConnectionUpdatedAt | UsersPermissionsUserConnectionUsername | UsersPermissionsUserConnectionEmail | UsersPermissionsUserConnectionProvider | UsersPermissionsUserConnectionConfirmed | UsersPermissionsUserConnectionBlocked | UsersPermissionsUserConnectionRole | UsersPermissionsUserConnectionMember | CreateUserPayload | UpdateUserPayload | DeleteUserPayload | ComponentActivityChoiceOptionList | ComponentActivityChoiceOption | ComponentActivityCustomLabel | ComponentActivityIdeaBoxOption | ComponentActivityNumberOfParticipant | ComponentActivityPollOption | ComponentActivityQnaOption | ComponentActivityQuizOption | ComponentActivityScaleOption | ComponentActivitySurveyOption | ComponentActivityTemplateOption | ComponentActivityTextOption | ComponentActivityTier | ComponentCommonContact | ComponentCommonRichtextInstruction | ComponentCommonRsvp | ComponentCommonSimpleInstruction | ComponentFeedCotentContent | ComponentHomepageCompanyEvent | ComponentInteractionLike | ComponentInteractionRead | ComponentInteractionReport | ComponentNavigationNavigation | ComponentPostAnswerList | ComponentPostArticle | ComponentPostCommentOnActivity | ComponentPostCommentOnPost | ComponentPostItem | ComponentPostMultipleChoiceAnswer | ComponentPostProposal | ComponentPostQnaQuestion | ComponentPostReply | ComponentPostScaleAnswer | ComponentPostSelection | ComponentPostShortAnswer | ComponentPostSingleChoiceAnswer | ComponentPostTextAnswer | ComponentRewardRewardSetting | ComponentRewardSettlementInstruction;\n\nexport type InputId = {\n  id: Scalars['ID'];\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type AdminUser = {\n  __typename?: 'AdminUser';\n  id: Scalars['ID'];\n  username?: Maybe<Scalars['String']>;\n  firstname: Scalars['String'];\n  lastname: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  activity?: Maybe<Activity>;\n  activities?: Maybe<Array<Maybe<Activity>>>;\n  activitiesConnection?: Maybe<ActivityConnection>;\n  board?: Maybe<Board>;\n  boards?: Maybe<Array<Maybe<Board>>>;\n  boardsConnection?: Maybe<BoardConnection>;\n  copyright?: Maybe<Copyright>;\n  customer?: Maybe<Customer>;\n  customers?: Maybe<Array<Maybe<Customer>>>;\n  customersConnection?: Maybe<CustomerConnection>;\n  feed?: Maybe<Feeds>;\n  feeds?: Maybe<Array<Maybe<Feeds>>>;\n  feedsConnection?: Maybe<FeedsConnection>;\n  follow?: Maybe<Follow>;\n  follows?: Maybe<Array<Maybe<Follow>>>;\n  followsConnection?: Maybe<FollowConnection>;\n  group?: Maybe<Group>;\n  groups?: Maybe<Array<Maybe<Group>>>;\n  groupsConnection?: Maybe<GroupConnection>;\n  history?: Maybe<History>;\n  home?: Maybe<Home>;\n  ideaBox?: Maybe<IdeaBox>;\n  ideaBoxes?: Maybe<Array<Maybe<IdeaBox>>>;\n  ideaBoxesConnection?: Maybe<IdeaBoxConnection>;\n  interaction?: Maybe<Interaction>;\n  interactions?: Maybe<Array<Maybe<Interaction>>>;\n  interactionsConnection?: Maybe<InteractionConnection>;\n  invitation?: Maybe<Invitation>;\n  invitations?: Maybe<Array<Maybe<Invitation>>>;\n  invitationsConnection?: Maybe<InvitationConnection>;\n  memberInteraction?: Maybe<MemberInteraction>;\n  memberInteractions?: Maybe<Array<Maybe<MemberInteraction>>>;\n  memberInteractionsConnection?: Maybe<MemberInteractionConnection>;\n  memberRole?: Maybe<MemberRole>;\n  memberRoles?: Maybe<Array<Maybe<MemberRole>>>;\n  memberRolesConnection?: Maybe<MemberRoleConnection>;\n  member?: Maybe<Member>;\n  members?: Maybe<Array<Maybe<Member>>>;\n  membersConnection?: Maybe<MemberConnection>;\n  pointPurchase?: Maybe<PointPurchase>;\n  pointPurchases?: Maybe<Array<Maybe<PointPurchase>>>;\n  pointPurchasesConnection?: Maybe<PointPurchaseConnection>;\n  poll?: Maybe<Poll>;\n  polls?: Maybe<Array<Maybe<Poll>>>;\n  pollsConnection?: Maybe<PollConnection>;\n  post?: Maybe<Post>;\n  posts?: Maybe<Array<Maybe<Post>>>;\n  postsConnection?: Maybe<PostConnection>;\n  qna?: Maybe<Qna>;\n  qnas?: Maybe<Array<Maybe<Qna>>>;\n  qnasConnection?: Maybe<QnaConnection>;\n  /** @deprecated This query should not be used, using peer */\n  qrcodeComm?: Maybe<QrcodeComm>;\n  /** @deprecated This query should not be used, using peer */\n  qrcodeComms?: Maybe<Array<Maybe<QrcodeComm>>>;\n  /** @deprecated This query should not be used, using peer */\n  qrcodeCommsConnection?: Maybe<QrcodeCommConnection>;\n  question?: Maybe<Question>;\n  questions?: Maybe<Array<Maybe<Question>>>;\n  questionsConnection?: Maybe<QuestionConnection>;\n  quiz?: Maybe<Quiz>;\n  quizzes?: Maybe<Array<Maybe<Quiz>>>;\n  quizzesConnection?: Maybe<QuizConnection>;\n  /** @deprecated This query should not be used, using recoveryRestore instead. */\n  recovery?: Maybe<Recovery>;\n  /** @deprecated This query should not be used, using recoveryRestore instead. */\n  recoveries?: Maybe<Array<Maybe<Recovery>>>;\n  /** @deprecated This query should not be used, using recoveryRestore instead. */\n  recoveriesConnection?: Maybe<RecoveryConnection>;\n  survey?: Maybe<Survey>;\n  surveys?: Maybe<Array<Maybe<Survey>>>;\n  surveysConnection?: Maybe<SurveyConnection>;\n  trail?: Maybe<Trails>;\n  trails?: Maybe<Array<Maybe<Trails>>>;\n  trailsConnection?: Maybe<TrailsConnection>;\n  transaction?: Maybe<Transaction>;\n  transactions?: Maybe<Array<Maybe<Transaction>>>;\n  transactionsConnection?: Maybe<TransactionConnection>;\n  workspace?: Maybe<Workspace>;\n  workspaces?: Maybe<Array<Maybe<Workspace>>>;\n  workspacesConnection?: Maybe<WorkspaceConnection>;\n  files?: Maybe<Array<Maybe<UploadFile>>>;\n  filesConnection?: Maybe<UploadFileConnection>;\n  role?: Maybe<UsersPermissionsRole>;\n  /** Retrieve all the existing roles. You can't apply filters on this query. */\n  roles?: Maybe<Array<Maybe<UsersPermissionsRole>>>;\n  rolesConnection?: Maybe<UsersPermissionsRoleConnection>;\n  user?: Maybe<UsersPermissionsUser>;\n  users?: Maybe<Array<Maybe<UsersPermissionsUser>>>;\n  usersConnection?: Maybe<UsersPermissionsUserConnection>;\n  summarize?: Maybe<SummarizeResponse>;\n  myGroups?: Maybe<Array<Maybe<Group>>>;\n  memberRoleInfo?: Maybe<MemberRoleInfoResponse>;\n  sortedReports?: Maybe<SortedReportsPayload>;\n  invitationCodeInfo?: Maybe<InvitationCodeInfoResponse>;\n  rsvp?: Maybe<ComponentCommonRsvp>;\n  emailVerficationCheck?: Maybe<Scalars['Boolean']>;\n  joinedList?: Maybe<Array<Maybe<MemberRole>>>;\n  pendingList?: Maybe<Array<Maybe<ComponentCommonRsvp>>>;\n  removedList?: Maybe<Array<Maybe<MemberRole>>>;\n  peerQrcodeComm?: Maybe<QrcodeComm>;\n  finalQrcodeComm?: Maybe<QrcodeComm>;\n  recoveryRestore?: Maybe<Recovery>;\n  hello?: Maybe<Scalars['String']>;\n  bestProduct?: Maybe<Array<Maybe<Product>>>;\n  productList?: Maybe<ProductListResponse>;\n  productInfo?: Maybe<ProductInfo>;\n  userPoints?: Maybe<UserPoints>;\n  brandList?: Maybe<Array<Maybe<Brand>>>;\n  categoryList?: Maybe<Array<Maybe<Category>>>;\n  purchaseList?: Maybe<Array<Maybe<PurchaseInfo>>>;\n  couponInfo?: Maybe<PurchaseInfo>;\n  workspaceNameList?: Maybe<Array<Maybe<Scalars['String']>>>;\n  userNameList?: Maybe<Array<Maybe<Scalars['String']>>>;\n  userEmailList?: Maybe<Array<Maybe<Scalars['String']>>>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryActivityArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryActivitiesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryActivitiesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryBoardArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBoardsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryBoardsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryCopyrightArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCustomerArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCustomersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryCustomersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryFeedArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeedsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFeedsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryFollowArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFollowsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFollowsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryGroupArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryGroupsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryGroupsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryHistoryArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryHomeArgs = {\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryIdeaBoxArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryIdeaBoxesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryIdeaBoxesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryInteractionArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryInteractionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryInteractionsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryInvitationArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryInvitationsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryInvitationsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryMemberInteractionArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMemberInteractionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMemberInteractionsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryMemberRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMemberRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMemberRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryMemberArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMembersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryMembersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryPointPurchaseArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPointPurchasesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPointPurchasesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryPollArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPollsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPollsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryPostArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPostsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryPostsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryQnaArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQnasArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQnasConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryQrcodeCommArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQrcodeCommsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQrcodeCommsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryQuestionArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQuestionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQuestionsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryQuizArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQuizzesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryQuizzesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRecoveryArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRecoveriesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRecoveriesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySurveyArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySurveysArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QuerySurveysConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTrailArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTrailsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTrailsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryTransactionArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTransactionsArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryTransactionsConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryWorkspaceArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryWorkspacesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryWorkspacesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryFilesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryFilesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryRolesConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QueryUserArgs = {\n  id: Scalars['ID'];\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryUsersConnectionArgs = {\n  sort?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  where?: Maybe<Scalars['JSON']>;\n};\n\n\nexport type QuerySummarizeArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryMyGroupsArgs = {\n  ids: Array<Maybe<Scalars['String']>>;\n};\n\n\nexport type QueryMemberRoleInfoArgs = {\n  memberRoleId: Scalars['ID'];\n};\n\n\nexport type QuerySortedReportsArgs = {\n  input?: Maybe<SortedReportsInput>;\n};\n\n\nexport type QueryInvitationCodeInfoArgs = {\n  invitationCode?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryRsvpArgs = {\n  invitationCode?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryEmailVerficationCheckArgs = {\n  email?: Maybe<Scalars['String']>;\n  workspaceId?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryJoinedListArgs = {\n  workspaceId: Scalars['String'];\n};\n\n\nexport type QueryPendingListArgs = {\n  workspaceId: Scalars['String'];\n};\n\n\nexport type QueryRemovedListArgs = {\n  workspaceId: Scalars['String'];\n};\n\n\nexport type QueryPeerQrcodeCommArgs = {\n  peer: Scalars['String'];\n};\n\n\nexport type QueryFinalQrcodeCommArgs = {\n  id: Scalars['ID'];\n  final: Scalars['String'];\n};\n\n\nexport type QueryRecoveryRestoreArgs = {\n  restoreAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type QueryProductListArgs = {\n  brandId?: Maybe<Scalars['String']>;\n  categoryId?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryProductInfoArgs = {\n  productId: Scalars['String'];\n};\n\n\nexport type QueryUserPointsArgs = {\n  userId?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryBrandListArgs = {\n  categoryId?: Maybe<Scalars['String']>;\n};\n\n\nexport type QueryPurchaseListArgs = {\n  userId: Scalars['String'];\n};\n\n\nexport type QueryCouponInfoArgs = {\n  pinNumber: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Create Activity With Member */\n  createActivity?: Maybe<CreateActivityPayload>;\n  updateActivity?: Maybe<UpdateActivityPayload>;\n  deleteActivity?: Maybe<DeleteActivityPayload>;\n  /** Create Board */\n  createBoard?: Maybe<CreateBoardPayload>;\n  updateBoard?: Maybe<UpdateBoardPayload>;\n  deleteBoard?: Maybe<DeleteBoardPayload>;\n  updateCopyright?: Maybe<UpdateCopyrightPayload>;\n  deleteCopyright?: Maybe<DeleteCopyrightPayload>;\n  createCustomer?: Maybe<CreateCustomerPayload>;\n  updateCustomer?: Maybe<UpdateCustomerPayload>;\n  deleteCustomer?: Maybe<DeleteCustomerPayload>;\n  createFeed?: Maybe<CreateFeedPayload>;\n  updateFeed?: Maybe<UpdateFeedPayload>;\n  deleteFeed?: Maybe<DeleteFeedPayload>;\n  /** Link Follow between Member with Target(Workspace, Group, Activity) */\n  createFollow?: Maybe<CreateFollowPayload>;\n  updateFollow?: Maybe<UpdateFollowPayload>;\n  deleteFollow?: Maybe<DeleteFollowPayload>;\n  /**\n   * Create a new Group\n   * @deprecated Please use createDeforaGroup instead\n   */\n  createGroup?: Maybe<CreateGroupPayload>;\n  /**\n   * Update an existing Group\n   * @deprecated Please use updateDeforaGroup instead\n   */\n  updateGroup?: Maybe<UpdateGroupPayload>;\n  /** Delete an existing Group */\n  deleteGroup?: Maybe<DeleteGroupPayload>;\n  updateHistory?: Maybe<UpdateHistoryPayload>;\n  deleteHistory?: Maybe<DeleteHistoryPayload>;\n  updateHome?: Maybe<UpdateHomePayload>;\n  deleteHome?: Maybe<DeleteHomePayload>;\n  createIdeaBox?: Maybe<CreateIdeaBoxPayload>;\n  updateIdeaBox?: Maybe<UpdateIdeaBoxPayload>;\n  deleteIdeaBox?: Maybe<DeleteIdeaBoxPayload>;\n  createInteraction?: Maybe<CreateInteractionPayload>;\n  updateInteraction?: Maybe<UpdateInteractionPayload>;\n  deleteInteraction?: Maybe<DeleteInteractionPayload>;\n  createInvitation?: Maybe<CreateInvitationPayload>;\n  updateInvitation?: Maybe<UpdateInvitationPayload>;\n  deleteInvitation?: Maybe<DeleteInvitationPayload>;\n  createMemberInteraction?: Maybe<CreateMemberInteractionPayload>;\n  updateMemberInteraction?: Maybe<UpdateMemberInteractionPayload>;\n  deleteMemberInteraction?: Maybe<DeleteMemberInteractionPayload>;\n  createMemberRole?: Maybe<CreateMemberRolePayload>;\n  updateMemberRole?: Maybe<UpdateMemberRolePayload>;\n  deleteMemberRole?: Maybe<DeleteMemberRolePayload>;\n  createMember?: Maybe<CreateMemberPayload>;\n  updateMember?: Maybe<UpdateMemberPayload>;\n  deleteMember?: Maybe<DeleteMemberPayload>;\n  createPointPurchase?: Maybe<CreatePointPurchasePayload>;\n  updatePointPurchase?: Maybe<UpdatePointPurchasePayload>;\n  deletePointPurchase?: Maybe<DeletePointPurchasePayload>;\n  createPoll?: Maybe<CreatePollPayload>;\n  updatePoll?: Maybe<UpdatePollPayload>;\n  deletePoll?: Maybe<DeletePollPayload>;\n  createPost?: Maybe<CreatePostPayload>;\n  updatePost?: Maybe<UpdatePostPayload>;\n  deletePost?: Maybe<DeletePostPayload>;\n  createQna?: Maybe<CreateQnaPayload>;\n  updateQna?: Maybe<UpdateQnaPayload>;\n  deleteQna?: Maybe<DeleteQnaPayload>;\n  /** @deprecated This query should not be used, using start */\n  createQrcodeComm?: Maybe<CreateQrcodeCommPayload>;\n  /** @deprecated This query should not be used, using message */\n  updateQrcodeComm?: Maybe<UpdateQrcodeCommPayload>;\n  /** @deprecated This query should not be used */\n  deleteQrcodeComm?: Maybe<DeleteQrcodeCommPayload>;\n  createQuestion?: Maybe<CreateQuestionPayload>;\n  updateQuestion?: Maybe<UpdateQuestionPayload>;\n  deleteQuestion?: Maybe<DeleteQuestionPayload>;\n  createQuiz?: Maybe<CreateQuizPayload>;\n  updateQuiz?: Maybe<UpdateQuizPayload>;\n  deleteQuiz?: Maybe<DeleteQuizPayload>;\n  /**\n   * Create recovery\n   * @deprecated This query should not be used, using backupRecovery instead.\n   */\n  createRecovery?: Maybe<CreateRecoveryPayload>;\n  /**\n   * Update recovery\n   * @deprecated This query should not be used, using backupRecovery instead.\n   */\n  updateRecovery?: Maybe<UpdateRecoveryPayload>;\n  /**\n   * Delete recovery\n   * @deprecated This query should not be used, using backupRecovery instead.\n   */\n  deleteRecovery?: Maybe<DeleteRecoveryPayload>;\n  createSurvey?: Maybe<CreateSurveyPayload>;\n  updateSurvey?: Maybe<UpdateSurveyPayload>;\n  deleteSurvey?: Maybe<DeleteSurveyPayload>;\n  createTrail?: Maybe<CreateTrailPayload>;\n  updateTrail?: Maybe<UpdateTrailPayload>;\n  deleteTrail?: Maybe<DeleteTrailPayload>;\n  createTransaction?: Maybe<CreateTransactionPayload>;\n  updateTransaction?: Maybe<UpdateTransactionPayload>;\n  deleteTransaction?: Maybe<DeleteTransactionPayload>;\n  createWorkspace?: Maybe<CreateWorkspacePayload>;\n  updateWorkspace?: Maybe<UpdateWorkspacePayload>;\n  deleteWorkspace?: Maybe<DeleteWorkspacePayload>;\n  /** Delete one file */\n  deleteFile?: Maybe<DeleteFilePayload>;\n  /** Create a new role */\n  createRole?: Maybe<CreateRolePayload>;\n  /** Update an existing role */\n  updateRole?: Maybe<UpdateRolePayload>;\n  /** Delete an existing role */\n  deleteRole?: Maybe<DeleteRolePayload>;\n  /** Create a new user */\n  createUser?: Maybe<CreateUserPayload>;\n  /** Update an existing user */\n  updateUser?: Maybe<UpdateUserPayload>;\n  /** Delete an existing user */\n  deleteUser?: Maybe<DeleteUserPayload>;\n  createDeforaActivity?: Maybe<CreateActivityPayload>;\n  updateDeforaActivity?: Maybe<CreateActivityPayload>;\n  joinActivity?: Maybe<JoinActivityPayload>;\n  deleteEvent?: Maybe<DeleteEventPayload>;\n  sendPayloadToWeb?: Maybe<Scalars['Boolean']>;\n  createDeforaGroup: Group;\n  joinDeforaGroup?: Maybe<GroupAndMemberPayload>;\n  updateDeforaGroup: Group;\n  updateStatus?: Maybe<UpdateStatusPayload>;\n  sendInvitationEmail?: Maybe<Scalars['Boolean']>;\n  verifySMSCode?: Maybe<Scalars['Boolean']>;\n  inviteMember?: Maybe<Invitation>;\n  adminInvited?: Maybe<AdminInvitedPayload>;\n  memberRemove?: Maybe<Scalars['Boolean']>;\n  memberReinvite?: Maybe<Scalars['Boolean']>;\n  startQrcodeComm?: Maybe<StartQrcodeCommPayload>;\n  messageQrcodeComm?: Maybe<MessageQrcodeCommPayload>;\n  backupRecovery?: Maybe<BackupRecoveryPayload>;\n  purchaseCoupon?: Maybe<PurchaseCouponPayload>;\n  refundCoupon?: Maybe<RefundCouponPayload>;\n  checkValidation?: Maybe<PaymentResponsePayload>;\n  routinePayment?: Maybe<PaymentResponsePayload>;\n  refundPayment?: Maybe<PaymentResponsePayload>;\n  checkRoutinePayment?: Maybe<PaymentResponsePayload>;\n  updateRoutinePayment?: Maybe<PaymentResponsePayload>;\n  initPayment?: Maybe<InitPaymentPayload>;\n  joinWorkspaceWithCode?: Maybe<JoinWorkSpaceResult>;\n  createWorkspaceFirst?: Maybe<JoinWorkSpaceResult>;\n  adminAsMember?: Maybe<JoinWorkSpaceResult>;\n  updateWorkspaceKey?: Maybe<Workspace>;\n  upload: UploadFile;\n  multipleUpload: Array<Maybe<UploadFile>>;\n  updateFileInfo: UploadFile;\n  login: UsersPermissionsLoginPayload;\n  register: UsersPermissionsLoginPayload;\n  forgotPassword?: Maybe<UserPermissionsPasswordPayload>;\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateActivityArgs = {\n  input?: Maybe<CreateActivityInput>;\n};\n\n\nexport type MutationUpdateActivityArgs = {\n  input?: Maybe<UpdateActivityInput>;\n};\n\n\nexport type MutationDeleteActivityArgs = {\n  input?: Maybe<DeleteActivityInput>;\n};\n\n\nexport type MutationCreateBoardArgs = {\n  input?: Maybe<CreateBoardInput>;\n};\n\n\nexport type MutationUpdateBoardArgs = {\n  input?: Maybe<UpdateBoardInput>;\n};\n\n\nexport type MutationDeleteBoardArgs = {\n  input?: Maybe<DeleteBoardInput>;\n};\n\n\nexport type MutationUpdateCopyrightArgs = {\n  input?: Maybe<UpdateCopyrightInput>;\n};\n\n\nexport type MutationCreateCustomerArgs = {\n  input?: Maybe<CreateCustomerInput>;\n};\n\n\nexport type MutationUpdateCustomerArgs = {\n  input?: Maybe<UpdateCustomerInput>;\n};\n\n\nexport type MutationDeleteCustomerArgs = {\n  input?: Maybe<DeleteCustomerInput>;\n};\n\n\nexport type MutationCreateFeedArgs = {\n  input?: Maybe<CreateFeedInput>;\n};\n\n\nexport type MutationUpdateFeedArgs = {\n  input?: Maybe<UpdateFeedInput>;\n};\n\n\nexport type MutationDeleteFeedArgs = {\n  input?: Maybe<DeleteFeedInput>;\n};\n\n\nexport type MutationCreateFollowArgs = {\n  input?: Maybe<CreateFollowInput>;\n};\n\n\nexport type MutationUpdateFollowArgs = {\n  input?: Maybe<UpdateFollowInput>;\n};\n\n\nexport type MutationDeleteFollowArgs = {\n  input?: Maybe<DeleteFollowInput>;\n};\n\n\nexport type MutationCreateGroupArgs = {\n  input?: Maybe<CreateGroupInput>;\n};\n\n\nexport type MutationUpdateGroupArgs = {\n  input?: Maybe<UpdateGroupInput>;\n};\n\n\nexport type MutationDeleteGroupArgs = {\n  input?: Maybe<DeleteGroupInput>;\n};\n\n\nexport type MutationUpdateHistoryArgs = {\n  input?: Maybe<UpdateHistoryInput>;\n};\n\n\nexport type MutationUpdateHomeArgs = {\n  input?: Maybe<UpdateHomeInput>;\n};\n\n\nexport type MutationCreateIdeaBoxArgs = {\n  input?: Maybe<CreateIdeaBoxInput>;\n};\n\n\nexport type MutationUpdateIdeaBoxArgs = {\n  input?: Maybe<UpdateIdeaBoxInput>;\n};\n\n\nexport type MutationDeleteIdeaBoxArgs = {\n  input?: Maybe<DeleteIdeaBoxInput>;\n};\n\n\nexport type MutationCreateInteractionArgs = {\n  input?: Maybe<CreateInteractionInput>;\n};\n\n\nexport type MutationUpdateInteractionArgs = {\n  input?: Maybe<UpdateInteractionInput>;\n};\n\n\nexport type MutationDeleteInteractionArgs = {\n  input?: Maybe<DeleteInteractionInput>;\n};\n\n\nexport type MutationCreateInvitationArgs = {\n  input?: Maybe<CreateInvitationInput>;\n};\n\n\nexport type MutationUpdateInvitationArgs = {\n  input?: Maybe<UpdateInvitationInput>;\n};\n\n\nexport type MutationDeleteInvitationArgs = {\n  input?: Maybe<DeleteInvitationInput>;\n};\n\n\nexport type MutationCreateMemberInteractionArgs = {\n  input?: Maybe<CreateMemberInteractionInput>;\n};\n\n\nexport type MutationUpdateMemberInteractionArgs = {\n  input?: Maybe<UpdateMemberInteractionInput>;\n};\n\n\nexport type MutationDeleteMemberInteractionArgs = {\n  input?: Maybe<DeleteMemberInteractionInput>;\n};\n\n\nexport type MutationCreateMemberRoleArgs = {\n  input?: Maybe<CreateMemberRoleInput>;\n};\n\n\nexport type MutationUpdateMemberRoleArgs = {\n  input?: Maybe<UpdateMemberRoleInput>;\n};\n\n\nexport type MutationDeleteMemberRoleArgs = {\n  input?: Maybe<DeleteMemberRoleInput>;\n};\n\n\nexport type MutationCreateMemberArgs = {\n  input?: Maybe<CreateMemberInput>;\n};\n\n\nexport type MutationUpdateMemberArgs = {\n  input?: Maybe<UpdateMemberInput>;\n};\n\n\nexport type MutationDeleteMemberArgs = {\n  input?: Maybe<DeleteMemberInput>;\n};\n\n\nexport type MutationCreatePointPurchaseArgs = {\n  input?: Maybe<CreatePointPurchaseInput>;\n};\n\n\nexport type MutationUpdatePointPurchaseArgs = {\n  input?: Maybe<UpdatePointPurchaseInput>;\n};\n\n\nexport type MutationDeletePointPurchaseArgs = {\n  input?: Maybe<DeletePointPurchaseInput>;\n};\n\n\nexport type MutationCreatePollArgs = {\n  input?: Maybe<CreatePollInput>;\n};\n\n\nexport type MutationUpdatePollArgs = {\n  input?: Maybe<UpdatePollInput>;\n};\n\n\nexport type MutationDeletePollArgs = {\n  input?: Maybe<DeletePollInput>;\n};\n\n\nexport type MutationCreatePostArgs = {\n  input?: Maybe<CreatePostInput>;\n};\n\n\nexport type MutationUpdatePostArgs = {\n  input?: Maybe<UpdatePostInput>;\n};\n\n\nexport type MutationDeletePostArgs = {\n  input?: Maybe<DeletePostInput>;\n};\n\n\nexport type MutationCreateQnaArgs = {\n  input?: Maybe<CreateQnaInput>;\n};\n\n\nexport type MutationUpdateQnaArgs = {\n  input?: Maybe<UpdateQnaInput>;\n};\n\n\nexport type MutationDeleteQnaArgs = {\n  input?: Maybe<DeleteQnaInput>;\n};\n\n\nexport type MutationCreateQrcodeCommArgs = {\n  input?: Maybe<CreateQrcodeCommInput>;\n};\n\n\nexport type MutationUpdateQrcodeCommArgs = {\n  input?: Maybe<UpdateQrcodeCommInput>;\n};\n\n\nexport type MutationDeleteQrcodeCommArgs = {\n  input?: Maybe<DeleteQrcodeCommInput>;\n};\n\n\nexport type MutationCreateQuestionArgs = {\n  input?: Maybe<CreateQuestionInput>;\n};\n\n\nexport type MutationUpdateQuestionArgs = {\n  input?: Maybe<UpdateQuestionInput>;\n};\n\n\nexport type MutationDeleteQuestionArgs = {\n  input?: Maybe<DeleteQuestionInput>;\n};\n\n\nexport type MutationCreateQuizArgs = {\n  input?: Maybe<CreateQuizInput>;\n};\n\n\nexport type MutationUpdateQuizArgs = {\n  input?: Maybe<UpdateQuizInput>;\n};\n\n\nexport type MutationDeleteQuizArgs = {\n  input?: Maybe<DeleteQuizInput>;\n};\n\n\nexport type MutationCreateRecoveryArgs = {\n  input?: Maybe<CreateRecoveryInput>;\n};\n\n\nexport type MutationUpdateRecoveryArgs = {\n  input?: Maybe<UpdateRecoveryInput>;\n};\n\n\nexport type MutationDeleteRecoveryArgs = {\n  input?: Maybe<DeleteRecoveryInput>;\n};\n\n\nexport type MutationCreateSurveyArgs = {\n  input?: Maybe<CreateSurveyInput>;\n};\n\n\nexport type MutationUpdateSurveyArgs = {\n  input?: Maybe<UpdateSurveyInput>;\n};\n\n\nexport type MutationDeleteSurveyArgs = {\n  input?: Maybe<DeleteSurveyInput>;\n};\n\n\nexport type MutationCreateTrailArgs = {\n  input?: Maybe<CreateTrailInput>;\n};\n\n\nexport type MutationUpdateTrailArgs = {\n  input?: Maybe<UpdateTrailInput>;\n};\n\n\nexport type MutationDeleteTrailArgs = {\n  input?: Maybe<DeleteTrailInput>;\n};\n\n\nexport type MutationCreateTransactionArgs = {\n  input?: Maybe<CreateTransactionInput>;\n};\n\n\nexport type MutationUpdateTransactionArgs = {\n  input?: Maybe<UpdateTransactionInput>;\n};\n\n\nexport type MutationDeleteTransactionArgs = {\n  input?: Maybe<DeleteTransactionInput>;\n};\n\n\nexport type MutationCreateWorkspaceArgs = {\n  input?: Maybe<CreateWorkspaceInput>;\n};\n\n\nexport type MutationUpdateWorkspaceArgs = {\n  input?: Maybe<UpdateWorkspaceInput>;\n};\n\n\nexport type MutationDeleteWorkspaceArgs = {\n  input?: Maybe<DeleteWorkspaceInput>;\n};\n\n\nexport type MutationDeleteFileArgs = {\n  input?: Maybe<DeleteFileInput>;\n};\n\n\nexport type MutationCreateRoleArgs = {\n  input?: Maybe<CreateRoleInput>;\n};\n\n\nexport type MutationUpdateRoleArgs = {\n  input?: Maybe<UpdateRoleInput>;\n};\n\n\nexport type MutationDeleteRoleArgs = {\n  input?: Maybe<DeleteRoleInput>;\n};\n\n\nexport type MutationCreateUserArgs = {\n  input?: Maybe<CreateUserInput>;\n};\n\n\nexport type MutationUpdateUserArgs = {\n  input?: Maybe<UpdateUserInput>;\n};\n\n\nexport type MutationDeleteUserArgs = {\n  input?: Maybe<DeleteUserInput>;\n};\n\n\nexport type MutationCreateDeforaActivityArgs = {\n  input: CreateDeforaActivityInput;\n};\n\n\nexport type MutationUpdateDeforaActivityArgs = {\n  input: CreateDeforaActivityInput;\n};\n\n\nexport type MutationJoinActivityArgs = {\n  input: JoinActivityInput;\n};\n\n\nexport type MutationDeleteEventArgs = {\n  input: DeleteEventInput;\n};\n\n\nexport type MutationSendPayloadToWebArgs = {\n  input?: Maybe<SendPayloadInput>;\n};\n\n\nexport type MutationCreateDeforaGroupArgs = {\n  input: CreateDeforaGroupInput;\n};\n\n\nexport type MutationJoinDeforaGroupArgs = {\n  input: JoinDeforaGroupInput;\n};\n\n\nexport type MutationUpdateDeforaGroupArgs = {\n  input: UpdateDeforaGroupInput;\n};\n\n\nexport type MutationUpdateStatusArgs = {\n  input?: Maybe<UpdateStatusInput>;\n};\n\n\nexport type MutationSendInvitationEmailArgs = {\n  input?: Maybe<SendInvitationEmailInput>;\n};\n\n\nexport type MutationVerifySmsCodeArgs = {\n  input?: Maybe<VerifySmsInput>;\n};\n\n\nexport type MutationInviteMemberArgs = {\n  input?: Maybe<InviteMemberInput>;\n};\n\n\nexport type MutationAdminInvitedArgs = {\n  input?: Maybe<AdminInvitedInput>;\n};\n\n\nexport type MutationMemberRemoveArgs = {\n  memberRoleIds?: Maybe<Array<Scalars['String']>>;\n};\n\n\nexport type MutationMemberReinviteArgs = {\n  memberRoleIds?: Maybe<Array<Scalars['String']>>;\n};\n\n\nexport type MutationStartQrcodeCommArgs = {\n  input?: Maybe<StartQrcodeCommInput>;\n};\n\n\nexport type MutationMessageQrcodeCommArgs = {\n  input?: Maybe<MessageQrcodeCommInput>;\n};\n\n\nexport type MutationBackupRecoveryArgs = {\n  input: BackupRecoveryInput;\n};\n\n\nexport type MutationPurchaseCouponArgs = {\n  input?: Maybe<PurchaseCouponInput>;\n};\n\n\nexport type MutationRefundCouponArgs = {\n  pinNumber: Scalars['String'];\n  estimateOnly?: Maybe<Scalars['Int']>;\n};\n\n\nexport type MutationCheckValidationArgs = {\n  input?: Maybe<PaymentInput>;\n};\n\n\nexport type MutationRoutinePaymentArgs = {\n  input?: Maybe<PaymentInput>;\n};\n\n\nexport type MutationRefundPaymentArgs = {\n  input?: Maybe<PaymentInput>;\n};\n\n\nexport type MutationCheckRoutinePaymentArgs = {\n  input?: Maybe<PaymentInput>;\n};\n\n\nexport type MutationUpdateRoutinePaymentArgs = {\n  input?: Maybe<PaymentInput>;\n};\n\n\nexport type MutationInitPaymentArgs = {\n  input?: Maybe<InitPaymentInput>;\n};\n\n\nexport type MutationJoinWorkspaceWithCodeArgs = {\n  input?: Maybe<JoinWorkspaceWithCodeInput>;\n};\n\n\nexport type MutationCreateWorkspaceFirstArgs = {\n  input?: Maybe<CreateWorkspaceFirstInput>;\n};\n\n\nexport type MutationAdminAsMemberArgs = {\n  input?: Maybe<AdminAsMemberInput>;\n};\n\n\nexport type MutationUpdateWorkspaceKeyArgs = {\n  input?: Maybe<UpdateWorkspaceKeyInput>;\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info: FileInfoInput;\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\n\n\n\n\n\n\nexport enum CacheControlScope {\n  Public = 'PUBLIC',\n  Private = 'PRIVATE'\n}\n\nexport type CheckValidationMutationVariables = Exact<{\n  input?: Maybe<PaymentInput>;\n}>;\n\n\nexport type CheckValidationMutation = (\n  { __typename?: 'Mutation' }\n  & { checkValidation?: Maybe<(\n    { __typename?: 'paymentResponsePayload' }\n    & Pick<PaymentResponsePayload, 'success'>\n  )> }\n);\n\nexport type RefundPaymentMutationVariables = Exact<{\n  input?: Maybe<PaymentInput>;\n}>;\n\n\nexport type RefundPaymentMutation = (\n  { __typename?: 'Mutation' }\n  & { refundPayment?: Maybe<(\n    { __typename?: 'paymentResponsePayload' }\n    & Pick<PaymentResponsePayload, 'success'>\n  )> }\n);\n\nexport type InitPaymentMutationVariables = Exact<{\n  input?: Maybe<InitPaymentInput>;\n}>;\n\n\nexport type InitPaymentMutation = (\n  { __typename?: 'Mutation' }\n  & { initPayment?: Maybe<(\n    { __typename?: 'initPaymentPayload' }\n    & Pick<InitPaymentPayload, 'merchant_uid'>\n  )> }\n);\n\nexport type RoutinePaymentMutationVariables = Exact<{\n  input?: Maybe<PaymentInput>;\n}>;\n\n\nexport type RoutinePaymentMutation = (\n  { __typename?: 'Mutation' }\n  & { routinePayment?: Maybe<(\n    { __typename?: 'paymentResponsePayload' }\n    & Pick<PaymentResponsePayload, 'success'>\n  )> }\n);\n\nexport type UpdateRoutinePaymentMutationVariables = Exact<{\n  input?: Maybe<PaymentInput>;\n}>;\n\n\nexport type UpdateRoutinePaymentMutation = (\n  { __typename?: 'Mutation' }\n  & { updateRoutinePayment?: Maybe<(\n    { __typename?: 'paymentResponsePayload' }\n    & Pick<PaymentResponsePayload, 'success'>\n  )> }\n);\n\n\nexport const CheckValidationDocument = gql`\n    mutation checkValidation($input: paymentInput) {\n  checkValidation(input: $input) {\n    success\n  }\n}\n    `;\nexport type CheckValidationMutationFn = Apollo.MutationFunction<CheckValidationMutation, CheckValidationMutationVariables>;\n\n/**\n * __useCheckValidationMutation__\n *\n * To run a mutation, you first call `useCheckValidationMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCheckValidationMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [checkValidationMutation, { data, loading, error }] = useCheckValidationMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useCheckValidationMutation(baseOptions?: Apollo.MutationHookOptions<CheckValidationMutation, CheckValidationMutationVariables>) {\n        return Apollo.useMutation<CheckValidationMutation, CheckValidationMutationVariables>(CheckValidationDocument, baseOptions);\n      }\nexport type CheckValidationMutationHookResult = ReturnType<typeof useCheckValidationMutation>;\nexport type CheckValidationMutationResult = Apollo.MutationResult<CheckValidationMutation>;\nexport type CheckValidationMutationOptions = Apollo.BaseMutationOptions<CheckValidationMutation, CheckValidationMutationVariables>;\nexport const RefundPaymentDocument = gql`\n    mutation refundPayment($input: paymentInput) {\n  refundPayment(input: $input) {\n    success\n  }\n}\n    `;\nexport type RefundPaymentMutationFn = Apollo.MutationFunction<RefundPaymentMutation, RefundPaymentMutationVariables>;\n\n/**\n * __useRefundPaymentMutation__\n *\n * To run a mutation, you first call `useRefundPaymentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRefundPaymentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [refundPaymentMutation, { data, loading, error }] = useRefundPaymentMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useRefundPaymentMutation(baseOptions?: Apollo.MutationHookOptions<RefundPaymentMutation, RefundPaymentMutationVariables>) {\n        return Apollo.useMutation<RefundPaymentMutation, RefundPaymentMutationVariables>(RefundPaymentDocument, baseOptions);\n      }\nexport type RefundPaymentMutationHookResult = ReturnType<typeof useRefundPaymentMutation>;\nexport type RefundPaymentMutationResult = Apollo.MutationResult<RefundPaymentMutation>;\nexport type RefundPaymentMutationOptions = Apollo.BaseMutationOptions<RefundPaymentMutation, RefundPaymentMutationVariables>;\nexport const InitPaymentDocument = gql`\n    mutation initPayment($input: initPaymentInput) {\n  initPayment(input: $input) {\n    merchant_uid\n  }\n}\n    `;\nexport type InitPaymentMutationFn = Apollo.MutationFunction<InitPaymentMutation, InitPaymentMutationVariables>;\n\n/**\n * __useInitPaymentMutation__\n *\n * To run a mutation, you first call `useInitPaymentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useInitPaymentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [initPaymentMutation, { data, loading, error }] = useInitPaymentMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useInitPaymentMutation(baseOptions?: Apollo.MutationHookOptions<InitPaymentMutation, InitPaymentMutationVariables>) {\n        return Apollo.useMutation<InitPaymentMutation, InitPaymentMutationVariables>(InitPaymentDocument, baseOptions);\n      }\nexport type InitPaymentMutationHookResult = ReturnType<typeof useInitPaymentMutation>;\nexport type InitPaymentMutationResult = Apollo.MutationResult<InitPaymentMutation>;\nexport type InitPaymentMutationOptions = Apollo.BaseMutationOptions<InitPaymentMutation, InitPaymentMutationVariables>;\nexport const RoutinePaymentDocument = gql`\n    mutation routinePayment($input: paymentInput) {\n  routinePayment(input: $input) {\n    success\n  }\n}\n    `;\nexport type RoutinePaymentMutationFn = Apollo.MutationFunction<RoutinePaymentMutation, RoutinePaymentMutationVariables>;\n\n/**\n * __useRoutinePaymentMutation__\n *\n * To run a mutation, you first call `useRoutinePaymentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRoutinePaymentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [routinePaymentMutation, { data, loading, error }] = useRoutinePaymentMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useRoutinePaymentMutation(baseOptions?: Apollo.MutationHookOptions<RoutinePaymentMutation, RoutinePaymentMutationVariables>) {\n        return Apollo.useMutation<RoutinePaymentMutation, RoutinePaymentMutationVariables>(RoutinePaymentDocument, baseOptions);\n      }\nexport type RoutinePaymentMutationHookResult = ReturnType<typeof useRoutinePaymentMutation>;\nexport type RoutinePaymentMutationResult = Apollo.MutationResult<RoutinePaymentMutation>;\nexport type RoutinePaymentMutationOptions = Apollo.BaseMutationOptions<RoutinePaymentMutation, RoutinePaymentMutationVariables>;\nexport const UpdateRoutinePaymentDocument = gql`\n    mutation updateRoutinePayment($input: paymentInput) {\n  updateRoutinePayment(input: $input) {\n    success\n  }\n}\n    `;\nexport type UpdateRoutinePaymentMutationFn = Apollo.MutationFunction<UpdateRoutinePaymentMutation, UpdateRoutinePaymentMutationVariables>;\n\n/**\n * __useUpdateRoutinePaymentMutation__\n *\n * To run a mutation, you first call `useUpdateRoutinePaymentMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useUpdateRoutinePaymentMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [updateRoutinePaymentMutation, { data, loading, error }] = useUpdateRoutinePaymentMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useUpdateRoutinePaymentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateRoutinePaymentMutation, UpdateRoutinePaymentMutationVariables>) {\n        return Apollo.useMutation<UpdateRoutinePaymentMutation, UpdateRoutinePaymentMutationVariables>(UpdateRoutinePaymentDocument, baseOptions);\n      }\nexport type UpdateRoutinePaymentMutationHookResult = ReturnType<typeof useUpdateRoutinePaymentMutation>;\nexport type UpdateRoutinePaymentMutationResult = Apollo.MutationResult<UpdateRoutinePaymentMutation>;\nexport type UpdateRoutinePaymentMutationOptions = Apollo.BaseMutationOptions<UpdateRoutinePaymentMutation, UpdateRoutinePaymentMutationVariables>;","import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client'\n \n \nconst httpLink = new HttpLink({\n    uri: `http://localhost:1337/graphql`,\n});\n \nexport const client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n});\n \nexport default client;","export const numberWithCommas = (number: number) => {\n    if (number === 0) return '0';\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","export enum merchant {\n    point_100000 = '100,000_Abowa_Points',\n    point_200000 = '200,000_Abowa_Points',\n    point_300000 = '300,000_Abowa_Points',\n    point_500000 = '500,000_Abowa_Points',\n    point_1000000 = '1,000,000_Abowa_Points',\n    point_3000000 = '3,000,000_Abowa_Points',\n    other = 'other',\n    monthly = 'Monthly_Plan',\n    yearly = 'Yearly_Plan',\n}\n","import { merchant } from '../../../merchant';\n\nexport const returnMerchantUid = (price: number) => {\n    let foundMerchant = merchant.other;\n    switch (price) {\n        case 100000:\n            foundMerchant = merchant.point_100000;\n            break;\n        case 200000:\n            foundMerchant = merchant.point_200000;\n            break;\n        case 300000:\n            foundMerchant = merchant.point_300000;\n            break;\n        case 500000:\n            foundMerchant = merchant.point_500000;\n            break;\n        case 1000000:\n            foundMerchant = merchant.point_1000000;\n            break;\n        case 3000000:\n            foundMerchant = merchant.point_3000000;\n            break;\n        default:\n            break;\n    }\n\n    return foundMerchant;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { StyleSheet, View, Text, FlatList, TextInput, Linking, useWindowDimensions } from 'react-native';\nimport { Button, Divider, Header, Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Surface } from 'react-native-paper';\nimport { ThemeContext } from 'styled-components/native';\nimport { useCheckValidationMutation } from '../../../graphql/generated';\nimport { numberWithCommas } from '../../../utils/money';\nimport { returnMerchantUid } from './functions';\n// import jQuery from 'jquery';\n// window.$ = window.jQuery = jQuery;\n\n// var IMP = window.IMP;\n// IMP.init('imp10942072');\n\nconst PayPointHomeScreen = () => {\n    const [price, setPrice] = useState(0);\n    const [showOtherPrice, setShowOtherPrice] = useState(false);\n    const [checkValidation] = useCheckValidationMutation();\n    const windowDimensions = useWindowDimensions();\n    const theme = useContext(ThemeContext);\n\n    const paymentInput = {\n        pg: 'html5_inicis',\n        pay_method: 'card',\n        merchant_uid: 'hjinn' + `${new Date().getTime()}`, // 상품 고유번호 - userId+timestamp\n        name: returnMerchantUid(price), //상품 이름\n        amount: String(price),\n        buyer_email: 'TestEmail@gmail.com',\n        buyer_name: 'TEST_USER_NAME',\n        buyer_tel: '010-4242-4242',\n        buyer_addr: '서울특별시 강남구 어딘가',\n    };\n\n    const validationCheck = (imp_uid: string, merchant_uid: string) => {\n        checkValidation({\n            variables: {\n                input: {\n                    imp_uid: imp_uid,\n                    merchant_uid: merchant_uid,\n                },\n            },\n        }).then((result) => console.log(result));\n    };\n    const callPaymentModule = () => {\n        IMP.request_pay(paymentInput, function (rsp) {\n            console.log(rsp);\n            validationCheck(rsp.imp_uid, rsp.merchant_uid);\n        });\n    };\n\n    const renderTags = ({ item, index }) => {\n        return (\n            <>\n                <Button\n                    type=\"clear\"\n                    title={`${item}만원`}\n                    titleStyle={{ color: 'black', fontSize: 12 }}\n                    onPress={() => setPrice(item * 10000)}\n                    containerStyle={styles.priceTag}\n                />\n            </>\n        );\n    };\n    return (\n        <>\n            <Header\n                containerStyle={{ backgroundColor: '#ffffff', borderBottomWidth: 1 }}\n                rightComponent={\n                    <Button\n                        onPress={() => Linking.openURL('https//localhost:19006')}\n                        icon={<Icon type=\"font-awesome\" size={30} name=\"close\" color=\"black\" />}\n                        type=\"clear\"\n                    />\n                }\n                centerComponent={<Text style={{ fontSize: 20, fontWeight: '700', color: 'black' }}>포인트 충전</Text>}\n            />\n            <View\n                style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    backgroundColor: 'white',\n                    height: windowDimensions.height,\n                }}\n            >\n                <ScrollView\n                    showsVerticalScrollIndicator={false}\n                    style={{ backgroundColor: 'white', paddingHorizontal: 10 }}\n                >\n                    <Surface style={styles.container}>\n                        <View>\n                            <Button\n                                title=\"포인트 구매\"\n                                type=\"clear\"\n                                titleStyle={{ color: 'white', fontWeight: '800' }}\n                                buttonStyle={{ backgroundColor: '#2fb5b5' }}\n                                containerStyle={{ width: 200, alignSelf: 'center', marginBottom: 20 }}\n                            />\n                            <Text style={{ alignSelf: 'center' }}>일정의 금액을 구매하는 결제방식</Text>\n                        </View>\n                    </Surface>\n\n                    <Surface style={styles.container}>\n                        <View>\n                            <Text style={{ alignSelf: 'center' }}>구매하실 포인트를 선택해주세요</Text>\n                            <FlatList\n                                data={[10, 20, 30, 50, 100, 300]}\n                                renderItem={renderTags}\n                                horizontal={true}\n                                style={{ marginVertical: 15, alignSelf: 'center' }}\n                            />\n                            <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                                <Button\n                                    type=\"clear\"\n                                    title=\"다른금액\"\n                                    titleStyle={{\n                                        alignSelf: 'center',\n                                        textDecorationLine: 'underline',\n                                        color: showOtherPrice ? '#2fb5b5' : '#00000060',\n                                    }}\n                                    onPress={() => setShowOtherPrice(!showOtherPrice)}\n                                />\n                                <Icon name=\"check-circle\" color={showOtherPrice ? '#2fb5b5' : '#00000060'} />\n                            </View>\n                            {showOtherPrice && (\n                                <View style={styles.otherPriceContainer}>\n                                    <Text style={{ alignSelf: 'center', marginBottom: 15 }}>\n                                        구매하실 포인트를 입력해주세요\n                                    </Text>\n                                    <TextInput\n                                        selectionColor=\"#000000\"\n                                        placeholder=\"0\"\n                                        placeholderTextColor=\"#5B667625\"\n                                        style={[styles.inputFont, { color: price === 0 ? '#00000030' : '#2fb5b5' }]}\n                                        textAlign=\"center\"\n                                        onFocus={() => setPrice(0)}\n                                        clearTextOnFocus={true}\n                                        value={numberWithCommas(price)}\n                                        maxLength={10}\n                                        onChangeText={(text) => {\n                                            setPrice(Number(text.replaceAll(/,/gi, '')));\n                                        }}\n                                    />\n                                    <Divider style={{ height: 1 }} />\n                                </View>\n                            )}\n                        </View>\n                    </Surface>\n                    <Button\n                        title=\"결제\"\n                        disabled={price <= 0}\n                        titleStyle={{ color: 'white', fontWeight: '800' }}\n                        buttonStyle={{ width: 132, backgroundColor: '#2fb5b5', alignSelf: 'center' }}\n                        onPress={() => callPaymentModule()}\n                    />\n                </ScrollView>\n            </View>\n        </>\n    );\n};\n\nexport default PayPointHomeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 8,\n        width: 570,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 8,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    rowContainer: {\n        flexDirection: 'row',\n        marginVertical: 15,\n    },\n    priceTag: {\n        flexDirection: 'row',\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: '#00000010',\n        borderWidth: 0.5,\n    },\n    otherPriceContainer: {\n        width: 190,\n        height: 90,\n        borderBottomColor: '#00000030',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    inputFont: {\n        fontWeight: '400',\n        lineHeight: 36,\n        letterSpacing: -0.3,\n        fontSize: 34,\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PayPointHomeScreen from '../screens/payment/point';\n\nconst paymentStack = createStackNavigator();\n\nexport const PaymentStackScreens: React.FC = () => (\n    <paymentStack.Navigator headerMode=\"none\">\n        <paymentStack.Screen name=\"PayPointHomeScreen\" component={PayPointHomeScreen} />\n    </paymentStack.Navigator>\n);\n","export const returnDate = (date: Date) => {\n    let dateString = '';\n    const year = String(date.getFullYear());\n    const month = String(date.getMonth());\n    const day = String(date.getDate());\n\n    dateString = year + '년 ' + month + '월 ' + day + '일';\n\n    return dateString;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Platform, ScrollView, StyleSheet, Text, TextInput, useWindowDimensions, View } from 'react-native';\nimport { SubscriptionData } from '../../../components/types';\nimport { Surface, Switch } from 'react-native-paper';\nimport { Button, Divider, Header, Icon } from 'react-native-elements';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\nimport { numberWithCommas } from '../../../utils/money';\n\nimport jQuery from 'jquery';\nimport {\n    useCheckValidationMutation,\n    useInitPaymentMutation,\n    useRoutinePaymentMutation,\n} from '../../../graphql/generated';\nimport { returnMerchantUid } from '../point/functions';\nwindow.$ = window.jQuery = jQuery;\n\n// var IMP = window.IMP;\n// IMP.init('imp10942072');\n\nconst PaySubscribe = ({ navigation, route }: SubscribeNavProps<'PaySubscribe'>) => {\n    const [subscribeData, setSubscribeData] = useState<SubscriptionData>();\n    const [numOfMember, setNumOfMember] = useState(0);\n    const [toggle, setToggle] = useState(false);\n    const [pricePerMember, setPricePerMember] = useState(0);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [startDate, setStartDate] = useState(new Date());\n    const [dueDate, setDueDate] = useState(new Date());\n    const [showDateInput, setShowDateInput] = useState(false);\n\n    const [routinePay] = useRoutinePaymentMutation();\n    const [checkValidation] = useCheckValidationMutation();\n    const [initPayment] = useInitPaymentMutation();\n    const windowDimensions = useWindowDimensions();\n\n    const paymentInput = {\n        pg: 'html5_inicis',\n        pay_method: 'card',\n        merchant_uid: 'hj' + `${new Date()}`, // 상품 고유번호 - userId+timestamp\n        name: 'yearly', //상품 이름\n        amount: String(totalPrice),\n        buyer_email: 'TestEmail@gmail.com',\n        buyer_name: 'hj',\n        buyer_tel: '010-4242-4242',\n        buyer_addr: '서울특별시 강남구 샘성동',\n    };\n\n    const validationCheck = (imp_uid: string, merchant_uid: string) => {\n        checkValidation({\n            variables: {\n                input: {\n                    imp_uid: imp_uid,\n                    merchant_uid: merchant_uid,\n                },\n            },\n        }).then((result) => console.log(result));\n    };\n    const callPaymentModule = (type: 'monthly' | 'yearly') => {\n        if (type === 'monthly') {\n            //Buyer의 UserName을 넣는다.\n            setShowDateInput(false)((paymentInput.customer_uid = 'hj')), (paymentInput.name = type);\n        }\n\n        initPayment({\n            variables: {\n                input: {\n                    user_name: 'hj',\n                },\n            },\n        });\n\n        if (Platform.OS !== 'web') {\n            /* 5. 리액트 네이티브 환경에 대응하기 */\n            const params = {\n                userCode: 'imp10942072', // 가맹점 식별코드\n                data: paymentInput, // 결제 데이터\n                type: 'payment', // 결제와 본인인증 구분을 위한 필드\n            };\n            const paramsToString = JSON.stringify(params);\n            window.ReactNativeWebView.postMessage(paramsToString);\n        }\n\n        // IMP.request_pay(paymentInput, function (rsp) {\n        //     console.log(rsp);\n        //     validationCheck(rsp.imp_uid, rsp.merchant_uid);\n        // });\n    };\n\n    useEffect(() => {\n        setStartDate(new Date());\n        let newDueDate = startDate;\n\n        if (toggle) {\n            setPricePerMember(6000 * 0.9);\n            newDueDate.setFullYear(startDate.getFullYear() + 1);\n            setDueDate(newDueDate);\n        } else {\n            setPricePerMember(6000);\n            newDueDate.setMonth(startDate.getMonth() + 1);\n            setDueDate(newDueDate);\n        }\n    }, [toggle]);\n\n    const calcTotalPrice = () => {\n        let price = numOfMember * pricePerMember;\n        //Yearly Plan\n        if (toggle) {\n            return price * 12;\n            //Monthly Plan\n        } else {\n            return price;\n        }\n    };\n    useEffect(() => {\n        setTotalPrice(calcTotalPrice());\n    }, [numOfMember, pricePerMember]);\n\n    return (\n        <>\n            <Header\n                containerStyle={{ borderBottomWidth: 1, backgroundColor: '#ffffff' }}\n                rightComponent={\n                    <Button\n                        onPress={() => navigation.goBack()}\n                        icon={<Icon size={30} name=\"close\" color=\"black\" />}\n                        type=\"clear\"\n                    />\n                }\n                centerComponent={<Text style={{ fontSize: 20, fontWeight: '700', color: 'black' }}>구독</Text>}\n            />\n            <View\n                style={{\n                    marginBottom: 20,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flex: 1,\n                    backgroundColor: '#ffffff',\n                    width: windowDimensions.width,\n                }}\n            >\n                <ScrollView\n                    showsVerticalScrollIndicator={false}\n                    style={{\n                        paddingHorizontal: 10,\n                        width: windowDimensions.width,\n                    }}\n                >\n                    <Surface style={styles.bigSurface}>\n                        <Text style={{ alignSelf: 'center', marginBottom: 30 }}>몇명의 인원이 사용하나요?</Text>\n                        <TextInput\n                            selectionColor=\"#000000\"\n                            placeholder=\"0\"\n                            placeholderTextColor=\"#5B667625\"\n                            style={[styles.inputFont, { color: numOfMember ? '#2fb5b5' : '#5B667625' }]}\n                            keyboardType=\"number-pad\"\n                            textAlign=\"center\"\n                            clearTextOnFocus={true}\n                            onFocus={() => setNumOfMember(0)}\n                            value={numberWithCommas(numOfMember)}\n                            maxLength={10}\n                            onChangeText={(text) => {\n                                setNumOfMember(Number(text.replaceAll(/,/gi, '')));\n                            }}\n                        />\n                        <Divider style={{ height: 1, width: 189, marginTop: 20, alignSelf: 'center' }} />\n                    </Surface>\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>결제주기를 선택해주세요</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(pricePerMember)}원</Text>\n                            <Text style={styles.subtitle}>멤버당 한달요금</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row' }}>\n                            <Text style={{ color: toggle ? '#ADB2BA' : 'black' }}>매달</Text>\n                            <Switch\n                                value={toggle}\n                                onValueChange={setToggle}\n                                color=\"#2fb5b5\"\n                                trackColor=\"#2fb5b580\"\n                                thumbColor=\"#2fb5b5\"\n                                style={{ marginHorizontal: 10 }}\n                            />\n                            <Text style={{ color: toggle ? 'black' : '#ADB2BA' }}>매년</Text>\n                        </View>\n                    </Surface>\n\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>총 결제하실 금액(부가세 포함)</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(totalPrice)}원</Text>\n                            <Text style={styles.subtitle}>{`${returnDate(startDate)} ~ ${returnDate(dueDate)}`}</Text>\n                        </View>\n                    </Surface>\n\n                    <View style={{ flexDirection: 'row', alignSelf: 'center' }}>\n                        <Surface style={[styles.surface, { marginRight: 20 }]}>\n                            <Button\n                                title=\"수동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#ADB2BA',\n                                    width: 130,\n                                }}\n                                onPress={() => {\n                                    callPaymentModule('yearly');\n                                }}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text>매월 청구된 금액을 수동으로 직접 결제</Text>\n                        </Surface>\n                        <Surface style={styles.surface}>\n                            <Button\n                                title=\"자동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#2fb5b5',\n                                    width: 130,\n                                }}\n                                onPress={() => {\n                                    callPaymentModule('monthly');\n                                }}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text style={{ textAlign: 'center' }}>매월 청구된 금액을 지정된 결제방식으로 자동결제</Text>\n                        </Surface>\n\n                        {showDateInput && (\n                            <Surface style={styles.bigSurface}>\n                                <View style={styles.otherPriceContainer}>\n                                    <Text style={{ marginBottom: 30, textAlign: 'center' }}>{`자동결제일\\n${\n                                        toggle ? '매년' : '매월'\n                                    }`}</Text>\n                                    <Text style={styles.inputFont}>1일</Text>\n                                    <Text style={styles.subtitle}>{`${returnDate(startDate)} ~ ${returnDate(\n                                        dueDate,\n                                    )}`}</Text>\n                                </View>\n                            </Surface>\n                        )}\n                    </View>\n                </ScrollView>\n            </View>\n        </>\n    );\n};\n\nexport default PaySubscribe;\n\nconst styles = StyleSheet.create({\n    surface: {\n        padding: 8,\n        width: 280,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 8,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    bigSurface: {\n        padding: 8,\n        width: 570,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        // shadowColor: '#000',\n        // shadowRadius: 4,\n        // shadowOpacity: 0.3,\n        // textShadowOffset: { width: 2, height: 4 },\n        elevation: 8,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    otherPriceContainer: {\n        width: 300,\n        height: 130,\n        borderBottomColor: '#00000030',\n    },\n    inputFont: {\n        fontWeight: '400',\n        lineHeight: 36,\n        letterSpacing: -0.3,\n        fontSize: 34,\n        color: '#2fb5b5',\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n    subtitle: {\n        fontSize: 16,\n        color: '#ADB2BA',\n        lineHeight: 24,\n        letterSpacing: 0.2,\n        alignSelf: 'center',\n    },\n    buttonTitleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 16,\n        letterSpacing: 0.5,\n        color: 'white',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { StyleSheet, View, Text, FlatList } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Surface } from 'react-native-paper';\nimport { ListProps } from '../../../components/types';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\ninterface ContainerInputs {\n    title: string;\n    description: string;\n    buttonTitle?: string;\n    buttonPressed?: () => void;\n}\n\nconst SubscribePlanHome = ({ navigation, route }: SubscribeNavProps<'SubscribePlanHome'>) => {\n    const renderLog = ({ item, index }: { item: ListProps; index: number }) => {\n        return (\n            <View style={styles.rowContainer}>\n                <Text style={{ textAlign: 'left', width: 250 }}>{returnDate(item.date)}</Text>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                    <Text style={{ textAlign: 'left' }}>{item.description}</Text>\n                    <Text style={{ textAlign: 'right' }}>{item.price}</Text>\n                </View>\n            </View>\n        );\n    };\n\n    const container = (input: ContainerInputs) => {\n        return (\n            <View style={{ marginHorizontal: 15, marginVertical: 10 }}>\n                <Text style={styles.titleFont}>{input.title}</Text>\n                <View style={styles.smallContainer}>\n                    <Text>{input.description}</Text>\n                    {input.buttonTitle && (\n                        <Button\n                            buttonStyle={styles.ButtonTag}\n                            type=\"clear\"\n                            title={input.buttonTitle}\n                            onPress={input.buttonPressed}\n                            titleStyle={styles.buttonFont}\n                        />\n                    )}\n                </View>\n            </View>\n        );\n    };\n\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', flex: 1 }}>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                <Surface style={styles.container}>\n                    {container({\n                        title: '사용중인 요금제',\n                        description: '프리미엄 요금제',\n                        buttonTitle: '구독취소',\n                        buttonPressed: () => {},\n                    })}\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                        {container({ title: '상태', description: '활성' })}\n                        {container({\n                            title: '라이선스',\n                            description: '17개',\n                            buttonTitle: '변경',\n                            buttonPressed: () => {\n                                navigation.navigate('PaySubscribe');\n                            },\n                        })}\n                        {container({ title: '결제방법', description: '자동결제' })}\n                        {container({ title: '예상 월간 청구액', description: '102,000원' })}\n                    </View>\n                </Surface>\n\n                <View style={{ flexDirection: 'row', padding: 10, justifyContent: 'space-between', marginBottom: 30 }}>\n                    <Text style={{ fontWeight: '500', fontSize: 24, lineHeight: 24 }}>거래 내역</Text>\n                    <Button\n                        style={[styles.Tag, { borderWidth: 0, backgroundColor: '#5B667610' }]}\n                        icon={<Icon name=\"tune\" color=\"#00000060\" />}\n                        title=\"필터\"\n                        type=\"clear\"\n                        titleStyle={{\n                            fontWeight: '700',\n                            fontSize: 14,\n                            lineHeight: 16,\n                            letterSpacing: 0.5,\n                            color: '#00000060',\n                        }}\n                    />\n                </View>\n\n                <FlatList\n                    data={dummy}\n                    renderItem={renderLog}\n                    contentContainerStyle={{ width: 779, borderColor: '#00000030', borderWidth: 0.5 }}\n                    ListHeaderComponent={\n                        <>\n                            <View style={[styles.rowContainer, { backgroundColor: '#5B6676' }]}>\n                                <Text style={{ color: 'white', textAlign: 'left' }}>\n                                    {returnDate(new Date(2020, 1, 3))} ~ {returnDate(new Date(2121, 2, 5))}\n                                </Text>\n                                <View style={{ flexDirection: 'row' }}>\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"저장\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"프린트\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                </View>\n                            </View>\n                            <View style={styles.row2}>\n                                <Text style={{ textAlign: 'right' }}>미결제 잔액 : 37,284원</Text>\n                            </View>\n                            <View style={styles.rowContainer}>\n                                <Text style={{ textAlign: 'left', width: 250 }}>날짜</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                                    <Text style={{ textAlign: 'left' }}>설명</Text>\n                                    <Text style={{ textAlign: 'right' }}>금액</Text>\n                                </View>\n                            </View>\n                        </>\n                    }\n                />\n            </ScrollView>\n        </View>\n    );\n};\n\nexport default SubscribePlanHome;\n\nconst dummy: ListProps[] = [\n    {\n        date: new Date(2020, 1, 31),\n        description: '자동결제',\n        price: 50000,\n    },\n    {\n        date: new Date(1990, 12, 31),\n        description: '수동결제 Vis** **** ****',\n        price: 150000,\n    },\n    {\n        date: new Date(2002, 6, 29),\n        description: '정기결제 CustomerID: HJ',\n        price: 23300,\n    },\n    {\n        date: new Date(2030, 11, 21),\n        description: '수동결제 Vis** **** ****',\n        price: 3000,\n    },\n    {\n        date: new Date(2021, 2, 28),\n        description: '수동결제 Vis** **** ****',\n        price: 15500,\n    },\n];\n\nconst styles = StyleSheet.create({\n    rowContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    smallContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    row2: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    container: {\n        width: 550,\n        paddingHorizontal: 50,\n        paddingVertical: 30,\n        marginVertical: 30,\n        alignSelf: 'center',\n    },\n    Tag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: 'white',\n        borderWidth: 0.1,\n        height: 25,\n        justifyContent: 'center',\n    },\n    TagFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    ButtonTag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: '#979797',\n        height: 25,\n        borderWidth: 0.1,\n    },\n    titleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PaySubscribe from '../screens/payment/subscribe/PaySubscribe';\nimport SubscribePlanHome from '../screens/payment/subscribe';\n\nconst SubscribeStack = createStackNavigator();\n\nexport const SubscribeStackScreens: React.FC = () => (\n    <SubscribeStack.Navigator headerMode=\"none\">\n        <SubscribeStack.Screen name=\"SubscribePlanHome\" component={SubscribePlanHome} />\n        <SubscribeStack.Screen name=\"PaySubscribe\" component={PaySubscribe} />\n    </SubscribeStack.Navigator>\n);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PaymentStackScreens } from './PaymentStack';\nimport { SubscribeStackScreens } from './SubscribeStack';\n\nconst Routes: React.FC = () => {\n    const query = window.location.search.split('=')[1];\n\n    return (\n        <NavigationContainer>\n            {query === 'pay' ? <PaymentStackScreens /> : <SubscribeStackScreens />}\n        </NavigationContainer>\n    );\n};\n\nexport default Routes;\n","import { ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport apolloClient from './src/graphql/client';\nimport Routes from './src/navigation/Routes';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n    console.log('Host Start', window.location.hostname, ':', window.location.origin);\n\n    return (\n        <ApolloProvider client={apolloClient}>\n            <SafeAreaProvider>\n                <Routes />\n            </SafeAreaProvider>\n        </ApolloProvider>\n    );\n}\n"],"sourceRoot":""}