{"version":3,"sources":["client.ts","src/utils/money.ts","src/screens/payment/point/index.tsx","src/navigation/PaymentStack.tsx","src/utils/datetime.ts","src/screens/payment/subscribe/PaySubscribe.tsx","src/screens/payment/subscribe/index.tsx","src/navigation/SubscribeStack.tsx","src/navigation/Routes.tsx","App.tsx"],"names":["httpLink","HttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","numberWithCommas","number","toString","replace","PayPointHomeScreen","useState","price","setPrice","showOtherPrice","setShowOtherPrice","View","style","justifyContent","alignItems","Surface","styles","container","title","type","titleStyle","color","fontWeight","buttonStyle","backgroundColor","containerStyle","width","alignSelf","marginBottom","Text","FlatList","data","renderItem","item","index","fontSize","onPress","priceTag","horizontal","marginVertical","flexDirection","textDecorationLine","name","otherPriceContainer","TextInput","selectionColor","placeholder","placeholderTextColor","inputFont","textAlign","onFocus","clearTextOnFocus","value","maxLength","onChangeText","text","Number","replaceAll","height","StyleSheet","create","paddingHorizontal","paddingVertical","rowContainer","marginHorizontal","borderRadius","borderColor","borderWidth","borderBottomColor","lineHeight","letterSpacing","paymentStack","createStackNavigator","PaymentStackScreens","Navigator","headerMode","Screen","component","returnDate","date","String","getFullYear","getMonth","getDate","PaySubscribe","navigation","route","numOfMember","setNumOfMember","toggle","setToggle","pricePerMember","setPricePerMember","totalPrice","setTotalPrice","Date","startDate","setStartDate","dueDate","setDueDate","useEffect","newDueDate","setFullYear","setMonth","calcTotalPrice","borderBottomWidth","leftComponent","goBack","icon","size","centerComponent","flex","ScrollView","showsVerticalScrollIndicator","bigSurface","keyboardType","marginTop","subtitle","Switch","onValueChange","trackColor","thumbColor","surface","buttonTitleFont","padding","elevation","buttonFont","SubscribePlanHome","input","titleFont","smallContainer","description","buttonTitle","ButtonTag","buttonPressed","navigate","Tag","dummy","contentContainerStyle","ListHeaderComponent","row2","TagFont","SubscribeStack","SubscribeStackScreens","Routes","query","window","location","search","split","NavigationContainer","App","console","log","hostname","origin","apolloClient"],"mappings":"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","file":"static/js/app.698dc884.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client'\n \n \nconst httpLink = new HttpLink({\n    uri: `http://localhost:1337/graphql`,\n});\n \nexport const client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n});\n \nexport default client;","export const numberWithCommas = (number: number) => {\n    if (number === 0) return '0';\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React, { useState } from 'react';\nimport { StyleSheet, View, Text, FlatList, TextInput } from 'react-native';\nimport { Button, Divider, Icon } from 'react-native-elements';\nimport { Surface } from 'react-native-paper';\nimport { numberWithCommas } from '../../../utils/money';\n\nconst PayPointHomeScreen = () => {\n    const [price, setPrice] = useState(0);\n    const [showOtherPrice, setShowOtherPrice] = useState(false);\n    const renderTags = ({ item, index }: { item: number; index: number }) => {\n        return (\n            <>\n                <Button\n                    type=\"clear\"\n                    title={`${item}만원`}\n                    titleStyle={{ color: 'black', fontSize: 12 }}\n                    onPress={() => setPrice(item * 10000)}\n                    containerStyle={styles.priceTag}\n                />\n            </>\n        );\n    };\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n            <Surface style={styles.container}>\n                <View>\n                    <Button\n                        title=\"포인트 구매\"\n                        type=\"clear\"\n                        titleStyle={{ color: 'white', fontWeight: '800' }}\n                        buttonStyle={{ backgroundColor: '#FB8C00' }}\n                        containerStyle={{ width: 200, alignSelf: 'center', marginBottom: 20 }}\n                    />\n                    <Text style={{ alignSelf: 'center' }}>일정의 금액을 구매하는 결제방식</Text>\n                </View>\n            </Surface>\n\n            <Surface style={styles.container}>\n                <View>\n                    <Text style={{ alignSelf: 'center' }}>구매하실 포인트를 선택해주세요</Text>\n                    <FlatList\n                        data={[10, 20, 30, 50, 100, 300]}\n                        renderItem={renderTags}\n                        horizontal={true}\n                        style={{ marginVertical: 15, alignSelf: 'center' }}\n                    />\n                    <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                        <Button\n                            type=\"clear\"\n                            title=\"다른금액\"\n                            titleStyle={{\n                                alignSelf: 'center',\n                                textDecorationLine: 'underline',\n                                color: showOtherPrice ? '#FB8C00' : '#00000060',\n                            }}\n                            onPress={() => setShowOtherPrice(!showOtherPrice)}\n                        />\n                        <Icon name=\"check-circle\" color={showOtherPrice ? '#FB8C00' : '#00000060'} />\n                    </View>\n                    {showOtherPrice && (\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ alignSelf: 'center', marginBottom: 15 }}>\n                                구매하실 포인트를 입력해주세요\n                            </Text>\n                            <TextInput\n                                selectionColor=\"#000000\"\n                                placeholder=\"0\"\n                                placeholderTextColor=\"#5B667625\"\n                                style={[styles.inputFont, { color: price === 0 ? '#00000030' : '#FB8C00' }]}\n                                textAlign=\"center\"\n                                onFocus={() => setPrice(0)}\n                                clearTextOnFocus={true}\n                                value={numberWithCommas(price)}\n                                maxLength={10}\n                                onChangeText={(text) => {\n                                    setPrice(Number(text.replaceAll(/,/gi, '')));\n                                }}\n                            />\n                            <Divider style={{ height: 1 }} />\n                        </View>\n                    )}\n                </View>\n            </Surface>\n            <Button\n                title=\"결제\"\n                titleStyle={{ color: 'white', fontWeight: '800' }}\n                buttonStyle={{ width: 132, backgroundColor: '#FB8C00' }}\n            />\n        </View>\n    );\n};\n\nexport default PayPointHomeScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 550,\n        paddingHorizontal: 50,\n        paddingVertical: 62,\n        marginVertical: 20,\n    },\n    rowContainer: {\n        flexDirection: 'row',\n        marginVertical: 15,\n    },\n    priceTag: {\n        flexDirection: 'row',\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: '#00000010',\n        borderWidth: 0.5,\n    },\n    otherPriceContainer: {\n        width: 190,\n        height: 90,\n        borderBottomColor: '#00000030',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    inputFont: {\n        fontWeight: '400',\n        lineHeight: 36,\n        letterSpacing: -0.3,\n        fontSize: 34,\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n});\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PayPointHomeScreen from '../screens/payment/point';\n\nconst paymentStack = createStackNavigator();\n\nexport const PaymentStackScreens: React.FC = () => (\n    <paymentStack.Navigator headerMode=\"none\">\n        <paymentStack.Screen name=\"PayPointHomeScreen\" component={PayPointHomeScreen} />\n    </paymentStack.Navigator>\n);\n","export const returnDate = (date: Date) => {\n    let dateString = '';\n    const year = String(date.getFullYear());\n    const month = String(date.getMonth());\n    const day = String(date.getDate());\n\n    dateString = year + '년 ' + month + '월 ' + day + '일';\n\n    return dateString;\n};\n","import React, { useEffect, useState } from 'react';\nimport { ScrollView, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { SubscriptionData } from '../../../components/types';\nimport { Surface, Switch } from 'react-native-paper';\nimport { Button, Divider, Header, Icon } from 'react-native-elements';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\nimport { numberWithCommas } from '../../../utils/money';\n\nconst PaySubscribe = ({ navigation, route }: SubscribeNavProps<'PaySubscribe'>) => {\n    const [subscribeData, setSubscribeData] = useState<SubscriptionData>();\n    const [numOfMember, setNumOfMember] = useState(0);\n    const [toggle, setToggle] = useState(false);\n    const [pricePerMember, setPricePerMember] = useState(0);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [startDate, setStartDate] = useState(new Date());\n    const [dueDate, setDueDate] = useState(new Date());\n\n    useEffect(() => {\n        setStartDate(new Date());\n        let newDueDate = startDate;\n\n        if (toggle) {\n            setPricePerMember(6000 * 0.9);\n            newDueDate.setFullYear(startDate.getFullYear() + 1);\n            setDueDate(newDueDate);\n        } else {\n            setPricePerMember(6000);\n            newDueDate.setMonth(startDate.getMonth() + 1);\n            setDueDate(newDueDate);\n        }\n    }, [toggle]);\n\n    const calcTotalPrice = () => {\n        let price = numOfMember * pricePerMember;\n        //Yearly Plan\n        if (toggle) {\n            return price * 12;\n            //Monthly Plan\n        } else {\n            return price;\n        }\n    };\n    useEffect(() => {\n        setTotalPrice(calcTotalPrice());\n    }, [numOfMember, pricePerMember]);\n\n    return (\n        <>\n            <Header\n                containerStyle={{ backgroundColor: '#FB8C00', borderBottomWidth: 1 }}\n                leftComponent={\n                    <Button\n                        onPress={() => navigation.goBack()}\n                        icon={<Icon type=\"font-awesome\" size={30} name=\"angle-left\" color=\"white\" />}\n                        type=\"clear\"\n                    />\n                }\n                centerComponent={<Text style={{ fontSize: 20, fontWeight: '700', color: 'white' }}>결제 페이지</Text>}\n            />\n            <View style={{ marginBottom: 20, justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n                <ScrollView showsVerticalScrollIndicator={false}>\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ alignSelf: 'center', marginBottom: 30 }}>몇명의 인원이 사용하나요?</Text>\n                            <TextInput\n                                selectionColor=\"#000000\"\n                                placeholder=\"0\"\n                                placeholderTextColor=\"#5B667625\"\n                                style={[styles.inputFont]}\n                                keyboardType=\"number-pad\"\n                                textAlign=\"center\"\n                                clearTextOnFocus={true}\n                                onFocus={() => setNumOfMember(0)}\n                                value={numberWithCommas(numOfMember)}\n                                maxLength={10}\n                                onChangeText={(text) => {\n                                    setNumOfMember(Number(text.replaceAll(/,/gi, '')));\n                                }}\n                            />\n                            <Divider style={{ height: 1, width: 189, marginTop: 20, alignSelf: 'center' }} />\n                        </View>\n                    </Surface>\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>결제주기를 선택해주세요</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(pricePerMember)}원</Text>\n                            <Text style={styles.subtitle}>멤버당 한달요금</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row' }}>\n                            <Text style={{ color: toggle ? '#ADB2BA' : 'black' }}>매달</Text>\n                            <Switch\n                                value={toggle}\n                                onValueChange={setToggle}\n                                color=\"#FB8C00\"\n                                trackColor=\"#FB8C0080\"\n                                thumbColor=\"#FB8C00\"\n                                style={{ marginHorizontal: 10 }}\n                            />\n                            <Text style={{ color: toggle ? 'black' : '#ADB2BA' }}>매년</Text>\n                        </View>\n                    </Surface>\n\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>총 결제하실 금액(부가세 포함)</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(totalPrice)}원</Text>\n                            <Text style={styles.subtitle}>{`${returnDate(startDate)} ~ ${returnDate(dueDate)}`}</Text>\n                        </View>\n                    </Surface>\n\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                        <Surface style={styles.surface}>\n                            <Button\n                                title=\"수동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#ADB2BA',\n                                    width: 130,\n                                }}\n                                onPress={() => {}}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text>매월 청구된 금액을 수동으로 직접 결제</Text>\n                        </Surface>\n                        <Surface style={styles.surface}>\n                            <Button\n                                title=\"자동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#FB8C00',\n                                    width: 130,\n                                }}\n                                onPress={() => {}}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text style={{ textAlign: 'center' }}>매월 청구된 금액을 지정된 결제방식으로 자동결제</Text>\n                        </Surface>\n                    </View>\n                </ScrollView>\n            </View>\n        </>\n    );\n};\n\nexport default PaySubscribe;\n\nconst styles = StyleSheet.create({\n    surface: {\n        padding: 8,\n        width: 280,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 4,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    bigSurface: {\n        padding: 8,\n        width: 600,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 4,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    otherPriceContainer: {\n        width: 300,\n        height: 130,\n        borderBottomColor: '#00000030',\n    },\n    inputFont: {\n        fontWeight: '400',\n        lineHeight: 36,\n        letterSpacing: -0.3,\n        fontSize: 34,\n        color: '#FB8C00',\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n    subtitle: {\n        fontSize: 16,\n        color: '#ADB2BA',\n        lineHeight: 24,\n        letterSpacing: 0.2,\n        alignSelf: 'center',\n    },\n    buttonTitleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 16,\n        letterSpacing: 0.5,\n        color: 'white',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { StyleSheet, View, Text, FlatList } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Surface } from 'react-native-paper';\nimport { ListProps } from '../../../components/types';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\ninterface ContainerInputs {\n    title: string;\n    description: string;\n    buttonTitle?: string;\n    buttonPressed?: () => void;\n}\n\nconst SubscribePlanHome = ({ navigation, route }: SubscribeNavProps<'SubscribePlanHome'>) => {\n    const renderLog = ({ item, index }: { item: ListProps; index: number }) => {\n        return (\n            <View style={styles.rowContainer}>\n                <Text style={{ textAlign: 'left', width: 250 }}>{returnDate(item.date)}</Text>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                    <Text style={{ textAlign: 'left' }}>{item.description}</Text>\n                    <Text style={{ textAlign: 'right' }}>{item.price}</Text>\n                </View>\n            </View>\n        );\n    };\n\n    const container = (input: ContainerInputs) => {\n        return (\n            <View style={{ marginHorizontal: 15, marginVertical: 10 }}>\n                <Text style={styles.titleFont}>{input.title}</Text>\n                <View style={styles.smallContainer}>\n                    <Text>{input.description}</Text>\n                    {input.buttonTitle && (\n                        <Button\n                            buttonStyle={styles.ButtonTag}\n                            type=\"clear\"\n                            title={input.buttonTitle}\n                            onPress={input.buttonPressed}\n                            titleStyle={styles.buttonFont}\n                        />\n                    )}\n                </View>\n            </View>\n        );\n    };\n\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', flex: 1 }}>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                <Surface style={styles.container}>\n                    {container({\n                        title: '사용중인 요금제',\n                        description: '프리미엄 요금제',\n                        buttonTitle: '구독취소',\n                        buttonPressed: () => {},\n                    })}\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                        {container({ title: '상태', description: '활성' })}\n                        {container({\n                            title: '라이선스',\n                            description: '17개',\n                            buttonTitle: '변경',\n                            buttonPressed: () => {\n                                navigation.navigate('PaySubscribe');\n                            },\n                        })}\n                        {container({ title: '결제방법', description: '자동결제' })}\n                        {container({ title: '예상 월간 청구액', description: '102,000원' })}\n                    </View>\n                </Surface>\n\n                <View style={{ flexDirection: 'row', padding: 10, justifyContent: 'space-between', marginBottom: 30 }}>\n                    <Text style={{ fontWeight: '500', fontSize: 24, lineHeight: 24 }}>거래 내역</Text>\n                    <Button\n                        style={[styles.Tag, { borderWidth: 0, backgroundColor: '#5B667610' }]}\n                        icon={<Icon name=\"tune\" color=\"#00000060\" />}\n                        title=\"필터\"\n                        type=\"clear\"\n                        titleStyle={{\n                            fontWeight: '700',\n                            fontSize: 14,\n                            lineHeight: 16,\n                            letterSpacing: 0.5,\n                            color: '#00000060',\n                        }}\n                    />\n                </View>\n\n                <FlatList\n                    data={dummy}\n                    renderItem={renderLog}\n                    contentContainerStyle={{ width: 779, borderColor: '#00000030', borderWidth: 0.5 }}\n                    ListHeaderComponent={\n                        <>\n                            <View style={[styles.rowContainer, { backgroundColor: '#5B6676' }]}>\n                                <Text style={{ color: 'white', textAlign: 'left' }}>\n                                    {returnDate(new Date(2020, 1, 3))} ~ {returnDate(new Date(2121, 2, 5))}\n                                </Text>\n                                <View style={{ flexDirection: 'row' }}>\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"저장\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"프린트\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                </View>\n                            </View>\n                            <View style={styles.row2}>\n                                <Text style={{ textAlign: 'right' }}>미결제 잔액 : 37,284원</Text>\n                            </View>\n                            <View style={styles.rowContainer}>\n                                <Text style={{ textAlign: 'left', width: 250 }}>날짜</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                                    <Text style={{ textAlign: 'left' }}>설명</Text>\n                                    <Text style={{ textAlign: 'right' }}>금액</Text>\n                                </View>\n                            </View>\n                        </>\n                    }\n                />\n            </ScrollView>\n        </View>\n    );\n};\n\nexport default SubscribePlanHome;\n\nconst dummy: ListProps[] = [\n    {\n        date: new Date(2020, 1, 31),\n        description: '자동결제',\n        price: 50000,\n    },\n    {\n        date: new Date(1990, 12, 31),\n        description: '수동결제 Vis** **** ****',\n        price: 150000,\n    },\n    {\n        date: new Date(2002, 6, 29),\n        description: '정기결제 CustomerID: HJ',\n        price: 23300,\n    },\n    {\n        date: new Date(2030, 11, 21),\n        description: '수동결제 Vis** **** ****',\n        price: 3000,\n    },\n    {\n        date: new Date(2021, 2, 28),\n        description: '수동결제 Vis** **** ****',\n        price: 15500,\n    },\n];\n\nconst styles = StyleSheet.create({\n    rowContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    smallContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    row2: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    container: {\n        width: 550,\n        paddingHorizontal: 50,\n        paddingVertical: 30,\n        marginVertical: 30,\n        alignSelf: 'center',\n    },\n    Tag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: 'white',\n        borderWidth: 0.1,\n        height: 25,\n        justifyContent: 'center',\n    },\n    TagFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    ButtonTag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: '#979797',\n        height: 25,\n        borderWidth: 0.1,\n    },\n    titleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PaySubscribe from '../screens/payment/subscribe/PaySubscribe';\nimport SubscribePlanHome from '../screens/payment/subscribe';\n\nconst SubscribeStack = createStackNavigator();\n\nexport const SubscribeStackScreens: React.FC = () => (\n    <SubscribeStack.Navigator headerMode=\"none\">\n        <SubscribeStack.Screen name=\"SubscribePlanHome\" component={SubscribePlanHome} />\n        <SubscribeStack.Screen name=\"PaySubscribe\" component={PaySubscribe} />\n    </SubscribeStack.Navigator>\n);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PaymentStackScreens } from './PaymentStack';\nimport { SubscribeStackScreens } from './SubscribeStack';\n\nconst Routes: React.FC = () => {\n    const query = window.location.search.split('=')[1];\n\n    return (\n        <NavigationContainer>\n            {query === 'TestString' ? <PaymentStackScreens /> : <SubscribeStackScreens />}\n        </NavigationContainer>\n    );\n};\n\nexport default Routes;\n","import { ApolloProvider } from '@apollo/client';\nimport React from 'react';\nimport apolloClient from './client';\nimport Routes from './src/navigation/Routes';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n    console.log('Host Start', window.location.hostname, ':', window.location.origin);\n\n    return (\n        <ApolloProvider client={apolloClient}>\n            <SafeAreaProvider>\n                <Routes />\n            </SafeAreaProvider>\n        </ApolloProvider>\n    );\n}\n"],"sourceRoot":""}