{"version":3,"sources":["client.ts","src/utils/datetime.ts","src/utils/money.ts","src/screens/payment/subscribe/PaySubscribe.tsx","src/screens/payment/subscribe/index.tsx","src/navigation/SubscribeStack.tsx","src/navigation/Routes.tsx","App.tsx"],"names":["httpLink","HttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","returnDate","date","String","getFullYear","getMonth","getDate","numberWithCommas","number","toString","replace","PaySubscribe","navigation","route","useState","numOfMember","setNumOfMember","toggle","setToggle","pricePerMember","setPricePerMember","totalPrice","setTotalPrice","Date","startDate","setStartDate","dueDate","setDueDate","useEffect","newDueDate","setFullYear","setMonth","price","calcTotalPrice","containerStyle","backgroundColor","borderBottomWidth","leftComponent","onPress","goBack","icon","type","size","name","color","centerComponent","Text","style","fontSize","fontWeight","View","marginBottom","justifyContent","alignItems","flex","ScrollView","showsVerticalScrollIndicator","Surface","styles","bigSurface","otherPriceContainer","alignSelf","TextInput","selectionColor","placeholder","placeholderTextColor","inputFont","keyboardType","textAlign","clearTextOnFocus","onFocus","value","maxLength","onChangeText","text","Number","height","width","marginTop","subtitle","flexDirection","Switch","onValueChange","trackColor","thumbColor","marginHorizontal","surface","title","titleStyle","buttonTitleFont","buttonStyle","StyleSheet","create","padding","elevation","borderRadius","marginVertical","borderBottomColor","lineHeight","letterSpacing","buttonFont","SubscribePlanHome","container","input","titleFont","smallContainer","description","buttonTitle","ButtonTag","buttonPressed","navigate","Tag","borderWidth","FlatList","data","dummy","renderItem","item","index","rowContainer","contentContainerStyle","borderColor","ListHeaderComponent","row2","paddingHorizontal","paddingVertical","TagFont","SubscribeStack","createStackNavigator","SubscribeStackScreens","Navigator","headerMode","Screen","component","Routes","NavigationContainer","App","apolloClient"],"mappings":"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","file":"static/js/app.5c185903.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client'\n \n \nconst httpLink = new HttpLink({\n    uri: `http://localhost:1337/graphql`,\n});\n \nexport const client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n});\n \nexport default client;","export const returnDate = (date: Date) => {\n    let dateString = '';\n    const year = String(date.getFullYear());\n    const month = String(date.getMonth());\n    const day = String(date.getDate());\n\n    dateString = year + '년 ' + month + '월 ' + day + '일';\n\n    return dateString;\n};\n","export const numberWithCommas = (number: number) => {\n    if (number === 0) return '0';\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React, { useEffect, useState } from 'react';\nimport { ScrollView, StyleSheet, Text, TextInput, View } from 'react-native';\nimport { SubscriptionData } from '../../../components/types';\nimport { Surface, Switch } from 'react-native-paper';\nimport { Button, Divider, Header, Icon } from 'react-native-elements';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\nimport { numberWithCommas } from '../../../utils/money';\n\nconst PaySubscribe = ({ navigation, route }: SubscribeNavProps<'PaySubscribe'>) => {\n    const [subscribeData, setSubscribeData] = useState<SubscriptionData>();\n    const [numOfMember, setNumOfMember] = useState(0);\n    const [toggle, setToggle] = useState(false);\n    const [pricePerMember, setPricePerMember] = useState(0);\n    const [totalPrice, setTotalPrice] = useState(0);\n    const [startDate, setStartDate] = useState(new Date());\n    const [dueDate, setDueDate] = useState(new Date());\n\n    useEffect(() => {\n        setStartDate(new Date());\n        let newDueDate = startDate;\n\n        if (toggle) {\n            setPricePerMember(6000 * 0.9);\n            newDueDate.setFullYear(startDate.getFullYear() + 1);\n            setDueDate(newDueDate);\n        } else {\n            setPricePerMember(6000);\n            newDueDate.setMonth(startDate.getMonth() + 1);\n            setDueDate(newDueDate);\n        }\n    }, [toggle]);\n\n    const calcTotalPrice = () => {\n        let price = numOfMember * pricePerMember;\n        //Yearly Plan\n        if (toggle) {\n            return price * 12;\n            //Monthly Plan\n        } else {\n            return price;\n        }\n    };\n    useEffect(() => {\n        setTotalPrice(calcTotalPrice());\n    }, [numOfMember, pricePerMember]);\n\n    return (\n        <>\n            <Header\n                containerStyle={{ backgroundColor: '#FB8C00', borderBottomWidth: 1 }}\n                leftComponent={\n                    <Button\n                        onPress={() => navigation.goBack()}\n                        icon={<Icon type=\"font-awesome\" size={30} name=\"angle-left\" color=\"white\" />}\n                        type=\"clear\"\n                    />\n                }\n                centerComponent={<Text style={{ fontSize: 20, fontWeight: '700', color: 'white' }}>결제 페이지</Text>}\n            />\n            <View style={{ marginBottom: 20, justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n                <ScrollView showsVerticalScrollIndicator={false}>\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ alignSelf: 'center', marginBottom: 30 }}>몇명의 인원이 사용하나요?</Text>\n                            <TextInput\n                                selectionColor=\"#000000\"\n                                placeholder=\"0\"\n                                placeholderTextColor=\"#5B667625\"\n                                style={[styles.inputFont]}\n                                keyboardType=\"number-pad\"\n                                textAlign=\"center\"\n                                clearTextOnFocus={true}\n                                onFocus={() => setNumOfMember(0)}\n                                value={numberWithCommas(numOfMember)}\n                                maxLength={10}\n                                onChangeText={(text) => {\n                                    setNumOfMember(Number(text));\n                                }}\n                            />\n                            <Divider style={{ height: 1, width: 189, marginTop: 20, alignSelf: 'center' }} />\n                        </View>\n                    </Surface>\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>결제주기를 선택해주세요</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(pricePerMember)}원</Text>\n                            <Text style={styles.subtitle}>멤버당 한달요금</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row' }}>\n                            <Text style={{ color: toggle ? '#ADB2BA' : 'black' }}>매달</Text>\n                            <Switch\n                                value={toggle}\n                                onValueChange={setToggle}\n                                color=\"#FB8C00\"\n                                trackColor=\"#FB8C0080\"\n                                thumbColor=\"#FB8C00\"\n                                style={{ marginHorizontal: 10 }}\n                            />\n                            <Text style={{ color: toggle ? 'black' : '#ADB2BA' }}>매년</Text>\n                        </View>\n                    </Surface>\n\n                    <Surface style={styles.bigSurface}>\n                        <View style={styles.otherPriceContainer}>\n                            <Text style={{ marginBottom: 30, textAlign: 'center' }}>총 결제하실 금액(부가세 포함)</Text>\n                            <Text style={styles.inputFont}>{numberWithCommas(totalPrice)}원</Text>\n                            <Text style={styles.subtitle}>{`${returnDate(startDate)} ~ ${returnDate(dueDate)}`}</Text>\n                        </View>\n                    </Surface>\n\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                        <Surface style={styles.surface}>\n                            <Button\n                                title=\"수동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#ADB2BA',\n                                    width: 130,\n                                }}\n                                onPress={() => {}}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text>매월 청구된 금액을 수동으로 직접 결제</Text>\n                        </Surface>\n                        <Surface style={styles.surface}>\n                            <Button\n                                title=\"자동결제\"\n                                type=\"clear\"\n                                titleStyle={styles.buttonTitleFont}\n                                buttonStyle={{\n                                    backgroundColor: '#FB8C00',\n                                    width: 130,\n                                }}\n                                onPress={() => {}}\n                                containerStyle={{ marginBottom: 20 }}\n                            />\n                            <Text style={{ textAlign: 'center' }}>매월 청구된 금액을 지정된 결제방식으로 자동결제</Text>\n                        </Surface>\n                    </View>\n                </ScrollView>\n            </View>\n        </>\n    );\n};\n\nexport default PaySubscribe;\n\nconst styles = StyleSheet.create({\n    surface: {\n        padding: 8,\n        width: 280,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 4,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    bigSurface: {\n        padding: 8,\n        width: 600,\n        height: 226,\n        alignItems: 'center',\n        justifyContent: 'center',\n        elevation: 4,\n        borderRadius: 8,\n        marginVertical: 25,\n    },\n    otherPriceContainer: {\n        width: 300,\n        height: 130,\n        borderBottomColor: '#00000030',\n    },\n    inputFont: {\n        fontWeight: '400',\n        lineHeight: 36,\n        letterSpacing: -0.3,\n        fontSize: 34,\n        color: '#FB8C00',\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n    subtitle: {\n        fontSize: 16,\n        color: '#ADB2BA',\n        lineHeight: 24,\n        letterSpacing: 0.2,\n        alignSelf: 'center',\n    },\n    buttonTitleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 16,\n        letterSpacing: 0.5,\n        color: 'white',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { StyleSheet, View, Text, FlatList } from 'react-native';\nimport { Button, Icon } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Surface } from 'react-native-paper';\nimport { ListProps } from '../../../components/types';\nimport { SubscribeNavProps } from '../../../navigation/types/SubscribeStackParams';\nimport { returnDate } from '../../../utils/datetime';\ninterface ContainerInputs {\n    title: string;\n    description: string;\n    buttonTitle?: string;\n    buttonPressed?: () => void;\n}\n\nconst SubscribePlanHome = ({ navigation, route }: SubscribeNavProps<'SubscribePlanHome'>) => {\n    const renderLog = ({ item, index }: { item: ListProps; index: number }) => {\n        return (\n            <View style={styles.rowContainer}>\n                <Text style={{ textAlign: 'left', width: 250 }}>{returnDate(item.date)}</Text>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                    <Text style={{ textAlign: 'left' }}>{item.description}</Text>\n                    <Text style={{ textAlign: 'right' }}>{item.price}</Text>\n                </View>\n            </View>\n        );\n    };\n\n    const container = (input: ContainerInputs) => {\n        return (\n            <View style={{ marginHorizontal: 15, marginVertical: 10 }}>\n                <Text style={styles.titleFont}>{input.title}</Text>\n                <View style={styles.smallContainer}>\n                    <Text>{input.description}</Text>\n                    {input.buttonTitle && (\n                        <Button\n                            buttonStyle={styles.ButtonTag}\n                            type=\"clear\"\n                            title={input.buttonTitle}\n                            onPress={input.buttonPressed}\n                            titleStyle={styles.buttonFont}\n                        />\n                    )}\n                </View>\n            </View>\n        );\n    };\n\n    return (\n        <View style={{ justifyContent: 'center', alignItems: 'center', backgroundColor: 'white', flex: 1 }}>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                <Surface style={styles.container}>\n                    {container({\n                        title: '사용중인 요금제',\n                        description: '프리미엄 요금제',\n                        buttonTitle: '구독취소',\n                        buttonPressed: () => {},\n                    })}\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n                        {container({ title: '상태', description: '활성' })}\n                        {container({\n                            title: '라이선스',\n                            description: '17개',\n                            buttonTitle: '변경',\n                            buttonPressed: () => {\n                                navigation.navigate('PaySubscribe');\n                            },\n                        })}\n                        {container({ title: '결제방법', description: '자동결제' })}\n                        {container({ title: '예상 월간 청구액', description: '102,000원' })}\n                    </View>\n                </Surface>\n\n                <View style={{ flexDirection: 'row', padding: 10, justifyContent: 'space-between', marginBottom: 30 }}>\n                    <Text style={{ fontWeight: '500', fontSize: 24, lineHeight: 24 }}>거래 내역</Text>\n                    <Button\n                        style={[styles.Tag, { borderWidth: 0, backgroundColor: '#5B667610' }]}\n                        icon={<Icon name=\"tune\" color=\"#00000060\" />}\n                        title=\"필터\"\n                        type=\"clear\"\n                        titleStyle={{\n                            fontWeight: '700',\n                            fontSize: 14,\n                            lineHeight: 16,\n                            letterSpacing: 0.5,\n                            color: '#00000060',\n                        }}\n                    />\n                </View>\n\n                <FlatList\n                    data={dummy}\n                    renderItem={renderLog}\n                    contentContainerStyle={{ width: 779, borderColor: '#00000030', borderWidth: 0.5 }}\n                    ListHeaderComponent={\n                        <>\n                            <View style={[styles.rowContainer, { backgroundColor: '#5B6676' }]}>\n                                <Text style={{ color: 'white', textAlign: 'left' }}>\n                                    {returnDate(new Date(2020, 1, 3))} ~ {returnDate(new Date(2121, 2, 5))}\n                                </Text>\n                                <View style={{ flexDirection: 'row' }}>\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"저장\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                    <Button\n                                        containerStyle={styles.Tag}\n                                        onPress={() => {}}\n                                        title=\"프린트\"\n                                        type=\"clear\"\n                                        titleStyle={{ color: 'white', fontSize: 14 }}\n                                    />\n                                </View>\n                            </View>\n                            <View style={styles.row2}>\n                                <Text style={{ textAlign: 'right' }}>미결제 잔액 : 37,284원</Text>\n                            </View>\n                            <View style={styles.rowContainer}>\n                                <Text style={{ textAlign: 'left', width: 250 }}>날짜</Text>\n                                <View style={{ flexDirection: 'row', justifyContent: 'space-between', flex: 1 }}>\n                                    <Text style={{ textAlign: 'left' }}>설명</Text>\n                                    <Text style={{ textAlign: 'right' }}>금액</Text>\n                                </View>\n                            </View>\n                        </>\n                    }\n                />\n            </ScrollView>\n        </View>\n    );\n};\n\nexport default SubscribePlanHome;\n\nconst dummy: ListProps[] = [\n    {\n        date: new Date(2020, 1, 31),\n        description: '자동결제',\n        price: 50000,\n    },\n    {\n        date: new Date(1990, 12, 31),\n        description: '수동결제 Vis** **** ****',\n        price: 150000,\n    },\n    {\n        date: new Date(2002, 6, 29),\n        description: '정기결제 CustomerID: HJ',\n        price: 23300,\n    },\n    {\n        date: new Date(2030, 11, 21),\n        description: '수동결제 Vis** **** ****',\n        price: 3000,\n    },\n    {\n        date: new Date(2021, 2, 28),\n        description: '수동결제 Vis** **** ****',\n        price: 15500,\n    },\n];\n\nconst styles = StyleSheet.create({\n    rowContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    smallContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    row2: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        height: 46,\n        borderBottomColor: '#00000030',\n        borderBottomWidth: 0.5,\n        padding: 5,\n    },\n    container: {\n        width: 550,\n        paddingHorizontal: 50,\n        paddingVertical: 30,\n        marginVertical: 30,\n        alignSelf: 'center',\n    },\n    Tag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: 'white',\n        borderWidth: 0.1,\n        height: 25,\n        justifyContent: 'center',\n    },\n    TagFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    ButtonTag: {\n        marginHorizontal: 5,\n        borderRadius: 20,\n        borderColor: '#979797',\n        height: 25,\n        borderWidth: 0.1,\n    },\n    titleFont: {\n        fontWeight: '700',\n        fontSize: 14,\n        lineHeight: 24,\n        color: '#979797',\n        textAlign: 'left',\n    },\n    buttonFont: {\n        fontSize: 12,\n        color: 'black',\n    },\n});\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport PaySubscribe from '../screens/payment/subscribe/PaySubscribe';\nimport SubscribePlanHome from '../screens/payment/subscribe';\n\nconst SubscribeStack = createStackNavigator();\n\nexport const SubscribeStackScreens: React.FC = () => (\n    <SubscribeStack.Navigator headerMode=\"none\">\n        <SubscribeStack.Screen name=\"SubscribePlanHome\" component={SubscribePlanHome} />\n        <SubscribeStack.Screen name=\"PaySubscribe\" component={PaySubscribe} />\n    </SubscribeStack.Navigator>\n);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { PaymentStackScreens } from './PaymentStack';\nimport { SubscribeStackScreens } from './SubscribeStack';\n\nconst Routes: React.FC = () => {\n    return (\n        <NavigationContainer>\n            {/* <PaymentStackScreens /> */}\n            <SubscribeStackScreens />\n        </NavigationContainer>\n    );\n};\n\nexport default Routes;\n","import { ApolloProvider } from '@apollo/client';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport apolloClient from './client';\nimport Routes from './src/navigation/Routes';\nimport { NavigationContainer } from '@react-navigation/native';\nimport PayPointHomeScreen from './src/screens/payment/point';\nimport { Button, Header, Icon } from 'react-native-elements';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default function App() {\n    return (\n        <ApolloProvider client={apolloClient}>\n            <SafeAreaProvider>\n                <Routes />\n            </SafeAreaProvider>\n        </ApolloProvider>\n    );\n}\n"],"sourceRoot":""}